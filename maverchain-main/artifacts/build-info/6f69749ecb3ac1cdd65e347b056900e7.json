{"id":"6f69749ecb3ac1cdd65e347b056900e7","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/Hashes.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library of standard hash functions.\n *\n * _Available since v5.1._\n */\nlibrary Hashes {\n    /**\n     * @dev Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs.\n     *\n     * NOTE: Equivalent to the `standardNodeHash` in our https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n     */\n    function commutativeKeccak256(bytes32 a, bytes32 b) internal pure returns (bytes32) {\n        return a < b ? efficientKeccak256(a, b) : efficientKeccak256(b, a);\n    }\n\n    /**\n     * @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory.\n     */\n    function efficientKeccak256(bytes32 a, bytes32 b) internal pure returns (bytes32 value) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MerkleProof.sol)\n// This file was procedurally generated from scripts/generate/templates/MerkleProof.js.\n\npragma solidity ^0.8.20;\n\nimport {Hashes} from \"./Hashes.sol\";\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the Merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates Merkle trees that are safe\n * against this attack out of the box.\n *\n * IMPORTANT: Consider memory side-effects when using custom hashing functions\n * that access memory in an unsafe way.\n *\n * NOTE: This library supports proof verification for merkle trees built using\n * custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving\n * leaf inclusion in trees built using non-commutative hashing functions requires\n * additional logic that is not supported by this library.\n */\nlibrary MerkleProof {\n    /**\n     *@dev The multiproof provided is not valid.\n     */\n    error MerkleProofInvalidMultiproof();\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with the default hashing function.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with the default hashing function.\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = Hashes.commutativeKeccak256(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with a custom hashing function.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processProof(proof, leaf, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with a custom hashing function.\n     */\n    function processProof(\n        bytes32[] memory proof,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = hasher(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with the default hashing function.\n     */\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with the default hashing function.\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = Hashes.commutativeKeccak256(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with a custom hashing function.\n     */\n    function verifyCalldata(\n        bytes32[] calldata proof,\n        bytes32 root,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processProofCalldata(proof, leaf, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with a custom hashing function.\n     */\n    function processProofCalldata(\n        bytes32[] calldata proof,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = hasher(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in memory with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProof}.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in memory with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = Hashes.commutativeKeccak256(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in memory with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProof}.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in memory with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = hasher(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in calldata with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProofCalldata}.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in calldata with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = Hashes.commutativeKeccak256(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in calldata with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProofCalldata}.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in calldata with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = hasher(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/DrugVerification.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\n/**\n * @title DrugVerification\n * @dev Enhanced contract for drug verification using Merkle proofs with advanced security\n * @notice Implements comprehensive drug authentication and verification system\n */\ncontract DrugVerification is AccessControl, ReentrancyGuard {\n    \n    bytes32 public constant VERIFIER_ROLE = keccak256(\"VERIFIER_ROLE\");\n    bytes32 public constant BATCH_CREATOR_ROLE = keccak256(\"BATCH_CREATOR_ROLE\");\n    \n    struct DrugData {\n        string name;\n        string drugCode; // WHO/FDA drug code\n        string manufacturer;\n        uint256 batchNumber;\n        uint256 manufactureDate;\n        uint256 expiryDate;\n        string regulatoryApproval; // FDA/WHO approval number\n        string additionalData;\n    }\n    \n    struct BatchInfo {\n        bytes32 merkleRoot;\n        address creator;\n        uint256 timestamp;\n        uint256 drugCount;\n        bool isActive;\n        string description;\n    }\n    \n    mapping(bytes32 => BatchInfo) public batchInfo;\n    mapping(bytes32 => bool) public verifiedDrugs;\n    mapping(bytes32 => uint256) public drugVerificationCount;\n    mapping(address => uint256) public verifierCount;\n    \n    event DrugBatchCreated(\n        bytes32 indexed batchHash,\n        bytes32 merkleRoot,\n        address indexed creator,\n        uint256 drugCount,\n        uint256 timestamp\n    );\n    \n    event DrugVerificationResult(\n        bytes32 indexed drugHash,\n        bytes32 indexed batchHash,\n        bool isValid,\n        address indexed verifier,\n        uint256 timestamp\n    );\n    \n    event BatchDeactivated(\n        bytes32 indexed batchHash,\n        address indexed deactivator,\n        string reason\n    );\n\n    modifier onlyVerifier() {\n        require(hasRole(VERIFIER_ROLE, msg.sender) || hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \n                \"Unauthorized verifier\");\n        _;\n    }\n\n    modifier onlyBatchCreator() {\n        require(hasRole(BATCH_CREATOR_ROLE, msg.sender) || hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \n                \"Unauthorized batch creator\");\n        _;\n    }\n\n    constructor() {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(VERIFIER_ROLE, msg.sender);\n        _grantRole(BATCH_CREATOR_ROLE, msg.sender);\n    }\n    \n    function createBatchWithMerkleRoot(\n        bytes32 _batchHash,\n        bytes32 _merkleRoot,\n        uint256 _drugCount,\n        string memory _description\n    ) external onlyBatchCreator nonReentrant {\n        require(_merkleRoot != bytes32(0), \"Invalid merkle root\");\n        require(_drugCount > 0, \"Drug count must be positive\");\n        require(!batchInfo[_batchHash].isActive, \"Batch already exists\");\n        \n        batchInfo[_batchHash] = BatchInfo({\n            merkleRoot: _merkleRoot,\n            creator: msg.sender,\n            timestamp: block.timestamp,\n            drugCount: _drugCount,\n            isActive: true,\n            description: _description\n        });\n        \n        emit DrugBatchCreated(_batchHash, _merkleRoot, msg.sender, _drugCount, block.timestamp);\n    }\n    \n    function verifyDrugInBatch(\n        bytes32 _batchHash,\n        bytes32 _drugHash,\n        bytes32[] memory _proof\n    ) external onlyVerifier nonReentrant returns (bool) {\n        BatchInfo storage batch = batchInfo[_batchHash];\n        require(batch.isActive, \"Batch not found or inactive\");\n        require(batch.merkleRoot != bytes32(0), \"Invalid batch\");\n        \n        bool isValid = MerkleProof.verify(_proof, batch.merkleRoot, _drugHash);\n        \n        if (isValid) {\n            verifiedDrugs[_drugHash] = true;\n            drugVerificationCount[_drugHash]++;\n            verifierCount[msg.sender]++;\n        }\n        \n        emit DrugVerificationResult(_drugHash, _batchHash, isValid, msg.sender, block.timestamp);\n        return isValid;\n    }\n    \n    function deactivateBatch(\n        bytes32 _batchHash, \n        string memory _reason\n    ) external onlyBatchCreator {\n        require(batchInfo[_batchHash].isActive, \"Batch not active\");\n        \n        batchInfo[_batchHash].isActive = false;\n        emit BatchDeactivated(_batchHash, msg.sender, _reason);\n    }\n    \n    function isDrugVerified(bytes32 _drugHash) external view returns (bool) {\n        return verifiedDrugs[_drugHash];\n    }\n    \n    function getBatchInfo(bytes32 _batchHash) external view returns (BatchInfo memory) {\n        return batchInfo[_batchHash];\n    }\n    \n    function getDrugVerificationCount(bytes32 _drugHash) external view returns (uint256) {\n        return drugVerificationCount[_drugHash];\n    }\n    \n    // Enhanced utility function to generate drug hash with more comprehensive data\n    function generateDrugHash(DrugData memory _drug) public pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\n            _drug.name,\n            _drug.drugCode,\n            _drug.manufacturer,\n            _drug.batchNumber,\n            _drug.manufactureDate,\n            _drug.expiryDate,\n            _drug.regulatoryApproval,\n            _drug.additionalData\n        ));\n    }\n    \n    // Batch hash generator for consistency\n    function generateBatchHash(\n        string memory _batchName,\n        address _manufacturer,\n        uint256 _timestamp\n    ) public pure returns (bytes32) {\n        return keccak256(abi.encodePacked(_batchName, _manufacturer, _timestamp));\n    }\n}\n"},"contracts/IPFSStorage.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\n/**\n * @title IPFSStorage\n * @dev Enhanced utility contract for managing IPFS hashes and metadata with access control\n * @notice Manages decentralized storage references with enhanced security and validation\n */\ncontract IPFSStorage is AccessControl, ReentrancyGuard {\n    \n    bytes32 public constant UPLOADER_ROLE = keccak256(\"UPLOADER_ROLE\");\n    bytes32 public constant MODERATOR_ROLE = keccak256(\"MODERATOR_ROLE\");\n    \n    struct IPFSData {\n        string hash;\n        uint256 timestamp;\n        address uploader;\n        string metadata;\n        string category; // Enhanced: Drug data, health record, etc.\n        uint256 fileSize; // Enhanced: File size tracking\n        bool exists;\n        bool isActive; // Enhanced: Deactivation capability\n        string checksum; // Enhanced: File integrity verification\n    }\n    \n    mapping(bytes32 => IPFSData) public ipfsData;\n    mapping(address => bytes32[]) public userUploads;\n    mapping(string => bool) public usedHashes; // Enhanced: Prevent duplicate hashes\n    mapping(string => bytes32) public hashToKey; // Enhanced: Hash lookup\n    \n    uint256 public totalUploads;\n    uint256 public maxFileSize = 50 * 1024 * 1024; // 50MB default limit\n    \n    event IPFSHashStored(\n        bytes32 indexed key,\n        string ipfsHash,\n        address indexed uploader,\n        string category,\n        uint256 timestamp\n    );\n    \n    event IPFSDataDeactivated(\n        bytes32 indexed key,\n        address indexed deactivator,\n        string reason\n    );\n    \n    event MaxFileSizeUpdated(\n        uint256 oldSize,\n        uint256 newSize,\n        address updatedBy\n    );\n\n    modifier onlyUploader() {\n        require(hasRole(UPLOADER_ROLE, msg.sender) || hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \n                \"Unauthorized uploader\");\n        _;\n    }\n\n    modifier onlyModerator() {\n        require(hasRole(MODERATOR_ROLE, msg.sender) || hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \n                \"Unauthorized moderator\");\n        _;\n    }\n\n    constructor() {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(UPLOADER_ROLE, msg.sender);\n        _grantRole(MODERATOR_ROLE, msg.sender);\n    }\n    \n    function storeIPFSHash(\n        bytes32 _key,\n        string memory _ipfsHash,\n        string memory _metadata,\n        string memory _category,\n        uint256 _fileSize,\n        string memory _checksum\n    ) external onlyUploader nonReentrant {\n        require(bytes(_ipfsHash).length > 0, \"IPFS hash cannot be empty\");\n        require(!ipfsData[_key].exists, \"Key already exists\");\n        require(!usedHashes[_ipfsHash], \"IPFS hash already used\");\n        require(_fileSize <= maxFileSize, \"File size exceeds limit\");\n        require(bytes(_checksum).length > 0, \"Checksum required\");\n        \n        ipfsData[_key] = IPFSData({\n            hash: _ipfsHash,\n            timestamp: block.timestamp,\n            uploader: msg.sender,\n            metadata: _metadata,\n            category: _category,\n            fileSize: _fileSize,\n            exists: true,\n            isActive: true,\n            checksum: _checksum\n        });\n        \n        userUploads[msg.sender].push(_key);\n        usedHashes[_ipfsHash] = true;\n        hashToKey[_ipfsHash] = _key;\n        totalUploads++;\n        \n        emit IPFSHashStored(_key, _ipfsHash, msg.sender, _category, block.timestamp);\n    }\n    \n    function deactivateIPFSData(\n        bytes32 _key, \n        string memory _reason\n    ) external onlyModerator {\n        require(ipfsData[_key].exists, \"IPFS data does not exist\");\n        require(ipfsData[_key].isActive, \"IPFS data already inactive\");\n        \n        ipfsData[_key].isActive = false;\n        emit IPFSDataDeactivated(_key, msg.sender, _reason);\n    }\n    \n    function updateMaxFileSize(uint256 _newMaxSize) external {\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Admin only\");\n        require(_newMaxSize > 0, \"Invalid file size\");\n        \n        uint256 oldSize = maxFileSize;\n        maxFileSize = _newMaxSize;\n        \n        emit MaxFileSizeUpdated(oldSize, _newMaxSize, msg.sender);\n    }\n    \n    function getIPFSHash(bytes32 _key) external view returns (string memory) {\n        require(ipfsData[_key].exists, \"IPFS data does not exist\");\n        require(ipfsData[_key].isActive, \"IPFS data is inactive\");\n        return ipfsData[_key].hash;\n    }\n    \n    function getIPFSData(bytes32 _key) external view returns (IPFSData memory) {\n        require(ipfsData[_key].exists, \"IPFS data does not exist\");\n        return ipfsData[_key];\n    }\n    \n    function getActiveIPFSData(bytes32 _key) external view returns (IPFSData memory) {\n        require(ipfsData[_key].exists, \"IPFS data does not exist\");\n        require(ipfsData[_key].isActive, \"IPFS data is inactive\");\n        return ipfsData[_key];\n    }\n    \n    function getUserUploads(address _user) external view returns (bytes32[] memory) {\n        return userUploads[_user];\n    }\n    \n    function getKeyByHash(string memory _ipfsHash) external view returns (bytes32) {\n        require(usedHashes[_ipfsHash], \"Hash not found\");\n        return hashToKey[_ipfsHash];\n    }\n    \n    function isHashUsed(string memory _ipfsHash) external view returns (bool) {\n        return usedHashes[_ipfsHash];\n    }\n    \n    function getTotalUploads() external view returns (uint256) {\n        return totalUploads;\n    }\n    \n    function verifyChecksum(bytes32 _key, string memory _checksum) external view returns (bool) {\n        require(ipfsData[_key].exists, \"IPFS data does not exist\");\n        return keccak256(abi.encodePacked(ipfsData[_key].checksum)) == keccak256(abi.encodePacked(_checksum));\n    }\n}\n"},"contracts/MedChain.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\n\n/**\n * @title MedChain\n * @dev Enhanced Decentralized Drug Supply Chain & Health Record Management System\n * @notice This contract manages the complete pharmaceutical supply chain with enhanced security\n */\ncontract MedChain is AccessControl, ReentrancyGuard, Pausable {\n    \n    // Role definitions\n    bytes32 public constant MANUFACTURER_ROLE = keccak256(\"MANUFACTURER_ROLE\");\n    bytes32 public constant DISTRIBUTOR_ROLE = keccak256(\"DISTRIBUTOR_ROLE\");\n    bytes32 public constant HOSPITAL_ROLE = keccak256(\"HOSPITAL_ROLE\");\n    bytes32 public constant PATIENT_ROLE = keccak256(\"PATIENT_ROLE\");\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n\n    // Enums\n    enum DrugStatus { \n        Manufactured, \n        WithDistributor, \n        WithHospital, \n        DispensedToPatient, \n        Expired \n    }\n    \n    enum HospitalType { Urban, Rural }\n    enum RequestStatus { Pending, Approved, Rejected, Fulfilled }\n\n    // Structs\n    struct DrugBatch {\n        uint256 batchId;\n        string drugName;\n        string drugCode; // Enhanced: WHO drug code\n        address manufacturer;\n        bytes32 merkleRoot;\n        string ipfsHash;\n        uint256 quantity;\n        uint256 originalQuantity; // Enhanced: Track original quantity\n        uint256 manufactureDate;\n        uint256 expiryDate;\n        DrugStatus status;\n        address currentHolder;\n        uint256 transferCount; // Enhanced: Track number of transfers\n        bool isRecalled; // Enhanced: Drug recall functionality\n        string regulatoryApproval; // Enhanced: FDA/WHO approval number\n    }\n\n    struct Hospital {\n        address hospitalAddress;\n        string name;\n        string registrationNumber; // Enhanced: Hospital registration\n        HospitalType hospitalType;\n        uint256 stockCount;\n        uint256 stockThreshold;\n        bool isActive;\n        bool isVerified; // Enhanced: Hospital verification status\n        uint256 capacity; // Enhanced: Hospital capacity\n    }\n\n    struct DrugRequest {\n        uint256 requestId;\n        address hospital;\n        address distributor;\n        uint256 batchId;\n        uint256 quantity;\n        RequestStatus status;\n        uint256 timestamp;\n        uint256 priorityScore; // Enhanced: Priority scoring\n        string reason;\n        string urgencyLevel; // Enhanced: Emergency/Normal/Low\n    }\n\n    struct HealthRecord {\n        address patient;\n        string ipfsHash;\n        uint256 lastUpdated;\n        bool exists;\n    }\n\n    struct ExpiredDrugReport {\n        uint256 reportId;\n        uint256 batchId;\n        address reporter;\n        string ipfsHash;\n        uint256 timestamp;\n        bool verified;\n    }\n\n    // State variables\n    uint256 private nextBatchId = 1;\n    uint256 private nextRequestId = 1;\n    uint256 private nextReportId = 1;\n    \n    // Rural to Urban priority ratio (2:1)\n    uint256 public constant RURAL_PRIORITY_MULTIPLIER = 2;\n\n    // Mappings\n    mapping(uint256 => DrugBatch) public drugBatches;\n    mapping(address => Hospital) public hospitals;\n    mapping(uint256 => DrugRequest) public drugRequests;\n    mapping(address => HealthRecord) public healthRecords;\n    mapping(uint256 => ExpiredDrugReport) public expiredReports;\n    mapping(bytes32 => bool) public whoApprovedDrugs;\n    mapping(address => uint256[]) public hospitalRequests;\n    mapping(address => uint256[]) public patientBatches;\n\n    // Events\n    event DrugBatchCreated(\n        uint256 indexed batchId,\n        string drugName,\n        address indexed manufacturer,\n        bytes32 merkleRoot,\n        uint256 quantity\n    );\n    \n    event DrugTransferred(\n        uint256 indexed batchId,\n        address indexed from,\n        address indexed to,\n        DrugStatus newStatus\n    );\n    \n    event DrugVerified(\n        uint256 indexed batchId,\n        address indexed verifier,\n        bool isValid\n    );\n    \n    event HospitalRegistered(\n        address indexed hospital,\n        string name,\n        HospitalType hospitalType\n    );\n    \n    event DrugRequested(\n        uint256 indexed requestId,\n        address indexed hospital,\n        address indexed distributor,\n        uint256 quantity\n    );\n    \n    event StockThresholdReached(\n        address indexed hospital,\n        uint256 currentStock,\n        uint256 threshold\n    );\n    \n    event HealthRecordUpdated(\n        address indexed patient,\n        string ipfsHash,\n        uint256 timestamp\n    );\n    \n    event ExpiredDrugReported(\n        uint256 indexed reportId,\n        uint256 indexed batchId,\n        address indexed reporter\n    );\n\n    // Modifiers\n    modifier onlyManufacturer() {\n        require(hasRole(MANUFACTURER_ROLE, msg.sender), \"Only manufacturer can call this function\");\n        _;\n    }\n    \n    modifier onlyDistributor() {\n        require(hasRole(DISTRIBUTOR_ROLE, msg.sender), \"Only distributor can call this function\");\n        _;\n    }\n    \n    modifier onlyHospital() {\n        require(hasRole(HOSPITAL_ROLE, msg.sender), \"Only hospital can call this function\");\n        _;\n    }\n    \n    modifier onlyPatient() {\n        require(hasRole(PATIENT_ROLE, msg.sender), \"Only patient can call this function\");\n        _;\n    }\n    \n    modifier onlyAdmin() {\n        require(hasRole(ADMIN_ROLE, msg.sender), \"Only admin can call this function\");\n        _;\n    }\n\n    modifier validBatch(uint256 _batchId) {\n        require(_batchId > 0 && _batchId < nextBatchId, \"Invalid batch ID\");\n        _;\n    }\n\n    constructor() {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(ADMIN_ROLE, msg.sender);\n    }\n\n    // Role Management Functions\n    function grantManufacturerRole(address account) external onlyAdmin {\n        _grantRole(MANUFACTURER_ROLE, account);\n    }\n    \n    function grantDistributorRole(address account) external onlyAdmin {\n        _grantRole(DISTRIBUTOR_ROLE, account);\n    }\n    \n    function grantHospitalRole(address account) external onlyAdmin {\n        _grantRole(HOSPITAL_ROLE, account);\n    }\n    \n    function grantPatientRole(address account) external onlyAdmin {\n        _grantRole(PATIENT_ROLE, account);\n    }\n\n    // Enhanced Drug Lifecycle Functions\n    function createDrugBatch(\n        string memory _drugName,\n        string memory _drugCode,\n        string memory _regulatoryApproval,\n        bytes32 _merkleRoot,\n        string memory _ipfsHash,\n        uint256 _quantity,\n        uint256 _expiryDate\n    ) external onlyManufacturer whenNotPaused returns (uint256) {\n        require(_quantity > 0, \"Quantity must be greater than 0\");\n        require(_expiryDate > block.timestamp, \"Expiry date must be in the future\");\n        require(bytes(_drugName).length > 0, \"Drug name cannot be empty\");\n        require(bytes(_drugCode).length > 0, \"Drug code cannot be empty\");\n        require(bytes(_ipfsHash).length > 0, \"IPFS hash cannot be empty\");\n        require(bytes(_regulatoryApproval).length > 0, \"Regulatory approval required\");\n        \n        uint256 batchId = nextBatchId++;\n        \n        drugBatches[batchId] = DrugBatch({\n            batchId: batchId,\n            drugName: _drugName,\n            drugCode: _drugCode,\n            manufacturer: msg.sender,\n            merkleRoot: _merkleRoot,\n            ipfsHash: _ipfsHash,\n            quantity: _quantity,\n            originalQuantity: _quantity,\n            manufactureDate: block.timestamp,\n            expiryDate: _expiryDate,\n            status: DrugStatus.Manufactured,\n            currentHolder: msg.sender,\n            transferCount: 0,\n            isRecalled: false,\n            regulatoryApproval: _regulatoryApproval\n        });\n        \n        emit DrugBatchCreated(batchId, _drugName, msg.sender, _merkleRoot, _quantity);\n        return batchId;\n    }\n\n    function transferToDistributor(\n        uint256 _batchId,\n        address _distributor\n    ) external onlyManufacturer validBatch(_batchId) whenNotPaused nonReentrant {\n        require(hasRole(DISTRIBUTOR_ROLE, _distributor), \"Invalid distributor address\");\n        require(drugBatches[_batchId].manufacturer == msg.sender, \"Only batch manufacturer can transfer\");\n        require(drugBatches[_batchId].status == DrugStatus.Manufactured, \"Invalid batch status\");\n        require(!drugBatches[_batchId].isRecalled, \"Cannot transfer recalled batch\");\n        require(block.timestamp < drugBatches[_batchId].expiryDate, \"Cannot transfer expired batch\");\n        \n        drugBatches[_batchId].status = DrugStatus.WithDistributor;\n        drugBatches[_batchId].currentHolder = _distributor;\n        drugBatches[_batchId].transferCount++;\n        \n        emit DrugTransferred(_batchId, msg.sender, _distributor, DrugStatus.WithDistributor);\n    }\n\n    function transferToHospital(\n        uint256 _batchId,\n        address _hospital\n    ) external onlyDistributor validBatch(_batchId) {\n        require(hasRole(HOSPITAL_ROLE, _hospital), \"Invalid hospital address\");\n        require(drugBatches[_batchId].currentHolder == msg.sender, \"Only current holder can transfer\");\n        require(drugBatches[_batchId].status == DrugStatus.WithDistributor, \"Invalid batch status\");\n        require(hospitals[_hospital].isActive, \"Hospital is not active\");\n        \n        drugBatches[_batchId].status = DrugStatus.WithHospital;\n        drugBatches[_batchId].currentHolder = _hospital;\n        \n        // Update hospital stock\n        hospitals[_hospital].stockCount += drugBatches[_batchId].quantity;\n        \n        emit DrugTransferred(_batchId, msg.sender, _hospital, DrugStatus.WithHospital);\n    }\n\n    function dispenseToPatient(\n        uint256 _batchId,\n        address _patient,\n        uint256 _quantity\n    ) external onlyHospital validBatch(_batchId) {\n        require(hasRole(PATIENT_ROLE, _patient), \"Invalid patient address\");\n        require(drugBatches[_batchId].currentHolder == msg.sender, \"Only current holder can dispense\");\n        require(drugBatches[_batchId].status == DrugStatus.WithHospital, \"Invalid batch status\");\n        require(_quantity <= drugBatches[_batchId].quantity, \"Insufficient quantity\");\n        \n        drugBatches[_batchId].quantity -= _quantity;\n        \n        if (drugBatches[_batchId].quantity == 0) {\n            drugBatches[_batchId].status = DrugStatus.DispensedToPatient;\n        }\n        \n        // Update hospital stock\n        hospitals[msg.sender].stockCount -= _quantity;\n        \n        // Add to patient's batch history\n        patientBatches[_patient].push(_batchId);\n        \n        // Check stock threshold\n        Hospital memory hospital = hospitals[msg.sender];\n        if (hospital.stockCount <= hospital.stockThreshold) {\n            emit StockThresholdReached(msg.sender, hospital.stockCount, hospital.stockThreshold);\n        }\n        \n        emit DrugTransferred(_batchId, msg.sender, _patient, DrugStatus.DispensedToPatient);\n    }\n\n    // Drug Verification Functions\n    function verifyDrug(\n        uint256 _batchId,\n        bytes32 _leaf,\n        bytes32[] memory _proof\n    ) public view validBatch(_batchId) returns (bool) {\n        bytes32 root = drugBatches[_batchId].merkleRoot;\n        return MerkleProof.verify(_proof, root, _leaf);\n    }\n\n    function verifyAndLog(\n        uint256 _batchId,\n        bytes32 _leaf,\n        bytes32[] memory _proof\n    ) external validBatch(_batchId) returns (bool) {\n        bool isValid = verifyDrug(_batchId, _leaf, _proof);\n        emit DrugVerified(_batchId, msg.sender, isValid);\n        return isValid;\n    }\n\n    // Hospital Management Functions\n    function registerHospital(\n        address _hospital,\n        string memory _name,\n        string memory _registrationNumber,\n        HospitalType _hospitalType,\n        uint256 _stockThreshold,\n        uint256 _capacity\n    ) external onlyAdmin {\n        require(!hospitals[_hospital].isActive, \"Hospital already registered\");\n        require(bytes(_name).length > 0, \"Hospital name cannot be empty\");\n        require(bytes(_registrationNumber).length > 0, \"Registration number required\");\n        require(_capacity > 0, \"Hospital capacity must be positive\");\n        \n        hospitals[_hospital] = Hospital({\n            hospitalAddress: _hospital,\n            name: _name,\n            registrationNumber: _registrationNumber,\n            hospitalType: _hospitalType,\n            stockCount: 0,\n            stockThreshold: _stockThreshold,\n            isActive: true,\n            isVerified: true,\n            capacity: _capacity\n        });\n        \n        _grantRole(HOSPITAL_ROLE, _hospital);\n        emit HospitalRegistered(_hospital, _name, _hospitalType);\n    }\n\n    // Drug Request Functions\n    function requestDrugs(\n        address _distributor,\n        uint256 _batchId,\n        uint256 _quantity,\n        string memory _reason,\n        string memory _urgencyLevel\n    ) external onlyHospital returns (uint256) {\n        require(hasRole(DISTRIBUTOR_ROLE, _distributor), \"Invalid distributor address\");\n        require(hospitals[msg.sender].isActive, \"Hospital is not active\");\n        require(_quantity > 0, \"Quantity must be greater than 0\");\n        require(bytes(_reason).length > 0, \"Reason cannot be empty\");\n        require(bytes(_urgencyLevel).length > 0, \"Urgency level required\");\n        \n        uint256 requestId = nextRequestId++;\n        \n        // Calculate priority score directly\n        Hospital memory hospital = hospitals[msg.sender];\n        uint256 priorityScore;\n        if (hospital.hospitalType == HospitalType.Rural) {\n            priorityScore = hospital.stockThreshold * RURAL_PRIORITY_MULTIPLIER;\n        } else {\n            priorityScore = hospital.stockThreshold;\n        }\n        \n        drugRequests[requestId] = DrugRequest({\n            requestId: requestId,\n            hospital: msg.sender,\n            distributor: _distributor,\n            batchId: _batchId,\n            quantity: _quantity,\n            status: RequestStatus.Pending,\n            timestamp: block.timestamp,\n            priorityScore: priorityScore,\n            reason: _reason,\n            urgencyLevel: _urgencyLevel\n        });\n        \n        hospitalRequests[msg.sender].push(requestId);\n        \n        emit DrugRequested(requestId, msg.sender, _distributor, _quantity);\n        return requestId;\n    }\n\n    function approveRequest(uint256 _requestId) external onlyDistributor {\n        require(_requestId > 0 && _requestId < nextRequestId, \"Invalid request ID\");\n        require(drugRequests[_requestId].distributor == msg.sender, \"Only assigned distributor can approve\");\n        require(drugRequests[_requestId].status == RequestStatus.Pending, \"Request already processed\");\n        \n        drugRequests[_requestId].status = RequestStatus.Approved;\n    }\n\n    function rejectRequest(uint256 _requestId) external onlyDistributor {\n        require(_requestId > 0 && _requestId < nextRequestId, \"Invalid request ID\");\n        require(drugRequests[_requestId].distributor == msg.sender, \"Only assigned distributor can reject\");\n        require(drugRequests[_requestId].status == RequestStatus.Pending, \"Request already processed\");\n        \n        drugRequests[_requestId].status = RequestStatus.Rejected;\n    }\n\n    // WHO Approved Drugs Functions\n    function addWHOApprovedDrug(bytes32 _drugHash) external onlyAdmin {\n        whoApprovedDrugs[_drugHash] = true;\n    }\n\n    function removeWHOApprovedDrug(bytes32 _drugHash) external onlyAdmin {\n        whoApprovedDrugs[_drugHash] = false;\n    }\n\n    function isWHOApproved(bytes32 _drugHash) external view returns (bool) {\n        return whoApprovedDrugs[_drugHash];\n    }\n\n    // Expired Drug Reporting Functions\n    function reportExpiredDrug(\n        uint256 _batchId,\n        string memory _evidenceIpfsHash\n    ) external onlyHospital validBatch(_batchId) returns (uint256) {\n        require(drugBatches[_batchId].currentHolder == msg.sender, \"Only current holder can report\");\n        require(bytes(_evidenceIpfsHash).length > 0, \"Evidence IPFS hash cannot be empty\");\n        \n        uint256 reportId = nextReportId++;\n        \n        expiredReports[reportId] = ExpiredDrugReport({\n            reportId: reportId,\n            batchId: _batchId,\n            reporter: msg.sender,\n            ipfsHash: _evidenceIpfsHash,\n            timestamp: block.timestamp,\n            verified: false\n        });\n        \n        // Mark drug as expired\n        drugBatches[_batchId].status = DrugStatus.Expired;\n        \n        emit ExpiredDrugReported(reportId, _batchId, msg.sender);\n        return reportId;\n    }\n\n    function verifyExpiredReport(uint256 _reportId) external onlyAdmin {\n        require(_reportId > 0 && _reportId < nextReportId, \"Invalid report ID\");\n        expiredReports[_reportId].verified = true;\n    }\n\n    // Health Record Functions\n    function updateHealthRecord(\n        address _patient,\n        string memory _ipfsHash\n    ) external onlyHospital {\n        require(hasRole(PATIENT_ROLE, _patient), \"Invalid patient address\");\n        require(bytes(_ipfsHash).length > 0, \"IPFS hash cannot be empty\");\n        \n        healthRecords[_patient] = HealthRecord({\n            patient: _patient,\n            ipfsHash: _ipfsHash,\n            lastUpdated: block.timestamp,\n            exists: true\n        });\n        \n        emit HealthRecordUpdated(_patient, _ipfsHash, block.timestamp);\n    }\n\n    function getHealthRecord(address _patient) external view returns (string memory) {\n        require(\n            msg.sender == _patient || \n            hasRole(HOSPITAL_ROLE, msg.sender) || \n            hasRole(ADMIN_ROLE, msg.sender),\n            \"Unauthorized access to health record\"\n        );\n        require(healthRecords[_patient].exists, \"Health record does not exist\");\n        \n        return healthRecords[_patient].ipfsHash;\n    }\n\n    // Stock Management Functions\n    function updateStockThreshold(\n        address _hospital,\n        uint256 _newThreshold\n    ) external onlyAdmin {\n        require(hospitals[_hospital].isActive, \"Hospital is not active\");\n        hospitals[_hospital].stockThreshold = _newThreshold;\n    }\n\n    function emergencyStockOverride(\n        address _hospital,\n        uint256 _newStock\n    ) external onlyAdmin {\n        require(hospitals[_hospital].isActive, \"Hospital is not active\");\n        hospitals[_hospital].stockCount = _newStock;\n    }\n\n    // View Functions\n    function getDrugBatch(uint256 _batchId) external view validBatch(_batchId) returns (DrugBatch memory) {\n        return drugBatches[_batchId];\n    }\n\n    function getHospital(address _hospital) external view returns (Hospital memory) {\n        return hospitals[_hospital];\n    }\n\n    function getDrugRequest(uint256 _requestId) external view returns (DrugRequest memory) {\n        require(_requestId > 0 && _requestId < nextRequestId, \"Invalid request ID\");\n        return drugRequests[_requestId];\n    }\n\n    function getExpiredReport(uint256 _reportId) external view returns (ExpiredDrugReport memory) {\n        require(_reportId > 0 && _reportId < nextReportId, \"Invalid report ID\");\n        return expiredReports[_reportId];\n    }\n\n    function getHospitalRequests(address _hospital) external view returns (uint256[] memory) {\n        return hospitalRequests[_hospital];\n    }\n\n    function getPatientBatches(address _patient) external view returns (uint256[] memory) {\n        return patientBatches[_patient];\n    }\n\n    function getCurrentBatchId() external view returns (uint256) {\n        return nextBatchId - 1;\n    }\n\n    function getCurrentRequestId() external view returns (uint256) {\n        return nextRequestId - 1;\n    }\n\n    function getCurrentReportId() external view returns (uint256) {\n        return nextReportId - 1;\n    }\n\n    // Enhanced: Emergency pause functionality\n    function pause() external onlyAdmin {\n        _pause();\n    }\n    \n    function unpause() external onlyAdmin {\n        _unpause();\n    }\n    \n    // Enhanced: Drug recall functionality\n    function recallDrugBatch(\n        uint256 _batchId,\n        string memory _reason\n    ) external onlyAdmin validBatch(_batchId) {\n        require(!drugBatches[_batchId].isRecalled, \"Batch already recalled\");\n        \n        drugBatches[_batchId].isRecalled = true;\n        emit DrugRecalled(_batchId, msg.sender, _reason);\n    }\n    \n    // Enhanced: Batch quality check\n    function isValidBatch(uint256 _batchId) external view returns (bool) {\n        if (_batchId == 0 || _batchId >= nextBatchId) return false;\n        \n        DrugBatch memory batch = drugBatches[_batchId];\n        return !batch.isRecalled && \n               block.timestamp < batch.expiryDate &&\n               batch.quantity > 0;\n    }\n    \n    // Enhanced: Get batch transfer history count\n    function getBatchTransferCount(uint256 _batchId) external view validBatch(_batchId) returns (uint256) {\n        return drugBatches[_batchId].transferCount;\n    }\n    \n    // Enhanced: Check if batch is recalled\n    function isBatchRecalled(uint256 _batchId) external view validBatch(_batchId) returns (bool) {\n        return drugBatches[_batchId].isRecalled;\n    }\n\n    // Priority logic for rural vs urban hospitals\n    function calculatePriority(address _hospital) external view returns (uint256) {\n        Hospital memory hospital = hospitals[_hospital];\n        if (hospital.hospitalType == HospitalType.Rural) {\n            return hospital.stockThreshold * RURAL_PRIORITY_MULTIPLIER;\n        }\n        return hospital.stockThreshold;\n    }\n    \n    // Enhanced events\n    event DrugRecalled(\n        uint256 indexed batchId,\n        address indexed recaller,\n        string reason\n    );\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[296],"Context":[409],"ERC165":[1723],"IAccessControl":[379],"IERC165":[1735]},"id":297,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":380,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":410,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":8,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":1724,"src":"233:66:0","symbolAliases":[{"foreign":{"id":6,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"241:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":7,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"250:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":10,"name":"Context","nameLocations":["1997:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":409,"src":"1997:7:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"1997:7:0"},{"baseName":{"id":12,"name":"IAccessControl","nameLocations":["2006:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"2006:14:0"},"id":13,"nodeType":"InheritanceSpecifier","src":"2006:14:0"},{"baseName":{"id":14,"name":"ERC165","nameLocations":["2022:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":1723,"src":"2022:6:0"},"id":15,"nodeType":"InheritanceSpecifier","src":"2022:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"301:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":296,"linearizedBaseContracts":[296,1723,1735,379,409],"name":"AccessControl","nameLocation":"1980:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":22,"members":[{"constant":false,"id":19,"mutability":"mutable","name":"hasRole","nameLocation":"2094:7:0","nodeType":"VariableDeclaration","scope":22,"src":"2061:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":18,"keyName":"account","keyNameLocation":"2077:7:0","keyType":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"2069:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2061:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":17,"name":"bool","nodeType":"ElementaryTypeName","src":"2088:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"adminRole","nameLocation":"2119:9:0","nodeType":"VariableDeclaration","scope":22,"src":"2111:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2042:8:0","nodeType":"StructDefinition","scope":296,"src":"2035:100:0","visibility":"public"},{"constant":false,"id":27,"mutability":"mutable","name":"_roles","nameLocation":"2183:6:0","nodeType":"VariableDeclaration","scope":296,"src":"2141:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":26,"keyName":"role","keyNameLocation":"2157:4:0","keyType":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2141:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":25,"nodeType":"UserDefinedTypeName","pathNode":{"id":24,"name":"RoleData","nameLocations":["2165:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":22,"src":"2165:8:0"},"referencedDeclaration":22,"src":"2165:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":30,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2220:18:0","nodeType":"VariableDeclaration","scope":296,"src":"2196:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2196:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":29,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":40,"nodeType":"Block","src":"2463:44:0","statements":[{"expression":{"arguments":[{"id":36,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2484:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":35,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[94,115],"referencedDeclaration":94,"src":"2473:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2473:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":38,"nodeType":"ExpressionStatement","src":"2473:16:0"},{"id":39,"nodeType":"PlaceholderStatement","src":"2499:1:0"}]},"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"2252:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":41,"name":"onlyRole","nameLocation":"2440:8:0","nodeType":"ModifierDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"role","nameLocation":"2457:4:0","nodeType":"VariableDeclaration","scope":41,"src":"2449:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:14:0"},"src":"2431:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[1722],"body":{"id":62,"nodeType":"Block","src":"2632:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":55,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":50,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2649:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":52,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"2669:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$379_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$379_$","typeString":"type(contract IAccessControl)"}],"id":51,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2664:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2664:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$379","typeString":"type(contract IAccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2685:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2664:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2649:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":58,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2724:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":56,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2700:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$296_$","typeString":"type(contract super AccessControl)"}},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2706:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1722,"src":"2700:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2700:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2649:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":49,"id":61,"nodeType":"Return","src":"2642:94:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2513:23:0","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":63,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2550:17:0","nodeType":"FunctionDefinition","overrides":{"id":46,"nodeType":"OverrideSpecifier","overrides":[],"src":"2608:8:0"},"parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"interfaceId","nameLocation":"2575:11:0","nodeType":"VariableDeclaration","scope":63,"src":"2568:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":43,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2568:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2567:20:0"},"returnParameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63,"src":"2626:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":47,"name":"bool","nodeType":"ElementaryTypeName","src":"2626:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2625:6:0"},"scope":296,"src":"2541:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[346],"body":{"id":80,"nodeType":"Block","src":"2913:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":73,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2930:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":75,"indexExpression":{"id":74,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"2937:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2930:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":76,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2943:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"2930:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":78,"indexExpression":{"id":77,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"2951:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2930:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":72,"id":79,"nodeType":"Return","src":"2923:36:0"}]},"documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"2749:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":81,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2839:7:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"role","nameLocation":"2855:4:0","nodeType":"VariableDeclaration","scope":81,"src":"2847:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":65,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2847:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"account","nameLocation":"2869:7:0","nodeType":"VariableDeclaration","scope":81,"src":"2861:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"2861:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2846:31:0"},"returnParameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":81,"src":"2907:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":70,"name":"bool","nodeType":"ElementaryTypeName","src":"2907:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2906:6:0"},"scope":296,"src":"2830:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":93,"nodeType":"Block","src":"3231:47:0","statements":[{"expression":{"arguments":[{"id":88,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"3252:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":89,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"3258:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":87,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[94,115],"referencedDeclaration":115,"src":"3241:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3241:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":92,"nodeType":"ExpressionStatement","src":"3241:30:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2972:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":94,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3184:10:0","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"role","nameLocation":"3203:4:0","nodeType":"VariableDeclaration","scope":94,"src":"3195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":83,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3194:14:0"},"returnParameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"3231:0:0"},"scope":296,"src":"3175:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":114,"nodeType":"Block","src":"3481:124:0","statements":[{"condition":{"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3495:23:0","subExpression":{"arguments":[{"id":103,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3504:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":104,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"3510:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":102,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"3496:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3496:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":113,"nodeType":"IfStatement","src":"3491:108:0","trueBody":{"id":112,"nodeType":"Block","src":"3520:79:0","statements":[{"errorCall":{"arguments":[{"id":108,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"3574:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":109,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3583:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":107,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"3541:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3541:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":111,"nodeType":"RevertStatement","src":"3534:54:0"}]}}]},"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"3284:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":115,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3417:10:0","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"mutability":"mutable","name":"role","nameLocation":"3436:4:0","nodeType":"VariableDeclaration","scope":115,"src":"3428:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":96,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3428:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"account","nameLocation":"3450:7:0","nodeType":"VariableDeclaration","scope":115,"src":"3442:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"3442:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3427:31:0"},"returnParameters":{"id":101,"nodeType":"ParameterList","parameters":[],"src":"3481:0:0"},"scope":296,"src":"3408:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[354],"body":{"id":128,"nodeType":"Block","src":"3860:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":123,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"3877:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":125,"indexExpression":{"id":124,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"3884:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3877:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3890:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":21,"src":"3877:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":122,"id":127,"nodeType":"Return","src":"3870:29:0"}]},"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"3611:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":129,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3795:12:0","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"role","nameLocation":"3816:4:0","nodeType":"VariableDeclaration","scope":129,"src":"3808:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3808:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3807:14:0"},"returnParameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":129,"src":"3851:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3850:9:0"},"scope":296,"src":"3786:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[362],"body":{"id":147,"nodeType":"Block","src":"4296:42:0","statements":[{"expression":{"arguments":[{"id":143,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4317:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":144,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4323:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":142,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4306:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4306:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":146,"nodeType":"ExpressionStatement","src":"4306:25:0"}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"3912:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":148,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":138,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4289:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":137,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"4276:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":140,"kind":"modifierInvocation","modifierName":{"id":136,"name":"onlyRole","nameLocations":["4267:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4267:8:0"},"nodeType":"ModifierInvocation","src":"4267:28:0"}],"name":"grantRole","nameLocation":"4211:9:0","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"role","nameLocation":"4229:4:0","nodeType":"VariableDeclaration","scope":148,"src":"4221:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4221:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"account","nameLocation":"4243:7:0","nodeType":"VariableDeclaration","scope":148,"src":"4235:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4235:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4220:31:0"},"returnParameters":{"id":141,"nodeType":"ParameterList","parameters":[],"src":"4296:0:0"},"scope":296,"src":"4202:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[370],"body":{"id":166,"nodeType":"Block","src":"4713:43:0","statements":[{"expression":{"arguments":[{"id":162,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4735:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":163,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4741:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":161,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"4723:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4723:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":165,"nodeType":"ExpressionStatement","src":"4723:26:0"}]},"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"4344:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":167,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":157,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4706:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":156,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"4693:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4693:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":159,"kind":"modifierInvocation","modifierName":{"id":155,"name":"onlyRole","nameLocations":["4684:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4684:8:0"},"nodeType":"ModifierInvocation","src":"4684:28:0"}],"name":"revokeRole","nameLocation":"4627:10:0","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"role","nameLocation":"4646:4:0","nodeType":"VariableDeclaration","scope":167,"src":"4638:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4638:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"account","nameLocation":"4660:7:0","nodeType":"VariableDeclaration","scope":167,"src":"4652:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"4652:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4637:31:0"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"4713:0:0"},"scope":296,"src":"4618:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[378],"body":{"id":189,"nodeType":"Block","src":"5383:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":175,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5397:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":176,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"5419:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5419:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5397:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":183,"nodeType":"IfStatement","src":"5393:102:0","trueBody":{"id":182,"nodeType":"Block","src":"5433:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":179,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5454:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5454:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":181,"nodeType":"RevertStatement","src":"5447:37:0"}]}},{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"5517:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5523:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5505:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5505:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"5505:37:0"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"4762:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":190,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5313:12:0","nodeType":"FunctionDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"role","nameLocation":"5334:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5326:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5326:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5348:18:0","nodeType":"VariableDeclaration","scope":190,"src":"5340:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"5340:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5325:42:0"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"5383:0:0"},"scope":296,"src":"5304:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":217,"nodeType":"Block","src":"5747:174:0","statements":[{"assignments":[199],"declarations":[{"constant":false,"id":199,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5765:17:0","nodeType":"VariableDeclaration","scope":217,"src":"5757:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5757:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":203,"initialValue":{"arguments":[{"id":201,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5798:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":200,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"5785:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5785:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5757:46:0"},{"expression":{"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":204,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"5813:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":206,"indexExpression":{"id":205,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5820:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5813:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5826:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":21,"src":"5813:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":208,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5838:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5813:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":210,"nodeType":"ExpressionStatement","src":"5813:34:0"},{"eventCall":{"arguments":[{"id":212,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5879:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"5885:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":214,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5904:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":211,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5862:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5862:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":216,"nodeType":"EmitStatement","src":"5857:57:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5555:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":218,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5683:13:0","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5705:4:0","nodeType":"VariableDeclaration","scope":218,"src":"5697:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5697:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"adminRole","nameLocation":"5719:9:0","nodeType":"VariableDeclaration","scope":218,"src":"5711:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5711:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5696:33:0"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"5747:0:0"},"scope":296,"src":"5674:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":256,"nodeType":"Block","src":"6238:233:0","statements":[{"condition":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6252:23:0","subExpression":{"arguments":[{"id":229,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6261:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":230,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6267:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":228,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"6253:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6253:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":254,"nodeType":"Block","src":"6428:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6449:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":227,"id":253,"nodeType":"Return","src":"6442:12:0"}]},"id":255,"nodeType":"IfStatement","src":"6248:217:0","trueBody":{"id":251,"nodeType":"Block","src":"6277:145:0","statements":[{"expression":{"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":233,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"6291:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":235,"indexExpression":{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6298:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6291:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6304:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6291:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":238,"indexExpression":{"id":237,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6312:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6291:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6323:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6291:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":241,"nodeType":"ExpressionStatement","src":"6291:36:0"},{"eventCall":{"arguments":[{"id":243,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6358:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":244,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6364:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":245,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"6373:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":242,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"6346:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":248,"nodeType":"EmitStatement","src":"6341:45:0"},{"expression":{"hexValue":"74727565","id":249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6407:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":227,"id":250,"nodeType":"Return","src":"6400:11:0"}]}}]},"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"5927:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":257,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6164:10:0","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"role","nameLocation":"6183:4:0","nodeType":"VariableDeclaration","scope":257,"src":"6175:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6175:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"account","nameLocation":"6197:7:0","nodeType":"VariableDeclaration","scope":257,"src":"6189:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"6189:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6174:31:0"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":257,"src":"6232:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"6232:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6231:6:0"},"scope":296,"src":"6155:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":294,"nodeType":"Block","src":"6792:233:0","statements":[{"condition":{"arguments":[{"id":268,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6814:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":269,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6820:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":267,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"6806:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6806:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":292,"nodeType":"Block","src":"6982:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7003:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":266,"id":291,"nodeType":"Return","src":"6996:12:0"}]},"id":293,"nodeType":"IfStatement","src":"6802:217:0","trueBody":{"id":289,"nodeType":"Block","src":"6830:146:0","statements":[{"expression":{"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":271,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"6844:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":273,"indexExpression":{"id":272,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6851:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6844:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6857:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6844:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":276,"indexExpression":{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6865:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6844:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6876:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6844:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":279,"nodeType":"ExpressionStatement","src":"6844:37:0"},{"eventCall":{"arguments":[{"id":281,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6912:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":282,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6918:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":283,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"6927:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6927:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":280,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"6900:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6900:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":286,"nodeType":"EmitStatement","src":"6895:45:0"},{"expression":{"hexValue":"74727565","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6961:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":266,"id":288,"nodeType":"Return","src":"6954:11:0"}]}}]},"documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"6477:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":295,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6717:11:0","nodeType":"FunctionDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"role","nameLocation":"6737:4:0","nodeType":"VariableDeclaration","scope":295,"src":"6729:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6729:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":262,"mutability":"mutable","name":"account","nameLocation":"6751:7:0","nodeType":"VariableDeclaration","scope":295,"src":"6743:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"6743:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6728:31:0"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":295,"src":"6786:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":264,"name":"bool","nodeType":"ElementaryTypeName","src":"6786:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6785:6:0"},"scope":296,"src":"6708:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":297,"src":"1962:5065:0","usedErrors":[306,309],"usedEvents":[318,327,336]}],"src":"108:6920:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[379]},"id":380,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":298,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":379,"linearizedBaseContracts":[379],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":306,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":306,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":306,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":309,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":318,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":318,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":314,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":318,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":316,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":318,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":327,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":327,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":327,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":327,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":336,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":336,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":336,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":336,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":346,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":346,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":346,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":346,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":343,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":379,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":354,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":354,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":354,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":379,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":362,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":362,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":362,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":379,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":363,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":370,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":370,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":370,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":379,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":378,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":378,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":378,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":379,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":380,"src":"226:3116:1","usedErrors":[306,309],"usedEvents":[318,327,336]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[409]},"id":410,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":381,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:2"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"127:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":409,"linearizedBaseContracts":[409],"name":"Context","nameLocation":"642:7:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":390,"nodeType":"Block","src":"718:34:2","statements":[{"expression":{"expression":{"id":387,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:2","memberName":"sender","nodeType":"MemberAccess","src":"735:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":386,"id":389,"nodeType":"Return","src":"728:17:2"}]},"id":391,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:2","nodeType":"FunctionDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"675:2:2"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":391,"src":"709:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":384,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:2"},"scope":409,"src":"656:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":399,"nodeType":"Block","src":"825:32:2","statements":[{"expression":{"expression":{"id":396,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:2","memberName":"data","nodeType":"MemberAccess","src":"842:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":395,"id":398,"nodeType":"Return","src":"835:15:2"}]},"id":400,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:2","nodeType":"FunctionDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[],"src":"775:2:2"},"returnParameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":400,"src":"809:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":393,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:2"},"scope":409,"src":"758:99:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":407,"nodeType":"Block","src":"935:25:2","statements":[{"expression":{"hexValue":"30","id":405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":404,"id":406,"nodeType":"Return","src":"945:8:2"}]},"id":408,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:2","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[],"src":"892:2:2"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":408,"src":"926:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:2"},"scope":409,"src":"863:97:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":410,"src":"624:338:2","usedErrors":[],"usedEvents":[]}],"src":"101:862:2"},"id":2},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[409],"Pausable":[517]},"id":518,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":411,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":413,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":518,"sourceUnit":410,"src":"128:45:3","symbolAliases":[{"foreign":{"id":412,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"136:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":415,"name":"Context","nameLocations":["645:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":409,"src":"645:7:3"},"id":416,"nodeType":"InheritanceSpecifier","src":"645:7:3"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"175:439:3","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":517,"linearizedBaseContracts":[517,409],"name":"Pausable","nameLocation":"633:8:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":418,"mutability":"mutable","name":"_paused","nameLocation":"672:7:3","nodeType":"VariableDeclaration","scope":517,"src":"659:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":417,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":419,"nodeType":"StructuredDocumentation","src":"686:73:3","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":423,"name":"Paused","nameLocation":"770:6:3","nodeType":"EventDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:3","nodeType":"VariableDeclaration","scope":423,"src":"777:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:3"},"src":"764:30:3"},{"anonymous":false,"documentation":{"id":424,"nodeType":"StructuredDocumentation","src":"800:70:3","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":428,"name":"Unpaused","nameLocation":"881:8:3","nodeType":"EventDefinition","parameters":{"id":427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:3","nodeType":"VariableDeclaration","scope":428,"src":"890:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":425,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:3"},"src":"875:32:3"},{"documentation":{"id":429,"nodeType":"StructuredDocumentation","src":"913:76:3","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":431,"name":"EnforcedPause","nameLocation":"1000:13:3","nodeType":"ErrorDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[],"src":"1013:2:3"},"src":"994:22:3"},{"documentation":{"id":432,"nodeType":"StructuredDocumentation","src":"1022:80:3","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":434,"name":"ExpectedPause","nameLocation":"1113:13:3","nodeType":"ErrorDefinition","parameters":{"id":433,"nodeType":"ParameterList","parameters":[],"src":"1126:2:3"},"src":"1107:22:3"},{"body":{"id":441,"nodeType":"Block","src":"1340:47:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":437,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"1350:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":439,"nodeType":"ExpressionStatement","src":"1350:19:3"},{"id":440,"nodeType":"PlaceholderStatement","src":"1379:1:3"}]},"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"1135:175:3","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":442,"name":"whenNotPaused","nameLocation":"1324:13:3","nodeType":"ModifierDefinition","parameters":{"id":436,"nodeType":"ParameterList","parameters":[],"src":"1337:2:3"},"src":"1315:72:3","virtual":false,"visibility":"internal"},{"body":{"id":449,"nodeType":"Block","src":"1587:44:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":445,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"1597:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1597:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":447,"nodeType":"ExpressionStatement","src":"1597:16:3"},{"id":448,"nodeType":"PlaceholderStatement","src":"1623:1:3"}]},"documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"1393:167:3","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":450,"name":"whenPaused","nameLocation":"1574:10:3","nodeType":"ModifierDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[],"src":"1584:2:3"},"src":"1565:66:3","virtual":false,"visibility":"internal"},{"body":{"id":458,"nodeType":"Block","src":"1779:31:3","statements":[{"expression":{"id":456,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"1796:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":455,"id":457,"nodeType":"Return","src":"1789:14:3"}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"1637:84:3","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":459,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1735:6:3","nodeType":"FunctionDefinition","parameters":{"id":452,"nodeType":"ParameterList","parameters":[],"src":"1741:2:3"},"returnParameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":459,"src":"1773:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":453,"name":"bool","nodeType":"ElementaryTypeName","src":"1773:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1772:6:3"},"scope":517,"src":"1726:84:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":470,"nodeType":"Block","src":"1929:77:3","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":463,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"1943:6:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1943:8:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":469,"nodeType":"IfStatement","src":"1939:61:3","trueBody":{"id":468,"nodeType":"Block","src":"1953:47:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":465,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"1974:13:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1974:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":467,"nodeType":"RevertStatement","src":"1967:22:3"}]}}]},"documentation":{"id":460,"nodeType":"StructuredDocumentation","src":"1816:57:3","text":" @dev Throws if the contract is paused."},"id":471,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1887:17:3","nodeType":"FunctionDefinition","parameters":{"id":461,"nodeType":"ParameterList","parameters":[],"src":"1904:2:3"},"returnParameters":{"id":462,"nodeType":"ParameterList","parameters":[],"src":"1929:0:3"},"scope":517,"src":"1878:128:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":483,"nodeType":"Block","src":"2126:78:3","statements":[{"condition":{"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2140:9:3","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":475,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"2141:6:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2141:8:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":482,"nodeType":"IfStatement","src":"2136:62:3","trueBody":{"id":481,"nodeType":"Block","src":"2151:47:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":478,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"2172:13:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2172:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":480,"nodeType":"RevertStatement","src":"2165:22:3"}]}}]},"documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"2012:61:3","text":" @dev Throws if the contract is not paused."},"id":484,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2087:14:3","nodeType":"FunctionDefinition","parameters":{"id":473,"nodeType":"ParameterList","parameters":[],"src":"2101:2:3"},"returnParameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"2126:0:3"},"scope":517,"src":"2078:126:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":499,"nodeType":"Block","src":"2388:66:3","statements":[{"expression":{"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":490,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2398:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2408:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2398:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":493,"nodeType":"ExpressionStatement","src":"2398:14:3"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":495,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"2434:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2434:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":494,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"2427:6:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2427:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":498,"nodeType":"EmitStatement","src":"2422:25:3"}]},"documentation":{"id":485,"nodeType":"StructuredDocumentation","src":"2210:124:3","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":500,"implemented":true,"kind":"function","modifiers":[{"id":488,"kind":"modifierInvocation","modifierName":{"id":487,"name":"whenNotPaused","nameLocations":["2374:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":442,"src":"2374:13:3"},"nodeType":"ModifierInvocation","src":"2374:13:3"}],"name":"_pause","nameLocation":"2348:6:3","nodeType":"FunctionDefinition","parameters":{"id":486,"nodeType":"ParameterList","parameters":[],"src":"2354:2:3"},"returnParameters":{"id":489,"nodeType":"ParameterList","parameters":[],"src":"2388:0:3"},"scope":517,"src":"2339:115:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":515,"nodeType":"Block","src":"2634:69:3","statements":[{"expression":{"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":506,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2644:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2654:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2644:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":509,"nodeType":"ExpressionStatement","src":"2644:15:3"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":511,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"2683:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2683:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":510,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2674:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2674:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":514,"nodeType":"EmitStatement","src":"2669:27:3"}]},"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"2460:121:3","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":516,"implemented":true,"kind":"function","modifiers":[{"id":504,"kind":"modifierInvocation","modifierName":{"id":503,"name":"whenPaused","nameLocations":["2623:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":450,"src":"2623:10:3"},"nodeType":"ModifierInvocation","src":"2623:10:3"}],"name":"_unpause","nameLocation":"2595:8:3","nodeType":"FunctionDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[],"src":"2603:2:3"},"returnParameters":{"id":505,"nodeType":"ParameterList","parameters":[],"src":"2634:0:3"},"scope":517,"src":"2586:117:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":518,"src":"615:2090:3","usedErrors":[431,434],"usedEvents":[423,428]}],"src":"102:2604:3"},"id":3},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[586]},"id":587,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":519,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"135:894:4","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":586,"linearizedBaseContracts":[586],"name":"ReentrancyGuard","nameLocation":"1048:15:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":523,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:4","nodeType":"VariableDeclaration","scope":586,"src":"1818:40:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":526,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:4","nodeType":"VariableDeclaration","scope":586,"src":"1864:36:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":524,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":528,"mutability":"mutable","name":"_status","nameLocation":"1923:7:4","nodeType":"VariableDeclaration","scope":586,"src":"1907:23:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":527,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"1937:52:4","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":531,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:4","nodeType":"ErrorDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[],"src":"2028:2:4"},"src":"1994:37:4"},{"body":{"id":538,"nodeType":"Block","src":"2051:38:4","statements":[{"expression":{"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":534,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"2061:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":535,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"2071:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":537,"nodeType":"ExpressionStatement","src":"2061:21:4"}]},"id":539,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[],"src":"2048:2:4"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[],"src":"2051:0:4"},"scope":586,"src":"2037:52:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":549,"nodeType":"Block","src":"2490:79:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":542,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"2500:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":544,"nodeType":"ExpressionStatement","src":"2500:21:4"},{"id":545,"nodeType":"PlaceholderStatement","src":"2531:1:4"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":546,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"2542:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":548,"nodeType":"ExpressionStatement","src":"2542:20:4"}]},"documentation":{"id":540,"nodeType":"StructuredDocumentation","src":"2095:366:4","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":550,"name":"nonReentrant","nameLocation":"2475:12:4","nodeType":"ModifierDefinition","parameters":{"id":541,"nodeType":"ParameterList","parameters":[],"src":"2487:2:4"},"src":"2466:103:4","virtual":false,"visibility":"internal"},{"body":{"id":565,"nodeType":"Block","src":"2614:268:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":553,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"2702:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":554,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"2713:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":560,"nodeType":"IfStatement","src":"2698:86:4","trueBody":{"id":559,"nodeType":"Block","src":"2722:62:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":556,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"2743:28:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"RevertStatement","src":"2736:37:4"}]}},{"expression":{"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":561,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"2858:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":562,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"2868:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":564,"nodeType":"ExpressionStatement","src":"2858:17:4"}]},"id":566,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:4","nodeType":"FunctionDefinition","parameters":{"id":551,"nodeType":"ParameterList","parameters":[],"src":"2603:2:4"},"returnParameters":{"id":552,"nodeType":"ParameterList","parameters":[],"src":"2614:0:4"},"scope":586,"src":"2575:307:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":573,"nodeType":"Block","src":"2926:170:4","statements":[{"expression":{"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":569,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"3068:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":570,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"3078:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":572,"nodeType":"ExpressionStatement","src":"3068:21:4"}]},"id":574,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:4","nodeType":"FunctionDefinition","parameters":{"id":567,"nodeType":"ParameterList","parameters":[],"src":"2915:2:4"},"returnParameters":{"id":568,"nodeType":"ParameterList","parameters":[],"src":"2926:0:4"},"scope":586,"src":"2888:208:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":584,"nodeType":"Block","src":"3339:42:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":580,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"3356:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":581,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"3367:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":579,"id":583,"nodeType":"Return","src":"3349:25:4"}]},"documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"3102:168:4","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":585,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:4","nodeType":"FunctionDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[],"src":"3307:2:4"},"returnParameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":585,"src":"3333:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":577,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:4"},"scope":586,"src":"3275:106:4","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":587,"src":"1030:2353:4","usedErrors":[531],"usedEvents":[]}],"src":"109:3275:4"},"id":4},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/Hashes.sol","exportedSymbols":{"Hashes":[626]},"id":627,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":588,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Hashes","contractDependencies":[],"contractKind":"library","documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"139:81:5","text":" @dev Library of standard hash functions.\n _Available since v5.1._"},"fullyImplemented":true,"id":626,"linearizedBaseContracts":[626],"name":"Hashes","nameLocation":"229:6:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":612,"nodeType":"Block","src":"588:83:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":599,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"605:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":600,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"609:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"605:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":607,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"659:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":608,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"662:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":606,"name":"efficientKeccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"640:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"640:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"605:59:5","trueExpression":{"arguments":[{"id":603,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"632:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":604,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"635:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":602,"name":"efficientKeccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"613:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"613:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":598,"id":611,"nodeType":"Return","src":"598:66:5"}]},"documentation":{"id":590,"nodeType":"StructuredDocumentation","src":"242:257:5","text":" @dev Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs.\n NOTE: Equivalent to the `standardNodeHash` in our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]."},"id":613,"implemented":true,"kind":"function","modifiers":[],"name":"commutativeKeccak256","nameLocation":"513:20:5","nodeType":"FunctionDefinition","parameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"mutability":"mutable","name":"a","nameLocation":"542:1:5","nodeType":"VariableDeclaration","scope":613,"src":"534:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"534:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":594,"mutability":"mutable","name":"b","nameLocation":"553:1:5","nodeType":"VariableDeclaration","scope":613,"src":"545:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":593,"name":"bytes32","nodeType":"ElementaryTypeName","src":"545:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"533:22:5"},"returnParameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":613,"src":"579:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"579:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"578:9:5"},"scope":626,"src":"504:167:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":624,"nodeType":"Block","src":"879:151:5","statements":[{"AST":{"nodeType":"YulBlock","src":"914:110:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"935:4:5","type":"","value":"0x00"},{"name":"a","nodeType":"YulIdentifier","src":"941:1:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"928:6:5"},"nodeType":"YulFunctionCall","src":"928:15:5"},"nodeType":"YulExpressionStatement","src":"928:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"963:4:5","type":"","value":"0x20"},{"name":"b","nodeType":"YulIdentifier","src":"969:1:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"956:6:5"},"nodeType":"YulFunctionCall","src":"956:15:5"},"nodeType":"YulExpressionStatement","src":"956:15:5"},{"nodeType":"YulAssignment","src":"984:30:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1003:4:5","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1009:4:5","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"993:9:5"},"nodeType":"YulFunctionCall","src":"993:21:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"984:5:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":616,"isOffset":false,"isSlot":false,"src":"941:1:5","valueSize":1},{"declaration":618,"isOffset":false,"isSlot":false,"src":"969:1:5","valueSize":1},{"declaration":621,"isOffset":false,"isSlot":false,"src":"984:5:5","valueSize":1}],"flags":["memory-safe"],"id":623,"nodeType":"InlineAssembly","src":"889:135:5"}]},"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"677:109:5","text":" @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory."},"id":625,"implemented":true,"kind":"function","modifiers":[],"name":"efficientKeccak256","nameLocation":"800:18:5","nodeType":"FunctionDefinition","parameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"a","nameLocation":"827:1:5","nodeType":"VariableDeclaration","scope":625,"src":"819:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":615,"name":"bytes32","nodeType":"ElementaryTypeName","src":"819:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":618,"mutability":"mutable","name":"b","nameLocation":"838:1:5","nodeType":"VariableDeclaration","scope":625,"src":"830:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"830:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"818:22:5"},"returnParameters":{"id":622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":621,"mutability":"mutable","name":"value","nameLocation":"872:5:5","nodeType":"VariableDeclaration","scope":625,"src":"864:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"864:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"863:15:5"},"scope":626,"src":"791:239:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":627,"src":"221:811:5","usedErrors":[],"usedEvents":[]}],"src":"113:920:5"},"id":5},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"Hashes":[626],"MerkleProof":[1699]},"id":1700,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":628,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"206:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/Hashes.sol","file":"./Hashes.sol","id":630,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1700,"sourceUnit":627,"src":"232:36:6","symbolAliases":[{"foreign":{"id":629,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"240:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":631,"nodeType":"StructuredDocumentation","src":"270:1082:6","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the Merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates Merkle trees that are safe\n against this attack out of the box.\n IMPORTANT: Consider memory side-effects when using custom hashing functions\n that access memory in an unsafe way.\n NOTE: This library supports proof verification for merkle trees built using\n custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving\n leaf inclusion in trees built using non-commutative hashing functions requires\n additional logic that is not supported by this library."},"fullyImplemented":true,"id":1699,"linearizedBaseContracts":[1699],"name":"MerkleProof","nameLocation":"1361:11:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"1379:60:6","text":"@dev The multiproof provided is not valid."},"errorSelector":"35140492","id":634,"name":"MerkleProofInvalidMultiproof","nameLocation":"1450:28:6","nodeType":"ErrorDefinition","parameters":{"id":633,"nodeType":"ParameterList","parameters":[],"src":"1478:2:6"},"src":"1444:37:6"},{"body":{"id":654,"nodeType":"Block","src":"1999:57:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":648,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"2029:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":649,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"2036:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":647,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[696,778],"referencedDeclaration":696,"src":"2016:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2016:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":651,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"2045:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2016:33:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":646,"id":653,"nodeType":"Return","src":"2009:40:6"}]},"documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"1487:410:6","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in memory with the default hashing function."},"id":655,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1911:6:6","nodeType":"FunctionDefinition","parameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":638,"mutability":"mutable","name":"proof","nameLocation":"1935:5:6","nodeType":"VariableDeclaration","scope":655,"src":"1918:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":636,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1918:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":637,"nodeType":"ArrayTypeName","src":"1918:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"root","nameLocation":"1950:4:6","nodeType":"VariableDeclaration","scope":655,"src":"1942:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":639,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1942:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":642,"mutability":"mutable","name":"leaf","nameLocation":"1964:4:6","nodeType":"VariableDeclaration","scope":655,"src":"1956:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":641,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1956:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1917:52:6"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":655,"src":"1993:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":644,"name":"bool","nodeType":"ElementaryTypeName","src":"1993:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1992:6:6"},"scope":1699,"src":"1902:154:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":695,"nodeType":"Block","src":"2549:216:6","statements":[{"assignments":[667],"declarations":[{"constant":false,"id":667,"mutability":"mutable","name":"computedHash","nameLocation":"2567:12:6","nodeType":"VariableDeclaration","scope":695,"src":"2559:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2559:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":669,"initialValue":{"id":668,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"2582:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2559:27:6"},{"body":{"id":691,"nodeType":"Block","src":"2639:91:6","statements":[{"expression":{"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":681,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"2653:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":684,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"2696:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":685,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"2710:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":687,"indexExpression":{"id":686,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"2716:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2710:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":682,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"2668:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$626_$","typeString":"type(library Hashes)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2675:20:6","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":613,"src":"2668:27:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2653:66:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":690,"nodeType":"ExpressionStatement","src":"2653:66:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":674,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"2616:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":675,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"2620:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2626:6:6","memberName":"length","nodeType":"MemberAccess","src":"2620:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2616:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":692,"initializationExpression":{"assignments":[671],"declarations":[{"constant":false,"id":671,"mutability":"mutable","name":"i","nameLocation":"2609:1:6","nodeType":"VariableDeclaration","scope":692,"src":"2601:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":670,"name":"uint256","nodeType":"ElementaryTypeName","src":"2601:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":673,"initialValue":{"hexValue":"30","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2613:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2601:13:6"},"loopExpression":{"expression":{"id":679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2634:3:6","subExpression":{"id":678,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"2634:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":680,"nodeType":"ExpressionStatement","src":"2634:3:6"},"nodeType":"ForStatement","src":"2596:134:6"},{"expression":{"id":693,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"2746:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":665,"id":694,"nodeType":"Return","src":"2739:19:6"}]},"documentation":{"id":656,"nodeType":"StructuredDocumentation","src":"2062:390:6","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in memory with the default hashing function."},"id":696,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"2466:12:6","nodeType":"FunctionDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"mutability":"mutable","name":"proof","nameLocation":"2496:5:6","nodeType":"VariableDeclaration","scope":696,"src":"2479:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":657,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2479:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":658,"nodeType":"ArrayTypeName","src":"2479:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"leaf","nameLocation":"2511:4:6","nodeType":"VariableDeclaration","scope":696,"src":"2503:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":660,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2503:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2478:38:6"},"returnParameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":696,"src":"2540:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2540:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2539:9:6"},"scope":1699,"src":"2457:308:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":727,"nodeType":"Block","src":"3376:65:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":720,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"3406:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":721,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"3413:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":722,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"3419:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":719,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[696,778],"referencedDeclaration":778,"src":"3393:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":724,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"3430:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3393:41:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":718,"id":726,"nodeType":"Return","src":"3386:48:6"}]},"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"2771:407:6","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in memory with a custom hashing function."},"id":728,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"3192:6:6","nodeType":"FunctionDefinition","parameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"proof","nameLocation":"3225:5:6","nodeType":"VariableDeclaration","scope":728,"src":"3208:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":698,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3208:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":699,"nodeType":"ArrayTypeName","src":"3208:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"root","nameLocation":"3248:4:6","nodeType":"VariableDeclaration","scope":728,"src":"3240:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":701,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3240:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":704,"mutability":"mutable","name":"leaf","nameLocation":"3270:4:6","nodeType":"VariableDeclaration","scope":728,"src":"3262:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":703,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3262:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":714,"mutability":"mutable","name":"hasher","nameLocation":"3334:6:6","nodeType":"VariableDeclaration","scope":728,"src":"3284:56:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":713,"nodeType":"FunctionTypeName","parameterTypes":{"id":709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":713,"src":"3293:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3293:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":713,"src":"3302:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":707,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3302:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3292:18:6"},"returnParameterTypes":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":713,"src":"3325:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3325:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3324:9:6"},"src":"3284:56:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"3198:148:6"},"returnParameters":{"id":718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":728,"src":"3370:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":716,"name":"bool","nodeType":"ElementaryTypeName","src":"3370:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3369:6:6"},"scope":1699,"src":"3183:258:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":777,"nodeType":"Block","src":"4019:195:6","statements":[{"assignments":[750],"declarations":[{"constant":false,"id":750,"mutability":"mutable","name":"computedHash","nameLocation":"4037:12:6","nodeType":"VariableDeclaration","scope":777,"src":"4029:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4029:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":752,"initialValue":{"id":751,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"4052:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4029:27:6"},{"body":{"id":773,"nodeType":"Block","src":"4109:70:6","statements":[{"expression":{"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":764,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"4123:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":766,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"4145:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":767,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"4159:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":769,"indexExpression":{"id":768,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"4165:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4159:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":765,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"4138:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4138:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4123:45:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":772,"nodeType":"ExpressionStatement","src":"4123:45:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":757,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"4086:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":758,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"4090:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:6:6","memberName":"length","nodeType":"MemberAccess","src":"4090:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4086:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":774,"initializationExpression":{"assignments":[754],"declarations":[{"constant":false,"id":754,"mutability":"mutable","name":"i","nameLocation":"4079:1:6","nodeType":"VariableDeclaration","scope":774,"src":"4071:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":753,"name":"uint256","nodeType":"ElementaryTypeName","src":"4071:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":756,"initialValue":{"hexValue":"30","id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4083:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4071:13:6"},"loopExpression":{"expression":{"id":762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4104:3:6","subExpression":{"id":761,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"4104:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":763,"nodeType":"ExpressionStatement","src":"4104:3:6"},"nodeType":"ForStatement","src":"4066:113:6"},{"expression":{"id":775,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"4195:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":748,"id":776,"nodeType":"Return","src":"4188:19:6"}]},"documentation":{"id":729,"nodeType":"StructuredDocumentation","src":"3447:387:6","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in memory with a custom hashing function."},"id":778,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"3848:12:6","nodeType":"FunctionDefinition","parameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"proof","nameLocation":"3887:5:6","nodeType":"VariableDeclaration","scope":778,"src":"3870:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":730,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3870:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":731,"nodeType":"ArrayTypeName","src":"3870:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":734,"mutability":"mutable","name":"leaf","nameLocation":"3910:4:6","nodeType":"VariableDeclaration","scope":778,"src":"3902:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3902:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"hasher","nameLocation":"3974:6:6","nodeType":"VariableDeclaration","scope":778,"src":"3924:56:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":743,"nodeType":"FunctionTypeName","parameterTypes":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":743,"src":"3933:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":735,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3933:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":743,"src":"3942:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":737,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3942:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3932:18:6"},"returnParameterTypes":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":743,"src":"3965:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3965:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3964:9:6"},"src":"3924:56:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"3860:126:6"},"returnParameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"4010:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4010:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4009:9:6"},"scope":1699,"src":"3839:375:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":798,"nodeType":"Block","src":"4744:65:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":792,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"4782:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":793,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"4789:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":791,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[840,922],"referencedDeclaration":840,"src":"4761:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4761:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":795,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"4798:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4761:41:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":790,"id":797,"nodeType":"Return","src":"4754:48:6"}]},"documentation":{"id":779,"nodeType":"StructuredDocumentation","src":"4220:412:6","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in calldata with the default hashing function."},"id":799,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"4646:14:6","nodeType":"FunctionDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"proof","nameLocation":"4680:5:6","nodeType":"VariableDeclaration","scope":799,"src":"4661:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":780,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4661:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":781,"nodeType":"ArrayTypeName","src":"4661:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"root","nameLocation":"4695:4:6","nodeType":"VariableDeclaration","scope":799,"src":"4687:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4687:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"leaf","nameLocation":"4709:4:6","nodeType":"VariableDeclaration","scope":799,"src":"4701:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":785,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4701:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4660:54:6"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":799,"src":"4738:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":788,"name":"bool","nodeType":"ElementaryTypeName","src":"4738:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4737:6:6"},"scope":1699,"src":"4637:172:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":839,"nodeType":"Block","src":"5314:216:6","statements":[{"assignments":[811],"declarations":[{"constant":false,"id":811,"mutability":"mutable","name":"computedHash","nameLocation":"5332:12:6","nodeType":"VariableDeclaration","scope":839,"src":"5324:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5324:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":813,"initialValue":{"id":812,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"5347:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5324:27:6"},{"body":{"id":835,"nodeType":"Block","src":"5404:91:6","statements":[{"expression":{"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":825,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"5418:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":828,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"5461:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":829,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"5475:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":831,"indexExpression":{"id":830,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"5481:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5475:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":826,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"5433:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$626_$","typeString":"type(library Hashes)"}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5440:20:6","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":613,"src":"5433:27:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5433:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5418:66:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":834,"nodeType":"ExpressionStatement","src":"5418:66:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":818,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"5381:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":819,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"5385:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5391:6:6","memberName":"length","nodeType":"MemberAccess","src":"5385:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5381:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":836,"initializationExpression":{"assignments":[815],"declarations":[{"constant":false,"id":815,"mutability":"mutable","name":"i","nameLocation":"5374:1:6","nodeType":"VariableDeclaration","scope":836,"src":"5366:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint256","nodeType":"ElementaryTypeName","src":"5366:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":817,"initialValue":{"hexValue":"30","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5378:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5366:13:6"},"loopExpression":{"expression":{"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5399:3:6","subExpression":{"id":822,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"5399:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":824,"nodeType":"ExpressionStatement","src":"5399:3:6"},"nodeType":"ForStatement","src":"5361:134:6"},{"expression":{"id":837,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"5511:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":809,"id":838,"nodeType":"Return","src":"5504:19:6"}]},"documentation":{"id":800,"nodeType":"StructuredDocumentation","src":"4815:392:6","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in calldata with the default hashing function."},"id":840,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"5221:20:6","nodeType":"FunctionDefinition","parameters":{"id":806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"proof","nameLocation":"5261:5:6","nodeType":"VariableDeclaration","scope":840,"src":"5242:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":801,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5242:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":802,"nodeType":"ArrayTypeName","src":"5242:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":805,"mutability":"mutable","name":"leaf","nameLocation":"5276:4:6","nodeType":"VariableDeclaration","scope":840,"src":"5268:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":804,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5268:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5241:40:6"},"returnParameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":840,"src":"5305:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":807,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5305:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5304:9:6"},"scope":1699,"src":"5212:318:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":871,"nodeType":"Block","src":"6153:73:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":864,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"6191:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":865,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"6198:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":866,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"6204:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":863,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[840,922],"referencedDeclaration":922,"src":"6170:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6170:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":868,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"6215:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6170:49:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":862,"id":870,"nodeType":"Return","src":"6163:56:6"}]},"documentation":{"id":841,"nodeType":"StructuredDocumentation","src":"5536:409:6","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in calldata with a custom hashing function."},"id":872,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"5959:14:6","nodeType":"FunctionDefinition","parameters":{"id":859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"proof","nameLocation":"6002:5:6","nodeType":"VariableDeclaration","scope":872,"src":"5983:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":842,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5983:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":843,"nodeType":"ArrayTypeName","src":"5983:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":846,"mutability":"mutable","name":"root","nameLocation":"6025:4:6","nodeType":"VariableDeclaration","scope":872,"src":"6017:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6017:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"leaf","nameLocation":"6047:4:6","nodeType":"VariableDeclaration","scope":872,"src":"6039:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6039:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":858,"mutability":"mutable","name":"hasher","nameLocation":"6111:6:6","nodeType":"VariableDeclaration","scope":872,"src":"6061:56:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":857,"nodeType":"FunctionTypeName","parameterTypes":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":857,"src":"6070:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":849,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6070:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":857,"src":"6079:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6079:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6069:18:6"},"returnParameterTypes":{"id":856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":857,"src":"6102:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":854,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6102:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6101:9:6"},"src":"6061:56:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"5973:150:6"},"returnParameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":872,"src":"6147:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":860,"name":"bool","nodeType":"ElementaryTypeName","src":"6147:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6146:6:6"},"scope":1699,"src":"5950:276:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":921,"nodeType":"Block","src":"6816:195:6","statements":[{"assignments":[894],"declarations":[{"constant":false,"id":894,"mutability":"mutable","name":"computedHash","nameLocation":"6834:12:6","nodeType":"VariableDeclaration","scope":921,"src":"6826:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":893,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6826:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":896,"initialValue":{"id":895,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"6849:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6826:27:6"},{"body":{"id":917,"nodeType":"Block","src":"6906:70:6","statements":[{"expression":{"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":908,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"6920:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":910,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"6942:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":911,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"6956:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":913,"indexExpression":{"id":912,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"6962:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6956:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":909,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"6935:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6935:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6920:45:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":916,"nodeType":"ExpressionStatement","src":"6920:45:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":901,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"6883:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":902,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"6887:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6893:6:6","memberName":"length","nodeType":"MemberAccess","src":"6887:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6883:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":918,"initializationExpression":{"assignments":[898],"declarations":[{"constant":false,"id":898,"mutability":"mutable","name":"i","nameLocation":"6876:1:6","nodeType":"VariableDeclaration","scope":918,"src":"6868:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":897,"name":"uint256","nodeType":"ElementaryTypeName","src":"6868:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":900,"initialValue":{"hexValue":"30","id":899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6868:13:6"},"loopExpression":{"expression":{"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6901:3:6","subExpression":{"id":905,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"6901:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":907,"nodeType":"ExpressionStatement","src":"6901:3:6"},"nodeType":"ForStatement","src":"6863:113:6"},{"expression":{"id":919,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"6992:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":892,"id":920,"nodeType":"Return","src":"6985:19:6"}]},"documentation":{"id":873,"nodeType":"StructuredDocumentation","src":"6232:389:6","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in calldata with a custom hashing function."},"id":922,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"6635:20:6","nodeType":"FunctionDefinition","parameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"mutability":"mutable","name":"proof","nameLocation":"6684:5:6","nodeType":"VariableDeclaration","scope":922,"src":"6665:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":874,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6665:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":875,"nodeType":"ArrayTypeName","src":"6665:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":878,"mutability":"mutable","name":"leaf","nameLocation":"6707:4:6","nodeType":"VariableDeclaration","scope":922,"src":"6699:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6699:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":888,"mutability":"mutable","name":"hasher","nameLocation":"6771:6:6","nodeType":"VariableDeclaration","scope":922,"src":"6721:56:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":887,"nodeType":"FunctionTypeName","parameterTypes":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":887,"src":"6730:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":879,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6730:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":887,"src":"6739:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":881,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6739:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6729:18:6"},"returnParameterTypes":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":887,"src":"6762:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":884,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6762:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6761:9:6"},"src":"6721:56:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"6655:128:6"},"returnParameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":922,"src":"6807:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":890,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6807:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6806:9:6"},"scope":1699,"src":"6626:385:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":947,"nodeType":"Block","src":"7797:76:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":940,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"7832:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":941,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"7839:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":942,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"7851:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":939,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[1106,1310],"referencedDeclaration":1106,"src":"7814:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7814:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":944,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"7862:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7814:52:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":938,"id":946,"nodeType":"Return","src":"7807:59:6"}]},"documentation":{"id":923,"nodeType":"StructuredDocumentation","src":"7017:593:6","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in memory with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProof}."},"id":948,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"7624:16:6","nodeType":"FunctionDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"proof","nameLocation":"7667:5:6","nodeType":"VariableDeclaration","scope":948,"src":"7650:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7650:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":925,"nodeType":"ArrayTypeName","src":"7650:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":929,"mutability":"mutable","name":"proofFlags","nameLocation":"7696:10:6","nodeType":"VariableDeclaration","scope":948,"src":"7682:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":927,"name":"bool","nodeType":"ElementaryTypeName","src":"7682:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":928,"nodeType":"ArrayTypeName","src":"7682:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":931,"mutability":"mutable","name":"root","nameLocation":"7724:4:6","nodeType":"VariableDeclaration","scope":948,"src":"7716:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7716:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":934,"mutability":"mutable","name":"leaves","nameLocation":"7755:6:6","nodeType":"VariableDeclaration","scope":948,"src":"7738:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7738:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":933,"nodeType":"ArrayTypeName","src":"7738:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7640:127:6"},"returnParameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":948,"src":"7791:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":936,"name":"bool","nodeType":"ElementaryTypeName","src":"7791:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7790:6:6"},"scope":1699,"src":"7615:258:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1105,"nodeType":"Block","src":"9159:2104:6","statements":[{"assignments":[964],"declarations":[{"constant":false,"id":964,"mutability":"mutable","name":"leavesLen","nameLocation":"9551:9:6","nodeType":"VariableDeclaration","scope":1105,"src":"9543:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":963,"name":"uint256","nodeType":"ElementaryTypeName","src":"9543:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":967,"initialValue":{"expression":{"id":965,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"9563:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9570:6:6","memberName":"length","nodeType":"MemberAccess","src":"9563:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9543:33:6"},{"assignments":[969],"declarations":[{"constant":false,"id":969,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"9594:13:6","nodeType":"VariableDeclaration","scope":1105,"src":"9586:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"9586:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":972,"initialValue":{"expression":{"id":970,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"9610:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9621:6:6","memberName":"length","nodeType":"MemberAccess","src":"9610:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9586:41:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":973,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"9675:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":974,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"9687:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9693:6:6","memberName":"length","nodeType":"MemberAccess","src":"9687:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9675:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":977,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"9703:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9703:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9675:45:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":985,"nodeType":"IfStatement","src":"9671:113:6","trueBody":{"id":984,"nodeType":"Block","src":"9722:62:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":981,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"9743:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9743:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":983,"nodeType":"RevertStatement","src":"9736:37:6"}]}},{"assignments":[990],"declarations":[{"constant":false,"id":990,"mutability":"mutable","name":"hashes","nameLocation":"10045:6:6","nodeType":"VariableDeclaration","scope":1105,"src":"10028:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":988,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10028:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":989,"nodeType":"ArrayTypeName","src":"10028:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":996,"initialValue":{"arguments":[{"id":994,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"10068:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10054:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":991,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10058:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":992,"nodeType":"ArrayTypeName","src":"10058:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10054:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10028:54:6"},{"assignments":[998],"declarations":[{"constant":false,"id":998,"mutability":"mutable","name":"leafPos","nameLocation":"10100:7:6","nodeType":"VariableDeclaration","scope":1105,"src":"10092:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":997,"name":"uint256","nodeType":"ElementaryTypeName","src":"10092:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1000,"initialValue":{"hexValue":"30","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10110:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10092:19:6"},{"assignments":[1002],"declarations":[{"constant":false,"id":1002,"mutability":"mutable","name":"hashPos","nameLocation":"10129:7:6","nodeType":"VariableDeclaration","scope":1105,"src":"10121:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1001,"name":"uint256","nodeType":"ElementaryTypeName","src":"10121:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1004,"initialValue":{"hexValue":"30","id":1003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10139:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10121:19:6"},{"assignments":[1006],"declarations":[{"constant":false,"id":1006,"mutability":"mutable","name":"proofPos","nameLocation":"10158:8:6","nodeType":"VariableDeclaration","scope":1105,"src":"10150:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint256","nodeType":"ElementaryTypeName","src":"10150:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1008,"initialValue":{"hexValue":"30","id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10169:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10150:20:6"},{"body":{"id":1068,"nodeType":"Block","src":"10590:310:6","statements":[{"assignments":[1020],"declarations":[{"constant":false,"id":1020,"mutability":"mutable","name":"a","nameLocation":"10612:1:6","nodeType":"VariableDeclaration","scope":1068,"src":"10604:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1019,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10604:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1033,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1021,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"10616:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1022,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"10626:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10616:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1028,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"10658:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1031,"indexExpression":{"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10665:9:6","subExpression":{"id":1029,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"10665:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10658:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10616:59:6","trueExpression":{"baseExpression":{"id":1024,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"10638:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1027,"indexExpression":{"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10645:9:6","subExpression":{"id":1025,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"10645:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10638:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10604:71:6"},{"assignments":[1035],"declarations":[{"constant":false,"id":1035,"mutability":"mutable","name":"b","nameLocation":"10697:1:6","nodeType":"VariableDeclaration","scope":1068,"src":"10689:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10689:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1057,"initialValue":{"condition":{"baseExpression":{"id":1036,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"10701:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1038,"indexExpression":{"id":1037,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"10712:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10701:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1052,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"10813:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1055,"indexExpression":{"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10819:10:6","subExpression":{"id":1053,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"10819:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10813:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10701:129:6","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1039,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"10734:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1040,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"10744:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10734:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1046,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"10776:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1049,"indexExpression":{"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10783:9:6","subExpression":{"id":1047,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"10783:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10776:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10734:59:6","trueExpression":{"baseExpression":{"id":1042,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"10756:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1045,"indexExpression":{"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10763:9:6","subExpression":{"id":1043,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"10763:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10756:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1051,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10733:61:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10689:141:6"},{"expression":{"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1058,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"10844:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1060,"indexExpression":{"id":1059,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"10851:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10844:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1063,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"10884:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1064,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"10887:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1061,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"10856:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$626_$","typeString":"type(library Hashes)"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10863:20:6","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":613,"src":"10856:27:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10856:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10844:45:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1067,"nodeType":"ExpressionStatement","src":"10844:45:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1013,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"10566:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1014,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"10570:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10566:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1069,"initializationExpression":{"assignments":[1010],"declarations":[{"constant":false,"id":1010,"mutability":"mutable","name":"i","nameLocation":"10559:1:6","nodeType":"VariableDeclaration","scope":1069,"src":"10551:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"10551:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1012,"initialValue":{"hexValue":"30","id":1011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10563:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10551:13:6"},"loopExpression":{"expression":{"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10585:3:6","subExpression":{"id":1016,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"10585:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1018,"nodeType":"ExpressionStatement","src":"10585:3:6"},"nodeType":"ForStatement","src":"10546:354:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1070,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"10914:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10930:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10914:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1090,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"11155:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11167:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11155:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1102,"nodeType":"Block","src":"11217:40:6","statements":[{"expression":{"baseExpression":{"id":1098,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"11238:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1100,"indexExpression":{"hexValue":"30","id":1099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11244:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11238:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":962,"id":1101,"nodeType":"Return","src":"11231:15:6"}]},"id":1103,"nodeType":"IfStatement","src":"11151:106:6","trueBody":{"id":1097,"nodeType":"Block","src":"11170:41:6","statements":[{"expression":{"baseExpression":{"id":1093,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"11191:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1095,"indexExpression":{"hexValue":"30","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11198:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11191:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":962,"id":1096,"nodeType":"Return","src":"11184:16:6"}]}},"id":1104,"nodeType":"IfStatement","src":"10910:347:6","trueBody":{"id":1089,"nodeType":"Block","src":"10933:212:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1073,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"10951:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1074,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"10963:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10969:6:6","memberName":"length","nodeType":"MemberAccess","src":"10963:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10951:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1081,"nodeType":"IfStatement","src":"10947:100:6","trueBody":{"id":1080,"nodeType":"Block","src":"10977:70:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1077,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"11002:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11002:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1079,"nodeType":"RevertStatement","src":"10995:37:6"}]}},{"id":1088,"nodeType":"UncheckedBlock","src":"11060:75:6","statements":[{"expression":{"baseExpression":{"id":1082,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"11095:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1086,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1083,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"11102:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11118:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11102:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11095:25:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":962,"id":1087,"nodeType":"Return","src":"11088:32:6"}]}]}}]},"documentation":{"id":949,"nodeType":"StructuredDocumentation","src":"7879:1100:6","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in memory with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":1106,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"8993:17:6","nodeType":"FunctionDefinition","parameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"proof","nameLocation":"9037:5:6","nodeType":"VariableDeclaration","scope":1106,"src":"9020:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":950,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9020:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":951,"nodeType":"ArrayTypeName","src":"9020:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":955,"mutability":"mutable","name":"proofFlags","nameLocation":"9066:10:6","nodeType":"VariableDeclaration","scope":1106,"src":"9052:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":953,"name":"bool","nodeType":"ElementaryTypeName","src":"9052:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":954,"nodeType":"ArrayTypeName","src":"9052:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"leaves","nameLocation":"9103:6:6","nodeType":"VariableDeclaration","scope":1106,"src":"9086:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9086:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":957,"nodeType":"ArrayTypeName","src":"9086:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"9010:105:6"},"returnParameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":961,"mutability":"mutable","name":"merkleRoot","nameLocation":"9147:10:6","nodeType":"VariableDeclaration","scope":1106,"src":"9139:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":960,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9139:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9138:20:6"},"scope":1699,"src":"8984:2279:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1142,"nodeType":"Block","src":"12112:84:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1134,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"12147:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1135,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"12154:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":1136,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"12166:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1137,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"12174:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":1133,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[1106,1310],"referencedDeclaration":1310,"src":"12129:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12129:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1139,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"12185:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"12129:60:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1132,"id":1141,"nodeType":"Return","src":"12122:67:6"}]},"documentation":{"id":1107,"nodeType":"StructuredDocumentation","src":"11269:590:6","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in memory with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProof}."},"id":1143,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"11873:16:6","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"proof","nameLocation":"11916:5:6","nodeType":"VariableDeclaration","scope":1143,"src":"11899:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11899:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1109,"nodeType":"ArrayTypeName","src":"11899:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1113,"mutability":"mutable","name":"proofFlags","nameLocation":"11945:10:6","nodeType":"VariableDeclaration","scope":1143,"src":"11931:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1111,"name":"bool","nodeType":"ElementaryTypeName","src":"11931:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1112,"nodeType":"ArrayTypeName","src":"11931:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"root","nameLocation":"11973:4:6","nodeType":"VariableDeclaration","scope":1143,"src":"11965:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11965:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1118,"mutability":"mutable","name":"leaves","nameLocation":"12004:6:6","nodeType":"VariableDeclaration","scope":1143,"src":"11987:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11987:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1117,"nodeType":"ArrayTypeName","src":"11987:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"hasher","nameLocation":"12070:6:6","nodeType":"VariableDeclaration","scope":1143,"src":"12020:56:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":1127,"nodeType":"FunctionTypeName","parameterTypes":{"id":1123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1127,"src":"12029:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12029:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1127,"src":"12038:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12038:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12028:18:6"},"returnParameterTypes":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1127,"src":"12061:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12061:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12060:9:6"},"src":"12020:56:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"11889:193:6"},"returnParameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1143,"src":"12106:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1130,"name":"bool","nodeType":"ElementaryTypeName","src":"12106:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12105:6:6"},"scope":1699,"src":"11864:332:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1309,"nodeType":"Block","src":"13545:2083:6","statements":[{"assignments":[1169],"declarations":[{"constant":false,"id":1169,"mutability":"mutable","name":"leavesLen","nameLocation":"13937:9:6","nodeType":"VariableDeclaration","scope":1309,"src":"13929:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1168,"name":"uint256","nodeType":"ElementaryTypeName","src":"13929:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1172,"initialValue":{"expression":{"id":1170,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"13949:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13956:6:6","memberName":"length","nodeType":"MemberAccess","src":"13949:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13929:33:6"},{"assignments":[1174],"declarations":[{"constant":false,"id":1174,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"13980:13:6","nodeType":"VariableDeclaration","scope":1309,"src":"13972:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1173,"name":"uint256","nodeType":"ElementaryTypeName","src":"13972:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1177,"initialValue":{"expression":{"id":1175,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"13996:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14007:6:6","memberName":"length","nodeType":"MemberAccess","src":"13996:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13972:41:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1178,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"14061:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1179,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"14073:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14079:6:6","memberName":"length","nodeType":"MemberAccess","src":"14073:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14061:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1182,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"14089:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14105:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14089:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14061:45:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1190,"nodeType":"IfStatement","src":"14057:113:6","trueBody":{"id":1189,"nodeType":"Block","src":"14108:62:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1186,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"14129:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14129:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1188,"nodeType":"RevertStatement","src":"14122:37:6"}]}},{"assignments":[1195],"declarations":[{"constant":false,"id":1195,"mutability":"mutable","name":"hashes","nameLocation":"14431:6:6","nodeType":"VariableDeclaration","scope":1309,"src":"14414:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14414:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1194,"nodeType":"ArrayTypeName","src":"14414:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1201,"initialValue":{"arguments":[{"id":1199,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"14454:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14440:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14444:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1197,"nodeType":"ArrayTypeName","src":"14444:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14440:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14414:54:6"},{"assignments":[1203],"declarations":[{"constant":false,"id":1203,"mutability":"mutable","name":"leafPos","nameLocation":"14486:7:6","nodeType":"VariableDeclaration","scope":1309,"src":"14478:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1202,"name":"uint256","nodeType":"ElementaryTypeName","src":"14478:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1205,"initialValue":{"hexValue":"30","id":1204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14496:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14478:19:6"},{"assignments":[1207],"declarations":[{"constant":false,"id":1207,"mutability":"mutable","name":"hashPos","nameLocation":"14515:7:6","nodeType":"VariableDeclaration","scope":1309,"src":"14507:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"14507:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1209,"initialValue":{"hexValue":"30","id":1208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14525:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14507:19:6"},{"assignments":[1211],"declarations":[{"constant":false,"id":1211,"mutability":"mutable","name":"proofPos","nameLocation":"14544:8:6","nodeType":"VariableDeclaration","scope":1309,"src":"14536:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1210,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1213,"initialValue":{"hexValue":"30","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14555:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14536:20:6"},{"body":{"id":1272,"nodeType":"Block","src":"14976:289:6","statements":[{"assignments":[1225],"declarations":[{"constant":false,"id":1225,"mutability":"mutable","name":"a","nameLocation":"14998:1:6","nodeType":"VariableDeclaration","scope":1272,"src":"14990:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14990:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1238,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1226,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"15002:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1227,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"15012:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15002:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1233,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"15044:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1236,"indexExpression":{"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15051:9:6","subExpression":{"id":1234,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"15051:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15044:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15002:59:6","trueExpression":{"baseExpression":{"id":1229,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"15024:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1232,"indexExpression":{"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15031:9:6","subExpression":{"id":1230,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"15031:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15024:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"14990:71:6"},{"assignments":[1240],"declarations":[{"constant":false,"id":1240,"mutability":"mutable","name":"b","nameLocation":"15083:1:6","nodeType":"VariableDeclaration","scope":1272,"src":"15075:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1239,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15075:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1262,"initialValue":{"condition":{"baseExpression":{"id":1241,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"15087:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1243,"indexExpression":{"id":1242,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"15098:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15087:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1257,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"15199:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1260,"indexExpression":{"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15205:10:6","subExpression":{"id":1258,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"15205:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15199:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15087:129:6","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1244,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"15120:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1245,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"15130:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15120:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1251,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"15162:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1254,"indexExpression":{"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15169:9:6","subExpression":{"id":1252,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"15169:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15162:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15120:59:6","trueExpression":{"baseExpression":{"id":1247,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"15142:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1250,"indexExpression":{"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15149:9:6","subExpression":{"id":1248,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"15149:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15142:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1256,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15119:61:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15075:141:6"},{"expression":{"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1263,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"15230:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1265,"indexExpression":{"id":1264,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"15237:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15230:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1267,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"15249:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1268,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"15252:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1266,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"15242:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15242:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15230:24:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1271,"nodeType":"ExpressionStatement","src":"15230:24:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1218,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"14952:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1219,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"14956:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14952:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1273,"initializationExpression":{"assignments":[1215],"declarations":[{"constant":false,"id":1215,"mutability":"mutable","name":"i","nameLocation":"14945:1:6","nodeType":"VariableDeclaration","scope":1273,"src":"14937:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1214,"name":"uint256","nodeType":"ElementaryTypeName","src":"14937:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1217,"initialValue":{"hexValue":"30","id":1216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14949:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14937:13:6"},"loopExpression":{"expression":{"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14971:3:6","subExpression":{"id":1221,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"14971:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1223,"nodeType":"ExpressionStatement","src":"14971:3:6"},"nodeType":"ForStatement","src":"14932:333:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1274,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"15279:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15295:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15279:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1294,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"15520:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15520:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1306,"nodeType":"Block","src":"15582:40:6","statements":[{"expression":{"baseExpression":{"id":1302,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"15603:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1304,"indexExpression":{"hexValue":"30","id":1303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15609:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15603:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1167,"id":1305,"nodeType":"Return","src":"15596:15:6"}]},"id":1307,"nodeType":"IfStatement","src":"15516:106:6","trueBody":{"id":1301,"nodeType":"Block","src":"15535:41:6","statements":[{"expression":{"baseExpression":{"id":1297,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"15556:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1299,"indexExpression":{"hexValue":"30","id":1298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15563:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15556:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1167,"id":1300,"nodeType":"Return","src":"15549:16:6"}]}},"id":1308,"nodeType":"IfStatement","src":"15275:347:6","trueBody":{"id":1293,"nodeType":"Block","src":"15298:212:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1277,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"15316:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1278,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"15328:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15334:6:6","memberName":"length","nodeType":"MemberAccess","src":"15328:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15316:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1285,"nodeType":"IfStatement","src":"15312:100:6","trueBody":{"id":1284,"nodeType":"Block","src":"15342:70:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1281,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"15367:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15367:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1283,"nodeType":"RevertStatement","src":"15360:37:6"}]}},{"id":1292,"nodeType":"UncheckedBlock","src":"15425:75:6","statements":[{"expression":{"baseExpression":{"id":1286,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"15460:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1290,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1287,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"15467:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15483:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15467:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15460:25:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1167,"id":1291,"nodeType":"Return","src":"15453:32:6"}]}]}}]},"documentation":{"id":1144,"nodeType":"StructuredDocumentation","src":"12202:1097:6","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in memory with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":1310,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"13313:17:6","nodeType":"FunctionDefinition","parameters":{"id":1164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"proof","nameLocation":"13357:5:6","nodeType":"VariableDeclaration","scope":1310,"src":"13340:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13340:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1146,"nodeType":"ArrayTypeName","src":"13340:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1150,"mutability":"mutable","name":"proofFlags","nameLocation":"13386:10:6","nodeType":"VariableDeclaration","scope":1310,"src":"13372:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1148,"name":"bool","nodeType":"ElementaryTypeName","src":"13372:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1149,"nodeType":"ArrayTypeName","src":"13372:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1153,"mutability":"mutable","name":"leaves","nameLocation":"13423:6:6","nodeType":"VariableDeclaration","scope":1310,"src":"13406:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13406:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1152,"nodeType":"ArrayTypeName","src":"13406:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1163,"mutability":"mutable","name":"hasher","nameLocation":"13489:6:6","nodeType":"VariableDeclaration","scope":1310,"src":"13439:56:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":1162,"nodeType":"FunctionTypeName","parameterTypes":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1162,"src":"13448:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13448:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1162,"src":"13457:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1156,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13457:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13447:18:6"},"returnParameterTypes":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1162,"src":"13480:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13480:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13479:9:6"},"src":"13439:56:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"13330:171:6"},"returnParameters":{"id":1167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1166,"mutability":"mutable","name":"merkleRoot","nameLocation":"13533:10:6","nodeType":"VariableDeclaration","scope":1310,"src":"13525:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13525:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13524:20:6"},"scope":1699,"src":"13304:2324:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1335,"nodeType":"Block","src":"16436:84:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1328,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"16479:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1329,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"16486:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":1330,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"16498:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1327,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[1494,1698],"referencedDeclaration":1494,"src":"16453:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16453:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1332,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"16509:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16453:60:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1326,"id":1334,"nodeType":"Return","src":"16446:67:6"}]},"documentation":{"id":1311,"nodeType":"StructuredDocumentation","src":"15634:603:6","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in calldata with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProofCalldata}."},"id":1336,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"16251:24:6","nodeType":"FunctionDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"proof","nameLocation":"16304:5:6","nodeType":"VariableDeclaration","scope":1336,"src":"16285:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16285:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1313,"nodeType":"ArrayTypeName","src":"16285:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1317,"mutability":"mutable","name":"proofFlags","nameLocation":"16335:10:6","nodeType":"VariableDeclaration","scope":1336,"src":"16319:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1315,"name":"bool","nodeType":"ElementaryTypeName","src":"16319:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1316,"nodeType":"ArrayTypeName","src":"16319:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1319,"mutability":"mutable","name":"root","nameLocation":"16363:4:6","nodeType":"VariableDeclaration","scope":1336,"src":"16355:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16355:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1322,"mutability":"mutable","name":"leaves","nameLocation":"16394:6:6","nodeType":"VariableDeclaration","scope":1336,"src":"16377:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16377:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1321,"nodeType":"ArrayTypeName","src":"16377:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"16275:131:6"},"returnParameters":{"id":1326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1336,"src":"16430:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1324,"name":"bool","nodeType":"ElementaryTypeName","src":"16430:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16429:6:6"},"scope":1699,"src":"16242:278:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1493,"nodeType":"Block","src":"17820:2104:6","statements":[{"assignments":[1352],"declarations":[{"constant":false,"id":1352,"mutability":"mutable","name":"leavesLen","nameLocation":"18212:9:6","nodeType":"VariableDeclaration","scope":1493,"src":"18204:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1351,"name":"uint256","nodeType":"ElementaryTypeName","src":"18204:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1355,"initialValue":{"expression":{"id":1353,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"18224:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18231:6:6","memberName":"length","nodeType":"MemberAccess","src":"18224:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18204:33:6"},{"assignments":[1357],"declarations":[{"constant":false,"id":1357,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"18255:13:6","nodeType":"VariableDeclaration","scope":1493,"src":"18247:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"18247:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1360,"initialValue":{"expression":{"id":1358,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"18271:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18282:6:6","memberName":"length","nodeType":"MemberAccess","src":"18271:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18247:41:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1361,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"18336:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1362,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"18348:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18354:6:6","memberName":"length","nodeType":"MemberAccess","src":"18348:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18336:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1365,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"18364:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18380:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18364:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18336:45:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1373,"nodeType":"IfStatement","src":"18332:113:6","trueBody":{"id":1372,"nodeType":"Block","src":"18383:62:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1369,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"18404:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18404:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1371,"nodeType":"RevertStatement","src":"18397:37:6"}]}},{"assignments":[1378],"declarations":[{"constant":false,"id":1378,"mutability":"mutable","name":"hashes","nameLocation":"18706:6:6","nodeType":"VariableDeclaration","scope":1493,"src":"18689:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1376,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18689:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1377,"nodeType":"ArrayTypeName","src":"18689:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1384,"initialValue":{"arguments":[{"id":1382,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"18729:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18715:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1379,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18719:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1380,"nodeType":"ArrayTypeName","src":"18719:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18715:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18689:54:6"},{"assignments":[1386],"declarations":[{"constant":false,"id":1386,"mutability":"mutable","name":"leafPos","nameLocation":"18761:7:6","nodeType":"VariableDeclaration","scope":1493,"src":"18753:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1385,"name":"uint256","nodeType":"ElementaryTypeName","src":"18753:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1388,"initialValue":{"hexValue":"30","id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18771:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18753:19:6"},{"assignments":[1390],"declarations":[{"constant":false,"id":1390,"mutability":"mutable","name":"hashPos","nameLocation":"18790:7:6","nodeType":"VariableDeclaration","scope":1493,"src":"18782:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1389,"name":"uint256","nodeType":"ElementaryTypeName","src":"18782:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1392,"initialValue":{"hexValue":"30","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18800:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18782:19:6"},{"assignments":[1394],"declarations":[{"constant":false,"id":1394,"mutability":"mutable","name":"proofPos","nameLocation":"18819:8:6","nodeType":"VariableDeclaration","scope":1493,"src":"18811:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1393,"name":"uint256","nodeType":"ElementaryTypeName","src":"18811:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1396,"initialValue":{"hexValue":"30","id":1395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18830:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18811:20:6"},{"body":{"id":1456,"nodeType":"Block","src":"19251:310:6","statements":[{"assignments":[1408],"declarations":[{"constant":false,"id":1408,"mutability":"mutable","name":"a","nameLocation":"19273:1:6","nodeType":"VariableDeclaration","scope":1456,"src":"19265:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19265:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1421,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1409,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"19277:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1410,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"19287:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19277:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1416,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"19319:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1419,"indexExpression":{"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19326:9:6","subExpression":{"id":1417,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"19326:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19319:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19277:59:6","trueExpression":{"baseExpression":{"id":1412,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"19299:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1415,"indexExpression":{"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19306:9:6","subExpression":{"id":1413,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"19306:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19299:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19265:71:6"},{"assignments":[1423],"declarations":[{"constant":false,"id":1423,"mutability":"mutable","name":"b","nameLocation":"19358:1:6","nodeType":"VariableDeclaration","scope":1456,"src":"19350:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1422,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19350:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1445,"initialValue":{"condition":{"baseExpression":{"id":1424,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"19362:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1426,"indexExpression":{"id":1425,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"19373:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19362:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1440,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"19474:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1443,"indexExpression":{"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19480:10:6","subExpression":{"id":1441,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"19480:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19474:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19362:129:6","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1427,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"19395:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1428,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"19405:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19395:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1434,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"19437:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1437,"indexExpression":{"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19444:9:6","subExpression":{"id":1435,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"19444:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19437:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19395:59:6","trueExpression":{"baseExpression":{"id":1430,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"19417:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1433,"indexExpression":{"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19424:9:6","subExpression":{"id":1431,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"19424:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19417:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1439,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19394:61:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19350:141:6"},{"expression":{"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1446,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"19505:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1448,"indexExpression":{"id":1447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"19512:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19505:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1451,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"19545:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1452,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"19548:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1449,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"19517:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$626_$","typeString":"type(library Hashes)"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19524:20:6","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":613,"src":"19517:27:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19517:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"19505:45:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1455,"nodeType":"ExpressionStatement","src":"19505:45:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1401,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"19227:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1402,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"19231:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19227:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1457,"initializationExpression":{"assignments":[1398],"declarations":[{"constant":false,"id":1398,"mutability":"mutable","name":"i","nameLocation":"19220:1:6","nodeType":"VariableDeclaration","scope":1457,"src":"19212:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"19212:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1400,"initialValue":{"hexValue":"30","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19224:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19212:13:6"},"loopExpression":{"expression":{"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19246:3:6","subExpression":{"id":1404,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"19246:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1406,"nodeType":"ExpressionStatement","src":"19246:3:6"},"nodeType":"ForStatement","src":"19207:354:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1458,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"19575:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19591:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19575:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1478,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"19816:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19828:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19816:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1490,"nodeType":"Block","src":"19878:40:6","statements":[{"expression":{"baseExpression":{"id":1486,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"19899:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1488,"indexExpression":{"hexValue":"30","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19905:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19899:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1350,"id":1489,"nodeType":"Return","src":"19892:15:6"}]},"id":1491,"nodeType":"IfStatement","src":"19812:106:6","trueBody":{"id":1485,"nodeType":"Block","src":"19831:41:6","statements":[{"expression":{"baseExpression":{"id":1481,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"19852:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1483,"indexExpression":{"hexValue":"30","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19859:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19852:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1350,"id":1484,"nodeType":"Return","src":"19845:16:6"}]}},"id":1492,"nodeType":"IfStatement","src":"19571:347:6","trueBody":{"id":1477,"nodeType":"Block","src":"19594:212:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1461,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"19612:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1462,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"19624:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19630:6:6","memberName":"length","nodeType":"MemberAccess","src":"19624:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19612:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1469,"nodeType":"IfStatement","src":"19608:100:6","trueBody":{"id":1468,"nodeType":"Block","src":"19638:70:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1465,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"19663:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19663:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1467,"nodeType":"RevertStatement","src":"19656:37:6"}]}},{"id":1476,"nodeType":"UncheckedBlock","src":"19721:75:6","statements":[{"expression":{"baseExpression":{"id":1470,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"19756:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1474,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1471,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"19763:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19779:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19763:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19756:25:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1350,"id":1475,"nodeType":"Return","src":"19749:32:6"}]}]}}]},"documentation":{"id":1337,"nodeType":"StructuredDocumentation","src":"16526:1102:6","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in calldata with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":1494,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"17642:25:6","nodeType":"FunctionDefinition","parameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"mutability":"mutable","name":"proof","nameLocation":"17696:5:6","nodeType":"VariableDeclaration","scope":1494,"src":"17677:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17677:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1339,"nodeType":"ArrayTypeName","src":"17677:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1343,"mutability":"mutable","name":"proofFlags","nameLocation":"17727:10:6","nodeType":"VariableDeclaration","scope":1494,"src":"17711:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1341,"name":"bool","nodeType":"ElementaryTypeName","src":"17711:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1342,"nodeType":"ArrayTypeName","src":"17711:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1346,"mutability":"mutable","name":"leaves","nameLocation":"17764:6:6","nodeType":"VariableDeclaration","scope":1494,"src":"17747:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17747:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1345,"nodeType":"ArrayTypeName","src":"17747:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17667:109:6"},"returnParameters":{"id":1350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1349,"mutability":"mutable","name":"merkleRoot","nameLocation":"17808:10:6","nodeType":"VariableDeclaration","scope":1494,"src":"17800:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17800:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17799:20:6"},"scope":1699,"src":"17633:2291:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1530,"nodeType":"Block","src":"20795:92:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1522,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"20838:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1523,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"20845:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":1524,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"20857:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1525,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"20865:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":1521,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[1494,1698],"referencedDeclaration":1698,"src":"20812:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20812:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1527,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"20876:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"20812:68:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1520,"id":1529,"nodeType":"Return","src":"20805:75:6"}]},"documentation":{"id":1495,"nodeType":"StructuredDocumentation","src":"19930:600:6","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in calldata with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProofCalldata}."},"id":1531,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"20544:24:6","nodeType":"FunctionDefinition","parameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1498,"mutability":"mutable","name":"proof","nameLocation":"20597:5:6","nodeType":"VariableDeclaration","scope":1531,"src":"20578:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1496,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20578:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1497,"nodeType":"ArrayTypeName","src":"20578:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1501,"mutability":"mutable","name":"proofFlags","nameLocation":"20628:10:6","nodeType":"VariableDeclaration","scope":1531,"src":"20612:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1499,"name":"bool","nodeType":"ElementaryTypeName","src":"20612:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1500,"nodeType":"ArrayTypeName","src":"20612:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1503,"mutability":"mutable","name":"root","nameLocation":"20656:4:6","nodeType":"VariableDeclaration","scope":1531,"src":"20648:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1502,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20648:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1506,"mutability":"mutable","name":"leaves","nameLocation":"20687:6:6","nodeType":"VariableDeclaration","scope":1531,"src":"20670:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20670:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1505,"nodeType":"ArrayTypeName","src":"20670:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1516,"mutability":"mutable","name":"hasher","nameLocation":"20753:6:6","nodeType":"VariableDeclaration","scope":1531,"src":"20703:56:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":1515,"nodeType":"FunctionTypeName","parameterTypes":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1515,"src":"20712:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1507,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20712:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1515,"src":"20721:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1509,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20721:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20711:18:6"},"returnParameterTypes":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1515,"src":"20744:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20744:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20743:9:6"},"src":"20703:56:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"20568:197:6"},"returnParameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1531,"src":"20789:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1518,"name":"bool","nodeType":"ElementaryTypeName","src":"20789:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20788:6:6"},"scope":1699,"src":"20535:352:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1697,"nodeType":"Block","src":"22250:2083:6","statements":[{"assignments":[1557],"declarations":[{"constant":false,"id":1557,"mutability":"mutable","name":"leavesLen","nameLocation":"22642:9:6","nodeType":"VariableDeclaration","scope":1697,"src":"22634:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"22634:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1560,"initialValue":{"expression":{"id":1558,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"22654:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22661:6:6","memberName":"length","nodeType":"MemberAccess","src":"22654:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22634:33:6"},{"assignments":[1562],"declarations":[{"constant":false,"id":1562,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"22685:13:6","nodeType":"VariableDeclaration","scope":1697,"src":"22677:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1561,"name":"uint256","nodeType":"ElementaryTypeName","src":"22677:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1565,"initialValue":{"expression":{"id":1563,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"22701:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22712:6:6","memberName":"length","nodeType":"MemberAccess","src":"22701:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22677:41:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1566,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"22766:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1567,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"22778:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22784:6:6","memberName":"length","nodeType":"MemberAccess","src":"22778:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22766:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1570,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"22794:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22810:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22794:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22766:45:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1578,"nodeType":"IfStatement","src":"22762:113:6","trueBody":{"id":1577,"nodeType":"Block","src":"22813:62:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1574,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"22834:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22834:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1576,"nodeType":"RevertStatement","src":"22827:37:6"}]}},{"assignments":[1583],"declarations":[{"constant":false,"id":1583,"mutability":"mutable","name":"hashes","nameLocation":"23136:6:6","nodeType":"VariableDeclaration","scope":1697,"src":"23119:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1581,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23119:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1582,"nodeType":"ArrayTypeName","src":"23119:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1589,"initialValue":{"arguments":[{"id":1587,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"23159:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"23145:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1584,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23149:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1585,"nodeType":"ArrayTypeName","src":"23149:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23145:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"23119:54:6"},{"assignments":[1591],"declarations":[{"constant":false,"id":1591,"mutability":"mutable","name":"leafPos","nameLocation":"23191:7:6","nodeType":"VariableDeclaration","scope":1697,"src":"23183:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1590,"name":"uint256","nodeType":"ElementaryTypeName","src":"23183:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1593,"initialValue":{"hexValue":"30","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23201:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23183:19:6"},{"assignments":[1595],"declarations":[{"constant":false,"id":1595,"mutability":"mutable","name":"hashPos","nameLocation":"23220:7:6","nodeType":"VariableDeclaration","scope":1697,"src":"23212:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1594,"name":"uint256","nodeType":"ElementaryTypeName","src":"23212:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1597,"initialValue":{"hexValue":"30","id":1596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23230:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23212:19:6"},{"assignments":[1599],"declarations":[{"constant":false,"id":1599,"mutability":"mutable","name":"proofPos","nameLocation":"23249:8:6","nodeType":"VariableDeclaration","scope":1697,"src":"23241:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"23241:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1601,"initialValue":{"hexValue":"30","id":1600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23260:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23241:20:6"},{"body":{"id":1660,"nodeType":"Block","src":"23681:289:6","statements":[{"assignments":[1613],"declarations":[{"constant":false,"id":1613,"mutability":"mutable","name":"a","nameLocation":"23703:1:6","nodeType":"VariableDeclaration","scope":1660,"src":"23695:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23695:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1626,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1614,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"23707:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1615,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"23717:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23707:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1621,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"23749:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1624,"indexExpression":{"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23756:9:6","subExpression":{"id":1622,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"23756:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23749:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23707:59:6","trueExpression":{"baseExpression":{"id":1617,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"23729:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1620,"indexExpression":{"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23736:9:6","subExpression":{"id":1618,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"23736:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23729:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"23695:71:6"},{"assignments":[1628],"declarations":[{"constant":false,"id":1628,"mutability":"mutable","name":"b","nameLocation":"23788:1:6","nodeType":"VariableDeclaration","scope":1660,"src":"23780:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1627,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23780:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1650,"initialValue":{"condition":{"baseExpression":{"id":1629,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"23792:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1631,"indexExpression":{"id":1630,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"23803:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23792:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1645,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"23904:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1648,"indexExpression":{"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23910:10:6","subExpression":{"id":1646,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"23910:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23904:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23792:129:6","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1632,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"23825:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1633,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"23835:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23825:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1639,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"23867:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1642,"indexExpression":{"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23874:9:6","subExpression":{"id":1640,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"23874:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23867:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23825:59:6","trueExpression":{"baseExpression":{"id":1635,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"23847:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1638,"indexExpression":{"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23854:9:6","subExpression":{"id":1636,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"23854:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23847:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23824:61:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"23780:141:6"},{"expression":{"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1651,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"23935:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1653,"indexExpression":{"id":1652,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"23942:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23935:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1655,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"23954:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1656,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"23957:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1654,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"23947:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23947:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"23935:24:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1659,"nodeType":"ExpressionStatement","src":"23935:24:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1606,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"23657:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1607,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"23661:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23657:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1661,"initializationExpression":{"assignments":[1603],"declarations":[{"constant":false,"id":1603,"mutability":"mutable","name":"i","nameLocation":"23650:1:6","nodeType":"VariableDeclaration","scope":1661,"src":"23642:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1602,"name":"uint256","nodeType":"ElementaryTypeName","src":"23642:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1605,"initialValue":{"hexValue":"30","id":1604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23654:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23642:13:6"},"loopExpression":{"expression":{"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23676:3:6","subExpression":{"id":1609,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"23676:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1611,"nodeType":"ExpressionStatement","src":"23676:3:6"},"nodeType":"ForStatement","src":"23637:333:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1662,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"23984:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24000:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23984:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1682,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"24225:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24237:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24225:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1694,"nodeType":"Block","src":"24287:40:6","statements":[{"expression":{"baseExpression":{"id":1690,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"24308:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1692,"indexExpression":{"hexValue":"30","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24314:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24308:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1555,"id":1693,"nodeType":"Return","src":"24301:15:6"}]},"id":1695,"nodeType":"IfStatement","src":"24221:106:6","trueBody":{"id":1689,"nodeType":"Block","src":"24240:41:6","statements":[{"expression":{"baseExpression":{"id":1685,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"24261:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1687,"indexExpression":{"hexValue":"30","id":1686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24268:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24261:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1555,"id":1688,"nodeType":"Return","src":"24254:16:6"}]}},"id":1696,"nodeType":"IfStatement","src":"23980:347:6","trueBody":{"id":1681,"nodeType":"Block","src":"24003:212:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1665,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"24021:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1666,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"24033:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24039:6:6","memberName":"length","nodeType":"MemberAccess","src":"24033:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24021:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1673,"nodeType":"IfStatement","src":"24017:100:6","trueBody":{"id":1672,"nodeType":"Block","src":"24047:70:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1669,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"24072:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24072:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1671,"nodeType":"RevertStatement","src":"24065:37:6"}]}},{"id":1680,"nodeType":"UncheckedBlock","src":"24130:75:6","statements":[{"expression":{"baseExpression":{"id":1674,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"24165:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1678,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1675,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"24172:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24188:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24172:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24165:25:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1555,"id":1679,"nodeType":"Return","src":"24158:32:6"}]}]}}]},"documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"20893:1099:6","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in calldata with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":1698,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"22006:25:6","nodeType":"FunctionDefinition","parameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1535,"mutability":"mutable","name":"proof","nameLocation":"22060:5:6","nodeType":"VariableDeclaration","scope":1698,"src":"22041:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1533,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22041:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1534,"nodeType":"ArrayTypeName","src":"22041:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1538,"mutability":"mutable","name":"proofFlags","nameLocation":"22091:10:6","nodeType":"VariableDeclaration","scope":1698,"src":"22075:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1536,"name":"bool","nodeType":"ElementaryTypeName","src":"22075:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1537,"nodeType":"ArrayTypeName","src":"22075:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1541,"mutability":"mutable","name":"leaves","nameLocation":"22128:6:6","nodeType":"VariableDeclaration","scope":1698,"src":"22111:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22111:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1540,"nodeType":"ArrayTypeName","src":"22111:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1551,"mutability":"mutable","name":"hasher","nameLocation":"22194:6:6","nodeType":"VariableDeclaration","scope":1698,"src":"22144:56:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":1550,"nodeType":"FunctionTypeName","parameterTypes":{"id":1546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1550,"src":"22153:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22153:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1550,"src":"22162:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22162:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22152:18:6"},"returnParameterTypes":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1550,"src":"22185:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22185:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22184:9:6"},"src":"22144:56:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"22031:175:6"},"returnParameters":{"id":1555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1554,"mutability":"mutable","name":"merkleRoot","nameLocation":"22238:10:6","nodeType":"VariableDeclaration","scope":1698,"src":"22230:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1553,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22230:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22229:20:6"},"scope":1699,"src":"21997:2336:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1700,"src":"1353:22982:6","usedErrors":[634],"usedEvents":[]}],"src":"206:24130:6"},"id":6},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1723],"IERC165":[1735]},"id":1724,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1701,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1703,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1724,"sourceUnit":1736,"src":"140:38:7","symbolAliases":[{"foreign":{"id":1702,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"148:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1705,"name":"IERC165","nameLocations":["688:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1735,"src":"688:7:7"},"id":1706,"nodeType":"InheritanceSpecifier","src":"688:7:7"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":1704,"nodeType":"StructuredDocumentation","src":"180:479:7","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":1723,"linearizedBaseContracts":[1723,1735],"name":"ERC165","nameLocation":"678:6:7","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1734],"body":{"id":1721,"nodeType":"Block","src":"812:64:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1714,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"829:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1716,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"849:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1735_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1735_$","typeString":"type(contract IERC165)"}],"id":1715,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1735","typeString":"type(contract IERC165)"}},"id":1718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1713,"id":1720,"nodeType":"Return","src":"822:47:7"}]},"documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"702:23:7","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":1722,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:7","nodeType":"FunctionDefinition","parameters":{"id":1710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:7","nodeType":"VariableDeclaration","scope":1722,"src":"757:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1708,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:7"},"returnParameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1722,"src":"806:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1711,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:7"},"scope":1723,"src":"730:146:7","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1724,"src":"660:218:7","usedErrors":[],"usedEvents":[]}],"src":"114:765:7"},"id":7},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1735]},"id":1736,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1725,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1726,"nodeType":"StructuredDocumentation","src":"142:280:8","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1735,"linearizedBaseContracts":[1735],"name":"IERC165","nameLocation":"433:7:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1727,"nodeType":"StructuredDocumentation","src":"447:340:8","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1734,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:8","nodeType":"FunctionDefinition","parameters":{"id":1730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1729,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:8","nodeType":"VariableDeclaration","scope":1734,"src":"819:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1728,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:8"},"returnParameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1734,"src":"862:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1731,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:8"},"scope":1735,"src":"792:76:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1736,"src":"423:447:8","usedErrors":[],"usedEvents":[]}],"src":"115:756:8"},"id":8},"contracts/DrugVerification.sol":{"ast":{"absolutePath":"contracts/DrugVerification.sol","exportedSymbols":{"AccessControl":[296],"Context":[409],"DrugVerification":[2166],"ERC165":[1723],"Hashes":[626],"IAccessControl":[379],"IERC165":[1735],"MerkleProof":[1699],"ReentrancyGuard":[586]},"id":2167,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1737,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":1738,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2167,"sourceUnit":1700,"src":"58:68:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":1739,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2167,"sourceUnit":297,"src":"127:58:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":1740,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2167,"sourceUnit":587,"src":"186:59:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1742,"name":"AccessControl","nameLocations":["482:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":296,"src":"482:13:9"},"id":1743,"nodeType":"InheritanceSpecifier","src":"482:13:9"},{"baseName":{"id":1744,"name":"ReentrancyGuard","nameLocations":["497:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":586,"src":"497:15:9"},"id":1745,"nodeType":"InheritanceSpecifier","src":"497:15:9"}],"canonicalName":"DrugVerification","contractDependencies":[],"contractKind":"contract","documentation":{"id":1741,"nodeType":"StructuredDocumentation","src":"247:205:9","text":" @title DrugVerification\n @dev Enhanced contract for drug verification using Merkle proofs with advanced security\n @notice Implements comprehensive drug authentication and verification system"},"fullyImplemented":true,"id":2166,"linearizedBaseContracts":[2166,586,296,1723,1735,379,409],"name":"DrugVerification","nameLocation":"462:16:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"e7705db6","id":1750,"mutability":"constant","name":"VERIFIER_ROLE","nameLocation":"548:13:9","nodeType":"VariableDeclaration","scope":2166,"src":"524:66:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"524:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"56455249464945525f524f4c45","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"574:15:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09","typeString":"literal_string \"VERIFIER_ROLE\""},"value":"VERIFIER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09","typeString":"literal_string \"VERIFIER_ROLE\""}],"id":1747,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"564:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"564:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"b500365e","id":1755,"mutability":"constant","name":"BATCH_CREATOR_ROLE","nameLocation":"620:18:9","nodeType":"VariableDeclaration","scope":2166,"src":"596:76:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1751,"name":"bytes32","nodeType":"ElementaryTypeName","src":"596:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"42415443485f43524541544f525f524f4c45","id":1753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"651:20:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_f01dfff628bb2030bb23788fe73598a0f61c4e4b7f7ab01ac604be7f33162b48","typeString":"literal_string \"BATCH_CREATOR_ROLE\""},"value":"BATCH_CREATOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f01dfff628bb2030bb23788fe73598a0f61c4e4b7f7ab01ac604be7f33162b48","typeString":"literal_string \"BATCH_CREATOR_ROLE\""}],"id":1752,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"641:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"641:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"canonicalName":"DrugVerification.DrugData","id":1772,"members":[{"constant":false,"id":1757,"mutability":"mutable","name":"name","nameLocation":"716:4:9","nodeType":"VariableDeclaration","scope":1772,"src":"709:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1756,"name":"string","nodeType":"ElementaryTypeName","src":"709:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1759,"mutability":"mutable","name":"drugCode","nameLocation":"737:8:9","nodeType":"VariableDeclaration","scope":1772,"src":"730:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1758,"name":"string","nodeType":"ElementaryTypeName","src":"730:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1761,"mutability":"mutable","name":"manufacturer","nameLocation":"783:12:9","nodeType":"VariableDeclaration","scope":1772,"src":"776:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1760,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1763,"mutability":"mutable","name":"batchNumber","nameLocation":"813:11:9","nodeType":"VariableDeclaration","scope":1772,"src":"805:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1762,"name":"uint256","nodeType":"ElementaryTypeName","src":"805:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1765,"mutability":"mutable","name":"manufactureDate","nameLocation":"842:15:9","nodeType":"VariableDeclaration","scope":1772,"src":"834:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1764,"name":"uint256","nodeType":"ElementaryTypeName","src":"834:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1767,"mutability":"mutable","name":"expiryDate","nameLocation":"875:10:9","nodeType":"VariableDeclaration","scope":1772,"src":"867:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1766,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1769,"mutability":"mutable","name":"regulatoryApproval","nameLocation":"902:18:9","nodeType":"VariableDeclaration","scope":1772,"src":"895:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1768,"name":"string","nodeType":"ElementaryTypeName","src":"895:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1771,"mutability":"mutable","name":"additionalData","nameLocation":"964:14:9","nodeType":"VariableDeclaration","scope":1772,"src":"957:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1770,"name":"string","nodeType":"ElementaryTypeName","src":"957:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"DrugData","nameLocation":"690:8:9","nodeType":"StructDefinition","scope":2166,"src":"683:302:9","visibility":"public"},{"canonicalName":"DrugVerification.BatchInfo","id":1785,"members":[{"constant":false,"id":1774,"mutability":"mutable","name":"merkleRoot","nameLocation":"1030:10:9","nodeType":"VariableDeclaration","scope":1785,"src":"1022:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1022:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1776,"mutability":"mutable","name":"creator","nameLocation":"1058:7:9","nodeType":"VariableDeclaration","scope":1785,"src":"1050:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1775,"name":"address","nodeType":"ElementaryTypeName","src":"1050:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1778,"mutability":"mutable","name":"timestamp","nameLocation":"1083:9:9","nodeType":"VariableDeclaration","scope":1785,"src":"1075:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1777,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"drugCount","nameLocation":"1110:9:9","nodeType":"VariableDeclaration","scope":1785,"src":"1102:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1779,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1782,"mutability":"mutable","name":"isActive","nameLocation":"1134:8:9","nodeType":"VariableDeclaration","scope":1785,"src":"1129:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1781,"name":"bool","nodeType":"ElementaryTypeName","src":"1129:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1784,"mutability":"mutable","name":"description","nameLocation":"1159:11:9","nodeType":"VariableDeclaration","scope":1785,"src":"1152:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1783,"name":"string","nodeType":"ElementaryTypeName","src":"1152:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"BatchInfo","nameLocation":"1002:9:9","nodeType":"StructDefinition","scope":2166,"src":"995:182:9","visibility":"public"},{"constant":false,"functionSelector":"74aa1496","id":1790,"mutability":"mutable","name":"batchInfo","nameLocation":"1224:9:9","nodeType":"VariableDeclaration","scope":2166,"src":"1187:46:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_BatchInfo_$1785_storage_$","typeString":"mapping(bytes32 => struct DrugVerification.BatchInfo)"},"typeName":{"id":1789,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1786,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1195:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1187:29:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_BatchInfo_$1785_storage_$","typeString":"mapping(bytes32 => struct DrugVerification.BatchInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1788,"nodeType":"UserDefinedTypeName","pathNode":{"id":1787,"name":"BatchInfo","nameLocations":["1206:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1785,"src":"1206:9:9"},"referencedDeclaration":1785,"src":"1206:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_BatchInfo_$1785_storage_ptr","typeString":"struct DrugVerification.BatchInfo"}}},"visibility":"public"},{"constant":false,"functionSelector":"52bcc90d","id":1794,"mutability":"mutable","name":"verifiedDrugs","nameLocation":"1271:13:9","nodeType":"VariableDeclaration","scope":2166,"src":"1239:45:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":1793,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1791,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1247:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1239:24:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1792,"name":"bool","nodeType":"ElementaryTypeName","src":"1258:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"fc68d3dd","id":1798,"mutability":"mutable","name":"drugVerificationCount","nameLocation":"1325:21:9","nodeType":"VariableDeclaration","scope":2166,"src":"1290:56:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":1797,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1290:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"1309:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"c3f5a1b4","id":1802,"mutability":"mutable","name":"verifierCount","nameLocation":"1387:13:9","nodeType":"VariableDeclaration","scope":2166,"src":"1352:48:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1801,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1799,"name":"address","nodeType":"ElementaryTypeName","src":"1360:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1352:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1800,"name":"uint256","nodeType":"ElementaryTypeName","src":"1371:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"0fb669f9a7fefdd0910acbdc2e6a292a89e1a4996205b698f244f33aa823bbe5","id":1814,"name":"DrugBatchCreated","nameLocation":"1417:16:9","nodeType":"EventDefinition","parameters":{"id":1813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"indexed":true,"mutability":"mutable","name":"batchHash","nameLocation":"1459:9:9","nodeType":"VariableDeclaration","scope":1814,"src":"1443:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1803,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1443:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1806,"indexed":false,"mutability":"mutable","name":"merkleRoot","nameLocation":"1486:10:9","nodeType":"VariableDeclaration","scope":1814,"src":"1478:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1478:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1808,"indexed":true,"mutability":"mutable","name":"creator","nameLocation":"1522:7:9","nodeType":"VariableDeclaration","scope":1814,"src":"1506:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1807,"name":"address","nodeType":"ElementaryTypeName","src":"1506:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1810,"indexed":false,"mutability":"mutable","name":"drugCount","nameLocation":"1547:9:9","nodeType":"VariableDeclaration","scope":1814,"src":"1539:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1809,"name":"uint256","nodeType":"ElementaryTypeName","src":"1539:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1812,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1574:9:9","nodeType":"VariableDeclaration","scope":1814,"src":"1566:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1811,"name":"uint256","nodeType":"ElementaryTypeName","src":"1566:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1433:156:9"},"src":"1411:179:9"},{"anonymous":false,"eventSelector":"1bad957772d37d622630f431a184d6e6932abfe1ddf17b738b3e6b0320715919","id":1826,"name":"DrugVerificationResult","nameLocation":"1606:22:9","nodeType":"EventDefinition","parameters":{"id":1825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"indexed":true,"mutability":"mutable","name":"drugHash","nameLocation":"1654:8:9","nodeType":"VariableDeclaration","scope":1826,"src":"1638:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1815,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1638:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1818,"indexed":true,"mutability":"mutable","name":"batchHash","nameLocation":"1688:9:9","nodeType":"VariableDeclaration","scope":1826,"src":"1672:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1817,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1672:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1820,"indexed":false,"mutability":"mutable","name":"isValid","nameLocation":"1712:7:9","nodeType":"VariableDeclaration","scope":1826,"src":"1707:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1819,"name":"bool","nodeType":"ElementaryTypeName","src":"1707:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1822,"indexed":true,"mutability":"mutable","name":"verifier","nameLocation":"1745:8:9","nodeType":"VariableDeclaration","scope":1826,"src":"1729:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1821,"name":"address","nodeType":"ElementaryTypeName","src":"1729:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1824,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1771:9:9","nodeType":"VariableDeclaration","scope":1826,"src":"1763:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1823,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1628:158:9"},"src":"1600:187:9"},{"anonymous":false,"eventSelector":"6cc795e272aa17edef887810c33965edb8d8f9f3377573bec2dcf05fc03bd540","id":1834,"name":"BatchDeactivated","nameLocation":"1803:16:9","nodeType":"EventDefinition","parameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"indexed":true,"mutability":"mutable","name":"batchHash","nameLocation":"1845:9:9","nodeType":"VariableDeclaration","scope":1834,"src":"1829:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1827,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1829:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1830,"indexed":true,"mutability":"mutable","name":"deactivator","nameLocation":"1880:11:9","nodeType":"VariableDeclaration","scope":1834,"src":"1864:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1829,"name":"address","nodeType":"ElementaryTypeName","src":"1864:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1832,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"1908:6:9","nodeType":"VariableDeclaration","scope":1834,"src":"1901:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1831,"name":"string","nodeType":"ElementaryTypeName","src":"1901:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1819:101:9"},"src":"1797:124:9"},{"body":{"id":1852,"nodeType":"Block","src":"1951:156:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1838,"name":"VERIFIER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"1977:13:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1839,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1992:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1996:6:9","memberName":"sender","nodeType":"MemberAccess","src":"1992:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1837,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1969:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1969:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1843,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2015:18:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1844,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2035:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2039:6:9","memberName":"sender","nodeType":"MemberAccess","src":"2035:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1842,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"2007:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2007:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1969:77:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e617574686f72697a6564207665726966696572","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2065:23:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_e96cd468cd1379d217552718218d9fceb887e00e1dcbef350aa3d55ffb3f1816","typeString":"literal_string \"Unauthorized verifier\""},"value":"Unauthorized verifier"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e96cd468cd1379d217552718218d9fceb887e00e1dcbef350aa3d55ffb3f1816","typeString":"literal_string \"Unauthorized verifier\""}],"id":1836,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1961:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1961:128:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1850,"nodeType":"ExpressionStatement","src":"1961:128:9"},{"id":1851,"nodeType":"PlaceholderStatement","src":"2099:1:9"}]},"id":1853,"name":"onlyVerifier","nameLocation":"1936:12:9","nodeType":"ModifierDefinition","parameters":{"id":1835,"nodeType":"ParameterList","parameters":[],"src":"1948:2:9"},"src":"1927:180:9","virtual":false,"visibility":"internal"},{"body":{"id":1871,"nodeType":"Block","src":"2141:166:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1857,"name":"BATCH_CREATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"2167:18:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1858,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2187:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:6:9","memberName":"sender","nodeType":"MemberAccess","src":"2187:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1856,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"2159:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2159:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1862,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2210:18:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1863,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2230:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2234:6:9","memberName":"sender","nodeType":"MemberAccess","src":"2230:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1861,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"2202:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2202:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2159:82:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e617574686f72697a65642062617463682063726561746f72","id":1867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2260:28:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_978a52157ac058ecc8830529e512c0b8e254dc6db8851f1f23b5552d1baef771","typeString":"literal_string \"Unauthorized batch creator\""},"value":"Unauthorized batch creator"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_978a52157ac058ecc8830529e512c0b8e254dc6db8851f1f23b5552d1baef771","typeString":"literal_string \"Unauthorized batch creator\""}],"id":1855,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2151:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2151:138:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1869,"nodeType":"ExpressionStatement","src":"2151:138:9"},{"id":1870,"nodeType":"PlaceholderStatement","src":"2299:1:9"}]},"id":1872,"name":"onlyBatchCreator","nameLocation":"2122:16:9","nodeType":"ModifierDefinition","parameters":{"id":1854,"nodeType":"ParameterList","parameters":[],"src":"2138:2:9"},"src":"2113:194:9","virtual":false,"visibility":"internal"},{"body":{"id":1893,"nodeType":"Block","src":"2327:158:9","statements":[{"expression":{"arguments":[{"id":1876,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2348:18:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1877,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2368:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2372:6:9","memberName":"sender","nodeType":"MemberAccess","src":"2368:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1875,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"2337:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2337:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1880,"nodeType":"ExpressionStatement","src":"2337:42:9"},{"expression":{"arguments":[{"id":1882,"name":"VERIFIER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"2400:13:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1883,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2415:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2419:6:9","memberName":"sender","nodeType":"MemberAccess","src":"2415:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1881,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"2389:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2389:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1886,"nodeType":"ExpressionStatement","src":"2389:37:9"},{"expression":{"arguments":[{"id":1888,"name":"BATCH_CREATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"2447:18:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1889,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2467:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2471:6:9","memberName":"sender","nodeType":"MemberAccess","src":"2467:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1887,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"2436:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2436:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1892,"nodeType":"ExpressionStatement","src":"2436:42:9"}]},"id":1894,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1873,"nodeType":"ParameterList","parameters":[],"src":"2324:2:9"},"returnParameters":{"id":1874,"nodeType":"ParameterList","parameters":[],"src":"2327:0:9"},"scope":2166,"src":"2313:172:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1960,"nodeType":"Block","src":"2696:594:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1910,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"2714:11:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2737:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2729:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2729:7:9","typeDescriptions":{}}},"id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2729:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2714:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206d65726b6c6520726f6f74","id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2741:21:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d274b7c53aa3438533a57db7a3ef116dc2993e8091274c7e53421a027e3bba5","typeString":"literal_string \"Invalid merkle root\""},"value":"Invalid merkle root"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3d274b7c53aa3438533a57db7a3ef116dc2993e8091274c7e53421a027e3bba5","typeString":"literal_string \"Invalid merkle root\""}],"id":1909,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2706:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2706:57:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1918,"nodeType":"ExpressionStatement","src":"2706:57:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1920,"name":"_drugCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"2781:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2794:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2781:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4472756720636f756e74206d75737420626520706f736974697665","id":1923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2797:29:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_55f6690dc2abc09ea65319ed1421f19d3a8de3f10a914fc227f38935d1d45f45","typeString":"literal_string \"Drug count must be positive\""},"value":"Drug count must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_55f6690dc2abc09ea65319ed1421f19d3a8de3f10a914fc227f38935d1d45f45","typeString":"literal_string \"Drug count must be positive\""}],"id":1919,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2773:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2773:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1925,"nodeType":"ExpressionStatement","src":"2773:54:9"},{"expression":{"arguments":[{"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2845:31:9","subExpression":{"expression":{"baseExpression":{"id":1927,"name":"batchInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"2846:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_BatchInfo_$1785_storage_$","typeString":"mapping(bytes32 => struct DrugVerification.BatchInfo storage ref)"}},"id":1929,"indexExpression":{"id":1928,"name":"_batchHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"2856:10:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2846:21:9","typeDescriptions":{"typeIdentifier":"t_struct$_BatchInfo_$1785_storage","typeString":"struct DrugVerification.BatchInfo storage ref"}},"id":1930,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2868:8:9","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1782,"src":"2846:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426174636820616c726561647920657869737473","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2878:22:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_29b48ae655aa3ee2f7612336d700663183d24df877fd7c5da8ae0435034680f0","typeString":"literal_string \"Batch already exists\""},"value":"Batch already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_29b48ae655aa3ee2f7612336d700663183d24df877fd7c5da8ae0435034680f0","typeString":"literal_string \"Batch already exists\""}],"id":1926,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2837:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2837:64:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1934,"nodeType":"ExpressionStatement","src":"2837:64:9"},{"expression":{"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1935,"name":"batchInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"2920:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_BatchInfo_$1785_storage_$","typeString":"mapping(bytes32 => struct DrugVerification.BatchInfo storage ref)"}},"id":1937,"indexExpression":{"id":1936,"name":"_batchHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"2930:10:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2920:21:9","typeDescriptions":{"typeIdentifier":"t_struct$_BatchInfo_$1785_storage","typeString":"struct DrugVerification.BatchInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1939,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"2980:11:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1940,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3014:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:9","memberName":"sender","nodeType":"MemberAccess","src":"3014:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1942,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3049:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3055:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"3049:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1944,"name":"_drugCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"3089:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3123:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1946,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"3154:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1938,"name":"BatchInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"2944:9:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_BatchInfo_$1785_storage_ptr_$","typeString":"type(struct DrugVerification.BatchInfo storage pointer)"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2968:10:9","3005:7:9","3038:9:9","3078:9:9","3113:8:9","3141:11:9"],"names":["merkleRoot","creator","timestamp","drugCount","isActive","description"],"nodeType":"FunctionCall","src":"2944:233:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BatchInfo_$1785_memory_ptr","typeString":"struct DrugVerification.BatchInfo memory"}},"src":"2920:257:9","typeDescriptions":{"typeIdentifier":"t_struct$_BatchInfo_$1785_storage","typeString":"struct DrugVerification.BatchInfo storage ref"}},"id":1949,"nodeType":"ExpressionStatement","src":"2920:257:9"},{"eventCall":{"arguments":[{"id":1951,"name":"_batchHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"3218:10:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1952,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"3230:11:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1953,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3243:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3247:6:9","memberName":"sender","nodeType":"MemberAccess","src":"3243:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1955,"name":"_drugCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"3255:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1956,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3267:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3273:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"3267:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1950,"name":"DrugBatchCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"3201:16:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,bytes32,address,uint256,uint256)"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3201:82:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1959,"nodeType":"EmitStatement","src":"3196:87:9"}]},"functionSelector":"c4233e5c","id":1961,"implemented":true,"kind":"function","modifiers":[{"id":1905,"kind":"modifierInvocation","modifierName":{"id":1904,"name":"onlyBatchCreator","nameLocations":["2666:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":1872,"src":"2666:16:9"},"nodeType":"ModifierInvocation","src":"2666:16:9"},{"id":1907,"kind":"modifierInvocation","modifierName":{"id":1906,"name":"nonReentrant","nameLocations":["2683:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":550,"src":"2683:12:9"},"nodeType":"ModifierInvocation","src":"2683:12:9"}],"name":"createBatchWithMerkleRoot","nameLocation":"2504:25:9","nodeType":"FunctionDefinition","parameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1896,"mutability":"mutable","name":"_batchHash","nameLocation":"2547:10:9","nodeType":"VariableDeclaration","scope":1961,"src":"2539:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1895,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2539:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1898,"mutability":"mutable","name":"_merkleRoot","nameLocation":"2575:11:9","nodeType":"VariableDeclaration","scope":1961,"src":"2567:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1897,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2567:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1900,"mutability":"mutable","name":"_drugCount","nameLocation":"2604:10:9","nodeType":"VariableDeclaration","scope":1961,"src":"2596:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1899,"name":"uint256","nodeType":"ElementaryTypeName","src":"2596:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1902,"mutability":"mutable","name":"_description","nameLocation":"2638:12:9","nodeType":"VariableDeclaration","scope":1961,"src":"2624:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1901,"name":"string","nodeType":"ElementaryTypeName","src":"2624:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2529:127:9"},"returnParameters":{"id":1908,"nodeType":"ParameterList","parameters":[],"src":"2696:0:9"},"scope":2166,"src":"2495:795:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2043,"nodeType":"Block","src":"3471:590:9","statements":[{"assignments":[1979],"declarations":[{"constant":false,"id":1979,"mutability":"mutable","name":"batch","nameLocation":"3499:5:9","nodeType":"VariableDeclaration","scope":2043,"src":"3481:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BatchInfo_$1785_storage_ptr","typeString":"struct DrugVerification.BatchInfo"},"typeName":{"id":1978,"nodeType":"UserDefinedTypeName","pathNode":{"id":1977,"name":"BatchInfo","nameLocations":["3481:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1785,"src":"3481:9:9"},"referencedDeclaration":1785,"src":"3481:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_BatchInfo_$1785_storage_ptr","typeString":"struct DrugVerification.BatchInfo"}},"visibility":"internal"}],"id":1983,"initialValue":{"baseExpression":{"id":1980,"name":"batchInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"3507:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_BatchInfo_$1785_storage_$","typeString":"mapping(bytes32 => struct DrugVerification.BatchInfo storage ref)"}},"id":1982,"indexExpression":{"id":1981,"name":"_batchHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"3517:10:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3507:21:9","typeDescriptions":{"typeIdentifier":"t_struct$_BatchInfo_$1785_storage","typeString":"struct DrugVerification.BatchInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3481:47:9"},{"expression":{"arguments":[{"expression":{"id":1985,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"3546:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_BatchInfo_$1785_storage_ptr","typeString":"struct DrugVerification.BatchInfo storage pointer"}},"id":1986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3552:8:9","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1782,"src":"3546:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4261746368206e6f7420666f756e64206f7220696e616374697665","id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3562:29:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_0bcb70beadb74d3f8aded10e30cc29ee5f0d2500f26596e25bac3af427563b7a","typeString":"literal_string \"Batch not found or inactive\""},"value":"Batch not found or inactive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0bcb70beadb74d3f8aded10e30cc29ee5f0d2500f26596e25bac3af427563b7a","typeString":"literal_string \"Batch not found or inactive\""}],"id":1984,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3538:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3538:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1989,"nodeType":"ExpressionStatement","src":"3538:54:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1991,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"3610:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_BatchInfo_$1785_storage_ptr","typeString":"struct DrugVerification.BatchInfo storage pointer"}},"id":1992,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3616:10:9","memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":1774,"src":"3610:16:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3638:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3630:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1993,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3630:7:9","typeDescriptions":{}}},"id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3630:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3610:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206261746368","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3642:15:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec8457dc51ea2630e4b9e1ed188b8aab41d99c12bbb162e1fdeb588486a1f746","typeString":"literal_string \"Invalid batch\""},"value":"Invalid batch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ec8457dc51ea2630e4b9e1ed188b8aab41d99c12bbb162e1fdeb588486a1f746","typeString":"literal_string \"Invalid batch\""}],"id":1990,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3602:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3602:56:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2000,"nodeType":"ExpressionStatement","src":"3602:56:9"},{"assignments":[2002],"declarations":[{"constant":false,"id":2002,"mutability":"mutable","name":"isValid","nameLocation":"3682:7:9","nodeType":"VariableDeclaration","scope":2043,"src":"3677:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2001,"name":"bool","nodeType":"ElementaryTypeName","src":"3677:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2010,"initialValue":{"arguments":[{"id":2005,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"3711:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"expression":{"id":2006,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"3719:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_BatchInfo_$1785_storage_ptr","typeString":"struct DrugVerification.BatchInfo storage pointer"}},"id":2007,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3725:10:9","memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":1774,"src":"3719:16:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2008,"name":"_drugHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"3737:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2003,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"3692:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$1699_$","typeString":"type(library MerkleProof)"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3704:6:9","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":655,"src":"3692:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3677:70:9"},{"condition":{"id":2011,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"3770:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2030,"nodeType":"IfStatement","src":"3766:158:9","trueBody":{"id":2029,"nodeType":"Block","src":"3779:145:9","statements":[{"expression":{"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2012,"name":"verifiedDrugs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"3793:13:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":2014,"indexExpression":{"id":2013,"name":"_drugHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"3807:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3793:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3820:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3793:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2017,"nodeType":"ExpressionStatement","src":"3793:31:9"},{"expression":{"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3838:34:9","subExpression":{"baseExpression":{"id":2018,"name":"drugVerificationCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"3838:21:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2020,"indexExpression":{"id":2019,"name":"_drugHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"3860:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3838:32:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2022,"nodeType":"ExpressionStatement","src":"3838:34:9"},{"expression":{"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3886:27:9","subExpression":{"baseExpression":{"id":2023,"name":"verifierCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"3886:13:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2026,"indexExpression":{"expression":{"id":2024,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3900:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3904:6:9","memberName":"sender","nodeType":"MemberAccess","src":"3900:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3886:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2028,"nodeType":"ExpressionStatement","src":"3886:27:9"}]}},{"eventCall":{"arguments":[{"id":2032,"name":"_drugHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"3970:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2033,"name":"_batchHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"3981:10:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2034,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"3993:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":2035,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4002:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4006:6:9","memberName":"sender","nodeType":"MemberAccess","src":"4002:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2037,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4014:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4020:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"4014:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2031,"name":"DrugVerificationResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"3947:22:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bool_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,bytes32,bool,address,uint256)"}},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3947:83:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2040,"nodeType":"EmitStatement","src":"3942:88:9"},{"expression":{"id":2041,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"4047:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1976,"id":2042,"nodeType":"Return","src":"4040:14:9"}]},"functionSelector":"5b46e13e","id":2044,"implemented":true,"kind":"function","modifiers":[{"id":1971,"kind":"modifierInvocation","modifierName":{"id":1970,"name":"onlyVerifier","nameLocations":["3430:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1853,"src":"3430:12:9"},"nodeType":"ModifierInvocation","src":"3430:12:9"},{"id":1973,"kind":"modifierInvocation","modifierName":{"id":1972,"name":"nonReentrant","nameLocations":["3443:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":550,"src":"3443:12:9"},"nodeType":"ModifierInvocation","src":"3443:12:9"}],"name":"verifyDrugInBatch","nameLocation":"3309:17:9","nodeType":"FunctionDefinition","parameters":{"id":1969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1963,"mutability":"mutable","name":"_batchHash","nameLocation":"3344:10:9","nodeType":"VariableDeclaration","scope":2044,"src":"3336:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1962,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3336:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1965,"mutability":"mutable","name":"_drugHash","nameLocation":"3372:9:9","nodeType":"VariableDeclaration","scope":2044,"src":"3364:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1964,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3364:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1968,"mutability":"mutable","name":"_proof","nameLocation":"3408:6:9","nodeType":"VariableDeclaration","scope":2044,"src":"3391:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3391:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1967,"nodeType":"ArrayTypeName","src":"3391:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3326:94:9"},"returnParameters":{"id":1976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2044,"src":"3465:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1974,"name":"bool","nodeType":"ElementaryTypeName","src":"3465:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3464:6:9"},"scope":2166,"src":"3300:761:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2075,"nodeType":"Block","src":"4188:197:9","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2054,"name":"batchInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"4206:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_BatchInfo_$1785_storage_$","typeString":"mapping(bytes32 => struct DrugVerification.BatchInfo storage ref)"}},"id":2056,"indexExpression":{"id":2055,"name":"_batchHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"4216:10:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4206:21:9","typeDescriptions":{"typeIdentifier":"t_struct$_BatchInfo_$1785_storage","typeString":"struct DrugVerification.BatchInfo storage ref"}},"id":2057,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4228:8:9","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1782,"src":"4206:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4261746368206e6f7420616374697665","id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4238:18:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_66adb2a0d46580cd252aae1a38e2c9e071ff597b1d9cf8fa7a20ab190fcc80d1","typeString":"literal_string \"Batch not active\""},"value":"Batch not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_66adb2a0d46580cd252aae1a38e2c9e071ff597b1d9cf8fa7a20ab190fcc80d1","typeString":"literal_string \"Batch not active\""}],"id":2053,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4198:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:59:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2060,"nodeType":"ExpressionStatement","src":"4198:59:9"},{"expression":{"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2061,"name":"batchInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"4276:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_BatchInfo_$1785_storage_$","typeString":"mapping(bytes32 => struct DrugVerification.BatchInfo storage ref)"}},"id":2063,"indexExpression":{"id":2062,"name":"_batchHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"4286:10:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4276:21:9","typeDescriptions":{"typeIdentifier":"t_struct$_BatchInfo_$1785_storage","typeString":"struct DrugVerification.BatchInfo storage ref"}},"id":2064,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4298:8:9","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1782,"src":"4276:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4309:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4276:38:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2067,"nodeType":"ExpressionStatement","src":"4276:38:9"},{"eventCall":{"arguments":[{"id":2069,"name":"_batchHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"4346:10:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2070,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4358:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4362:6:9","memberName":"sender","nodeType":"MemberAccess","src":"4358:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2072,"name":"_reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"4370:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2068,"name":"BatchDeactivated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"4329:16:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes32,address,string memory)"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4329:49:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2074,"nodeType":"EmitStatement","src":"4324:54:9"}]},"functionSelector":"b97d8c47","id":2076,"implemented":true,"kind":"function","modifiers":[{"id":2051,"kind":"modifierInvocation","modifierName":{"id":2050,"name":"onlyBatchCreator","nameLocations":["4171:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":1872,"src":"4171:16:9"},"nodeType":"ModifierInvocation","src":"4171:16:9"}],"name":"deactivateBatch","nameLocation":"4080:15:9","nodeType":"FunctionDefinition","parameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"_batchHash","nameLocation":"4113:10:9","nodeType":"VariableDeclaration","scope":2076,"src":"4105:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2045,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4105:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2048,"mutability":"mutable","name":"_reason","nameLocation":"4148:7:9","nodeType":"VariableDeclaration","scope":2076,"src":"4134:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2047,"name":"string","nodeType":"ElementaryTypeName","src":"4134:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4095:66:9"},"returnParameters":{"id":2052,"nodeType":"ParameterList","parameters":[],"src":"4188:0:9"},"scope":2166,"src":"4071:314:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2087,"nodeType":"Block","src":"4467:48:9","statements":[{"expression":{"baseExpression":{"id":2083,"name":"verifiedDrugs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"4484:13:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":2085,"indexExpression":{"id":2084,"name":"_drugHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"4498:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4484:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2082,"id":2086,"nodeType":"Return","src":"4477:31:9"}]},"functionSelector":"1d4aa61f","id":2088,"implemented":true,"kind":"function","modifiers":[],"name":"isDrugVerified","nameLocation":"4404:14:9","nodeType":"FunctionDefinition","parameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2078,"mutability":"mutable","name":"_drugHash","nameLocation":"4427:9:9","nodeType":"VariableDeclaration","scope":2088,"src":"4419:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4419:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4418:19:9"},"returnParameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2088,"src":"4461:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2080,"name":"bool","nodeType":"ElementaryTypeName","src":"4461:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4460:6:9"},"scope":2166,"src":"4395:120:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2100,"nodeType":"Block","src":"4608:45:9","statements":[{"expression":{"baseExpression":{"id":2096,"name":"batchInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"4625:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_BatchInfo_$1785_storage_$","typeString":"mapping(bytes32 => struct DrugVerification.BatchInfo storage ref)"}},"id":2098,"indexExpression":{"id":2097,"name":"_batchHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"4635:10:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4625:21:9","typeDescriptions":{"typeIdentifier":"t_struct$_BatchInfo_$1785_storage","typeString":"struct DrugVerification.BatchInfo storage ref"}},"functionReturnParameters":2095,"id":2099,"nodeType":"Return","src":"4618:28:9"}]},"functionSelector":"753207c7","id":2101,"implemented":true,"kind":"function","modifiers":[],"name":"getBatchInfo","nameLocation":"4534:12:9","nodeType":"FunctionDefinition","parameters":{"id":2091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2090,"mutability":"mutable","name":"_batchHash","nameLocation":"4555:10:9","nodeType":"VariableDeclaration","scope":2101,"src":"4547:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2089,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4547:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4546:20:9"},"returnParameters":{"id":2095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2101,"src":"4590:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BatchInfo_$1785_memory_ptr","typeString":"struct DrugVerification.BatchInfo"},"typeName":{"id":2093,"nodeType":"UserDefinedTypeName","pathNode":{"id":2092,"name":"BatchInfo","nameLocations":["4590:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1785,"src":"4590:9:9"},"referencedDeclaration":1785,"src":"4590:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_BatchInfo_$1785_storage_ptr","typeString":"struct DrugVerification.BatchInfo"}},"visibility":"internal"}],"src":"4589:18:9"},"scope":2166,"src":"4525:128:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2112,"nodeType":"Block","src":"4748:56:9","statements":[{"expression":{"baseExpression":{"id":2108,"name":"drugVerificationCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"4765:21:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2110,"indexExpression":{"id":2109,"name":"_drugHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"4787:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4765:32:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2107,"id":2111,"nodeType":"Return","src":"4758:39:9"}]},"functionSelector":"1c43e095","id":2113,"implemented":true,"kind":"function","modifiers":[],"name":"getDrugVerificationCount","nameLocation":"4672:24:9","nodeType":"FunctionDefinition","parameters":{"id":2104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2103,"mutability":"mutable","name":"_drugHash","nameLocation":"4705:9:9","nodeType":"VariableDeclaration","scope":2113,"src":"4697:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2102,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4697:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4696:19:9"},"returnParameters":{"id":2107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2113,"src":"4739:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2105,"name":"uint256","nodeType":"ElementaryTypeName","src":"4739:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4738:9:9"},"scope":2166,"src":"4663:141:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2143,"nodeType":"Block","src":"4977:313:9","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2124,"name":"_drug","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"5034:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_DrugData_$1772_memory_ptr","typeString":"struct DrugVerification.DrugData memory"}},"id":2125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5040:4:9","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":1757,"src":"5034:10:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2126,"name":"_drug","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"5058:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_DrugData_$1772_memory_ptr","typeString":"struct DrugVerification.DrugData memory"}},"id":2127,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5064:8:9","memberName":"drugCode","nodeType":"MemberAccess","referencedDeclaration":1759,"src":"5058:14:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2128,"name":"_drug","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"5086:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_DrugData_$1772_memory_ptr","typeString":"struct DrugVerification.DrugData memory"}},"id":2129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5092:12:9","memberName":"manufacturer","nodeType":"MemberAccess","referencedDeclaration":1761,"src":"5086:18:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2130,"name":"_drug","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"5118:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_DrugData_$1772_memory_ptr","typeString":"struct DrugVerification.DrugData memory"}},"id":2131,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5124:11:9","memberName":"batchNumber","nodeType":"MemberAccess","referencedDeclaration":1763,"src":"5118:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2132,"name":"_drug","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"5149:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_DrugData_$1772_memory_ptr","typeString":"struct DrugVerification.DrugData memory"}},"id":2133,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5155:15:9","memberName":"manufactureDate","nodeType":"MemberAccess","referencedDeclaration":1765,"src":"5149:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2134,"name":"_drug","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"5184:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_DrugData_$1772_memory_ptr","typeString":"struct DrugVerification.DrugData memory"}},"id":2135,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5190:10:9","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":1767,"src":"5184:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2136,"name":"_drug","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"5214:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_DrugData_$1772_memory_ptr","typeString":"struct DrugVerification.DrugData memory"}},"id":2137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5220:18:9","memberName":"regulatoryApproval","nodeType":"MemberAccess","referencedDeclaration":1769,"src":"5214:24:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2138,"name":"_drug","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"5252:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_DrugData_$1772_memory_ptr","typeString":"struct DrugVerification.DrugData memory"}},"id":2139,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5258:14:9","memberName":"additionalData","nodeType":"MemberAccess","referencedDeclaration":1771,"src":"5252:20:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2122,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5004:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5008:12:9","memberName":"encodePacked","nodeType":"MemberAccess","src":"5004:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5004:278:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2121,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4994:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4994:289:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2120,"id":2142,"nodeType":"Return","src":"4987:296:9"}]},"functionSelector":"8274d045","id":2144,"implemented":true,"kind":"function","modifiers":[],"name":"generateDrugHash","nameLocation":"4907:16:9","nodeType":"FunctionDefinition","parameters":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"_drug","nameLocation":"4940:5:9","nodeType":"VariableDeclaration","scope":2144,"src":"4924:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DrugData_$1772_memory_ptr","typeString":"struct DrugVerification.DrugData"},"typeName":{"id":2115,"nodeType":"UserDefinedTypeName","pathNode":{"id":2114,"name":"DrugData","nameLocations":["4924:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1772,"src":"4924:8:9"},"referencedDeclaration":1772,"src":"4924:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_DrugData_$1772_storage_ptr","typeString":"struct DrugVerification.DrugData"}},"visibility":"internal"}],"src":"4923:23:9"},"returnParameters":{"id":2120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2144,"src":"4968:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4968:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4967:9:9"},"scope":2166,"src":"4898:392:9","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":2164,"nodeType":"Block","src":"5500:90:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2158,"name":"_batchName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"5544:10:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2159,"name":"_manufacturer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"5556:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2160,"name":"_timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"5571:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2156,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5527:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5531:12:9","memberName":"encodePacked","nodeType":"MemberAccess","src":"5527:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5527:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2155,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5517:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:66:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2154,"id":2163,"nodeType":"Return","src":"5510:73:9"}]},"functionSelector":"be8c9fab","id":2165,"implemented":true,"kind":"function","modifiers":[],"name":"generateBatchHash","nameLocation":"5353:17:9","nodeType":"FunctionDefinition","parameters":{"id":2151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"_batchName","nameLocation":"5394:10:9","nodeType":"VariableDeclaration","scope":2165,"src":"5380:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2145,"name":"string","nodeType":"ElementaryTypeName","src":"5380:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2148,"mutability":"mutable","name":"_manufacturer","nameLocation":"5422:13:9","nodeType":"VariableDeclaration","scope":2165,"src":"5414:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2147,"name":"address","nodeType":"ElementaryTypeName","src":"5414:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2150,"mutability":"mutable","name":"_timestamp","nameLocation":"5453:10:9","nodeType":"VariableDeclaration","scope":2165,"src":"5445:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2149,"name":"uint256","nodeType":"ElementaryTypeName","src":"5445:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5370:99:9"},"returnParameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2165,"src":"5491:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5491:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5490:9:9"},"scope":2166,"src":"5344:246:9","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":2167,"src":"453:5139:9","usedErrors":[306,309,531],"usedEvents":[318,327,336,1814,1826,1834]}],"src":"32:5561:9"},"id":9},"contracts/IPFSStorage.sol":{"ast":{"absolutePath":"contracts/IPFSStorage.sol","exportedSymbols":{"AccessControl":[296],"Context":[409],"ERC165":[1723],"IAccessControl":[379],"IERC165":[1735],"IPFSStorage":[2680],"ReentrancyGuard":[586]},"id":2681,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2168,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:10"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":2169,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2681,"sourceUnit":297,"src":"58:58:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":2170,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2681,"sourceUnit":587,"src":"117:59:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2172,"name":"AccessControl","nameLocations":["414:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":296,"src":"414:13:10"},"id":2173,"nodeType":"InheritanceSpecifier","src":"414:13:10"},{"baseName":{"id":2174,"name":"ReentrancyGuard","nameLocations":["429:15:10"],"nodeType":"IdentifierPath","referencedDeclaration":586,"src":"429:15:10"},"id":2175,"nodeType":"InheritanceSpecifier","src":"429:15:10"}],"canonicalName":"IPFSStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":2171,"nodeType":"StructuredDocumentation","src":"178:211:10","text":" @title IPFSStorage\n @dev Enhanced utility contract for managing IPFS hashes and metadata with access control\n @notice Manages decentralized storage references with enhanced security and validation"},"fullyImplemented":true,"id":2680,"linearizedBaseContracts":[2680,586,296,1723,1735,379,409],"name":"IPFSStorage","nameLocation":"399:11:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"61cc0766","id":2180,"mutability":"constant","name":"UPLOADER_ROLE","nameLocation":"480:13:10","nodeType":"VariableDeclaration","scope":2680,"src":"456:66:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"456:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"55504c4f414445525f524f4c45","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"506:15:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_922390b27f65d828a1f7695b2eaae33fd0be87496792afddba1d25446a8fcb91","typeString":"literal_string \"UPLOADER_ROLE\""},"value":"UPLOADER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_922390b27f65d828a1f7695b2eaae33fd0be87496792afddba1d25446a8fcb91","typeString":"literal_string \"UPLOADER_ROLE\""}],"id":2177,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"496:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"496:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"797669c9","id":2185,"mutability":"constant","name":"MODERATOR_ROLE","nameLocation":"552:14:10","nodeType":"VariableDeclaration","scope":2680,"src":"528:68:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"528:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d4f44455241544f525f524f4c45","id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"579:16:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f","typeString":"literal_string \"MODERATOR_ROLE\""},"value":"MODERATOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f","typeString":"literal_string \"MODERATOR_ROLE\""}],"id":2182,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"569:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"canonicalName":"IPFSStorage.IPFSData","id":2204,"members":[{"constant":false,"id":2187,"mutability":"mutable","name":"hash","nameLocation":"640:4:10","nodeType":"VariableDeclaration","scope":2204,"src":"633:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2186,"name":"string","nodeType":"ElementaryTypeName","src":"633:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2189,"mutability":"mutable","name":"timestamp","nameLocation":"662:9:10","nodeType":"VariableDeclaration","scope":2204,"src":"654:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2188,"name":"uint256","nodeType":"ElementaryTypeName","src":"654:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2191,"mutability":"mutable","name":"uploader","nameLocation":"689:8:10","nodeType":"VariableDeclaration","scope":2204,"src":"681:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2190,"name":"address","nodeType":"ElementaryTypeName","src":"681:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2193,"mutability":"mutable","name":"metadata","nameLocation":"714:8:10","nodeType":"VariableDeclaration","scope":2204,"src":"707:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2192,"name":"string","nodeType":"ElementaryTypeName","src":"707:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2195,"mutability":"mutable","name":"category","nameLocation":"739:8:10","nodeType":"VariableDeclaration","scope":2204,"src":"732:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2194,"name":"string","nodeType":"ElementaryTypeName","src":"732:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2197,"mutability":"mutable","name":"fileSize","nameLocation":"809:8:10","nodeType":"VariableDeclaration","scope":2204,"src":"801:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2196,"name":"uint256","nodeType":"ElementaryTypeName","src":"801:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2199,"mutability":"mutable","name":"exists","nameLocation":"864:6:10","nodeType":"VariableDeclaration","scope":2204,"src":"859:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2198,"name":"bool","nodeType":"ElementaryTypeName","src":"859:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2201,"mutability":"mutable","name":"isActive","nameLocation":"885:8:10","nodeType":"VariableDeclaration","scope":2204,"src":"880:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2200,"name":"bool","nodeType":"ElementaryTypeName","src":"880:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2203,"mutability":"mutable","name":"checksum","nameLocation":"947:8:10","nodeType":"VariableDeclaration","scope":2204,"src":"940:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2202,"name":"string","nodeType":"ElementaryTypeName","src":"940:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"IPFSData","nameLocation":"614:8:10","nodeType":"StructDefinition","scope":2680,"src":"607:396:10","visibility":"public"},{"constant":false,"functionSelector":"f657367e","id":2209,"mutability":"mutable","name":"ipfsData","nameLocation":"1049:8:10","nodeType":"VariableDeclaration","scope":2680,"src":"1013:44:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_IPFSData_$2204_storage_$","typeString":"mapping(bytes32 => struct IPFSStorage.IPFSData)"},"typeName":{"id":2208,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2205,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1021:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1013:28:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_IPFSData_$2204_storage_$","typeString":"mapping(bytes32 => struct IPFSStorage.IPFSData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2207,"nodeType":"UserDefinedTypeName","pathNode":{"id":2206,"name":"IPFSData","nameLocations":["1032:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2204,"src":"1032:8:10"},"referencedDeclaration":2204,"src":"1032:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_IPFSData_$2204_storage_ptr","typeString":"struct IPFSStorage.IPFSData"}}},"visibility":"public"},{"constant":false,"functionSelector":"030d1efe","id":2214,"mutability":"mutable","name":"userUploads","nameLocation":"1100:11:10","nodeType":"VariableDeclaration","scope":2680,"src":"1063:48:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[])"},"typeName":{"id":2213,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2210,"name":"address","nodeType":"ElementaryTypeName","src":"1071:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1063:29:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":2211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1082:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2212,"nodeType":"ArrayTypeName","src":"1082:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"bd1f5f31","id":2218,"mutability":"mutable","name":"usedHashes","nameLocation":"1148:10:10","nodeType":"VariableDeclaration","scope":2680,"src":"1117:41:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"typeName":{"id":2217,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2215,"name":"string","nodeType":"ElementaryTypeName","src":"1125:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1117:23:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2216,"name":"bool","nodeType":"ElementaryTypeName","src":"1135:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"1ca62a8f","id":2222,"mutability":"mutable","name":"hashToKey","nameLocation":"1236:9:10","nodeType":"VariableDeclaration","scope":2680,"src":"1202:43:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bytes32_$","typeString":"mapping(string => bytes32)"},"typeName":{"id":2221,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2219,"name":"string","nodeType":"ElementaryTypeName","src":"1210:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1202:26:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bytes32_$","typeString":"mapping(string => bytes32)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1220:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"public"},{"constant":false,"functionSelector":"6d5a0bca","id":2224,"mutability":"mutable","name":"totalUploads","nameLocation":"1296:12:10","nodeType":"VariableDeclaration","scope":2680,"src":"1281:27:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2223,"name":"uint256","nodeType":"ElementaryTypeName","src":"1281:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1376d017","id":2231,"mutability":"mutable","name":"maxFileSize","nameLocation":"1329:11:10","nodeType":"VariableDeclaration","scope":2680,"src":"1314:45:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2225,"name":"uint256","nodeType":"ElementaryTypeName","src":"1314:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_52428800_by_1","typeString":"int_const 52428800"},"id":2230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_51200_by_1","typeString":"int_const 51200"},"id":2228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3530","id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:2:10","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31303234","id":2227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1348:4:10","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"value":"1024"},"src":"1343:9:10","typeDescriptions":{"typeIdentifier":"t_rational_51200_by_1","typeString":"int_const 51200"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31303234","id":2229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1355:4:10","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"value":"1024"},"src":"1343:16:10","typeDescriptions":{"typeIdentifier":"t_rational_52428800_by_1","typeString":"int_const 52428800"}},"visibility":"public"},{"anonymous":false,"eventSelector":"d521424c771641d8b8f36a97c36851d3a7be90259af6e1bb16d1eca049859d9d","id":2243,"name":"IPFSHashStored","nameLocation":"1398:14:10","nodeType":"EventDefinition","parameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2233,"indexed":true,"mutability":"mutable","name":"key","nameLocation":"1438:3:10","nodeType":"VariableDeclaration","scope":2243,"src":"1422:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2232,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1422:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2235,"indexed":false,"mutability":"mutable","name":"ipfsHash","nameLocation":"1458:8:10","nodeType":"VariableDeclaration","scope":2243,"src":"1451:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2234,"name":"string","nodeType":"ElementaryTypeName","src":"1451:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2237,"indexed":true,"mutability":"mutable","name":"uploader","nameLocation":"1492:8:10","nodeType":"VariableDeclaration","scope":2243,"src":"1476:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2236,"name":"address","nodeType":"ElementaryTypeName","src":"1476:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2239,"indexed":false,"mutability":"mutable","name":"category","nameLocation":"1517:8:10","nodeType":"VariableDeclaration","scope":2243,"src":"1510:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2238,"name":"string","nodeType":"ElementaryTypeName","src":"1510:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2241,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1543:9:10","nodeType":"VariableDeclaration","scope":2243,"src":"1535:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2240,"name":"uint256","nodeType":"ElementaryTypeName","src":"1535:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1412:146:10"},"src":"1392:167:10"},{"anonymous":false,"eventSelector":"d9d525adee424acef2cfc3c8709de8503772b6aa77eb1c7b609a79c9b92cf9b9","id":2251,"name":"IPFSDataDeactivated","nameLocation":"1575:19:10","nodeType":"EventDefinition","parameters":{"id":2250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2245,"indexed":true,"mutability":"mutable","name":"key","nameLocation":"1620:3:10","nodeType":"VariableDeclaration","scope":2251,"src":"1604:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2244,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2247,"indexed":true,"mutability":"mutable","name":"deactivator","nameLocation":"1649:11:10","nodeType":"VariableDeclaration","scope":2251,"src":"1633:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2246,"name":"address","nodeType":"ElementaryTypeName","src":"1633:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2249,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"1677:6:10","nodeType":"VariableDeclaration","scope":2251,"src":"1670:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2248,"name":"string","nodeType":"ElementaryTypeName","src":"1670:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1594:95:10"},"src":"1569:121:10"},{"anonymous":false,"eventSelector":"0f1240668dc971ed549f4c39f8a2689f95c9d4a57931543c8ae5d3baf6cbf052","id":2259,"name":"MaxFileSizeUpdated","nameLocation":"1706:18:10","nodeType":"EventDefinition","parameters":{"id":2258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2253,"indexed":false,"mutability":"mutable","name":"oldSize","nameLocation":"1742:7:10","nodeType":"VariableDeclaration","scope":2259,"src":"1734:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2252,"name":"uint256","nodeType":"ElementaryTypeName","src":"1734:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2255,"indexed":false,"mutability":"mutable","name":"newSize","nameLocation":"1767:7:10","nodeType":"VariableDeclaration","scope":2259,"src":"1759:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2254,"name":"uint256","nodeType":"ElementaryTypeName","src":"1759:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2257,"indexed":false,"mutability":"mutable","name":"updatedBy","nameLocation":"1792:9:10","nodeType":"VariableDeclaration","scope":2259,"src":"1784:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2256,"name":"address","nodeType":"ElementaryTypeName","src":"1784:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1724:83:10"},"src":"1700:108:10"},{"body":{"id":2277,"nodeType":"Block","src":"1838:156:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2263,"name":"UPLOADER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"1864:13:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2264,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1879:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1883:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1879:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2262,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1856:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1856:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2268,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"1902:18:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2269,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1922:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1926:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1922:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2267,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1894:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1894:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1856:77:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e617574686f72697a65642075706c6f61646572","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1952:23:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8cad3caef56bdc54d9f8eea80d0a4893e59bf4485b77979baac541ad88d2e70","typeString":"literal_string \"Unauthorized uploader\""},"value":"Unauthorized uploader"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8cad3caef56bdc54d9f8eea80d0a4893e59bf4485b77979baac541ad88d2e70","typeString":"literal_string \"Unauthorized uploader\""}],"id":2261,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1848:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:128:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2275,"nodeType":"ExpressionStatement","src":"1848:128:10"},{"id":2276,"nodeType":"PlaceholderStatement","src":"1986:1:10"}]},"id":2278,"name":"onlyUploader","nameLocation":"1823:12:10","nodeType":"ModifierDefinition","parameters":{"id":2260,"nodeType":"ParameterList","parameters":[],"src":"1835:2:10"},"src":"1814:180:10","virtual":false,"visibility":"internal"},{"body":{"id":2296,"nodeType":"Block","src":"2025:158:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2282,"name":"MODERATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"2051:14:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2283,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2067:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2071:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2067:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2281,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"2043:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2043:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2287,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2090:18:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2288,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2110:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2114:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2110:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2286,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"2082:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2082:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2043:78:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e617574686f72697a6564206d6f64657261746f72","id":2292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2140:24:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_dfb6ac4a8e524e804e6ab438a3d369b82815aff71ebc44f9e72d191f0e1f4539","typeString":"literal_string \"Unauthorized moderator\""},"value":"Unauthorized moderator"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dfb6ac4a8e524e804e6ab438a3d369b82815aff71ebc44f9e72d191f0e1f4539","typeString":"literal_string \"Unauthorized moderator\""}],"id":2280,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2035:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:130:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2294,"nodeType":"ExpressionStatement","src":"2035:130:10"},{"id":2295,"nodeType":"PlaceholderStatement","src":"2175:1:10"}]},"id":2297,"name":"onlyModerator","nameLocation":"2009:13:10","nodeType":"ModifierDefinition","parameters":{"id":2279,"nodeType":"ParameterList","parameters":[],"src":"2022:2:10"},"src":"2000:183:10","virtual":false,"visibility":"internal"},{"body":{"id":2318,"nodeType":"Block","src":"2203:154:10","statements":[{"expression":{"arguments":[{"id":2301,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2224:18:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2302,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2244:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2248:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2244:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2300,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"2213:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2213:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2305,"nodeType":"ExpressionStatement","src":"2213:42:10"},{"expression":{"arguments":[{"id":2307,"name":"UPLOADER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"2276:13:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2308,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2291:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2295:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2291:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2306,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"2265:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2265:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2311,"nodeType":"ExpressionStatement","src":"2265:37:10"},{"expression":{"arguments":[{"id":2313,"name":"MODERATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"2323:14:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2314,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2339:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2343:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2339:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2312,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"2312:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2312:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2317,"nodeType":"ExpressionStatement","src":"2312:38:10"}]},"id":2319,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2298,"nodeType":"ParameterList","parameters":[],"src":"2200:2:10"},"returnParameters":{"id":2299,"nodeType":"ParameterList","parameters":[],"src":"2203:0:10"},"scope":2680,"src":"2189:168:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2435,"nodeType":"Block","src":"2612:941:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2341,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"2636:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2630:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2339,"name":"bytes","nodeType":"ElementaryTypeName","src":"2630:5:10","typeDescriptions":{}}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2630:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2647:6:10","memberName":"length","nodeType":"MemberAccess","src":"2630:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2656:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2630:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4950465320686173682063616e6e6f7420626520656d707479","id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2659:27:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_9133b9f3350abb9ad5c186a964d7544d54ce63c05ebecb3c7513f09140c5a07d","typeString":"literal_string \"IPFS hash cannot be empty\""},"value":"IPFS hash cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9133b9f3350abb9ad5c186a964d7544d54ce63c05ebecb3c7513f09140c5a07d","typeString":"literal_string \"IPFS hash cannot be empty\""}],"id":2338,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2622:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2622:65:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2348,"nodeType":"ExpressionStatement","src":"2622:65:10"},{"expression":{"arguments":[{"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2705:22:10","subExpression":{"expression":{"baseExpression":{"id":2350,"name":"ipfsData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"2706:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_IPFSData_$2204_storage_$","typeString":"mapping(bytes32 => struct IPFSStorage.IPFSData storage ref)"}},"id":2352,"indexExpression":{"id":2351,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"2715:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2706:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_IPFSData_$2204_storage","typeString":"struct IPFSStorage.IPFSData storage ref"}},"id":2353,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2721:6:10","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":2199,"src":"2706:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b657920616c726561647920657869737473","id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2729:20:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_37467005bb64787ee8832b1d5babc5419f104515384897fbd2d13f242375bf26","typeString":"literal_string \"Key already exists\""},"value":"Key already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_37467005bb64787ee8832b1d5babc5419f104515384897fbd2d13f242375bf26","typeString":"literal_string \"Key already exists\""}],"id":2349,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2697:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2697:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2357,"nodeType":"ExpressionStatement","src":"2697:53:10"},{"expression":{"arguments":[{"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2768:22:10","subExpression":{"baseExpression":{"id":2359,"name":"usedHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"2769:10:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":2361,"indexExpression":{"id":2360,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"2780:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2769:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49504653206861736820616c72656164792075736564","id":2363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2792:24:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc67e3e4904e71bb07df05c961a6b09ca7de0191763947aa4275fe8f319b4a57","typeString":"literal_string \"IPFS hash already used\""},"value":"IPFS hash already used"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc67e3e4904e71bb07df05c961a6b09ca7de0191763947aa4275fe8f319b4a57","typeString":"literal_string \"IPFS hash already used\""}],"id":2358,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2760:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2760:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2365,"nodeType":"ExpressionStatement","src":"2760:57:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2367,"name":"_fileSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"2835:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2368,"name":"maxFileSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"2848:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2835:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46696c652073697a652065786365656473206c696d6974","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:25:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_78fbb853bba9fb010ddd0c5875fd23387ee93305373dacc6baa823982ce3dfbd","typeString":"literal_string \"File size exceeds limit\""},"value":"File size exceeds limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_78fbb853bba9fb010ddd0c5875fd23387ee93305373dacc6baa823982ce3dfbd","typeString":"literal_string \"File size exceeds limit\""}],"id":2366,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2827:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2827:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2372,"nodeType":"ExpressionStatement","src":"2827:60:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2376,"name":"_checksum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"2911:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2905:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2374,"name":"bytes","nodeType":"ElementaryTypeName","src":"2905:5:10","typeDescriptions":{}}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2905:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2922:6:10","memberName":"length","nodeType":"MemberAccess","src":"2905:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2931:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2905:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b73756d207265717569726564","id":2381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2934:19:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_5cfd00fd89462d261e33dde42b095556381771b0ca031f46d35e3525a0c708d9","typeString":"literal_string \"Checksum required\""},"value":"Checksum required"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5cfd00fd89462d261e33dde42b095556381771b0ca031f46d35e3525a0c708d9","typeString":"literal_string \"Checksum required\""}],"id":2373,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2897:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2897:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2383,"nodeType":"ExpressionStatement","src":"2897:57:10"},{"expression":{"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2384,"name":"ipfsData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"2973:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_IPFSData_$2204_storage_$","typeString":"mapping(bytes32 => struct IPFSStorage.IPFSData storage ref)"}},"id":2386,"indexExpression":{"id":2385,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"2982:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2973:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_IPFSData_$2204_storage","typeString":"struct IPFSStorage.IPFSData storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2388,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"3019:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2389,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3053:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3059:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"3053:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2391,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3092:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3096:6:10","memberName":"sender","nodeType":"MemberAccess","src":"3092:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2393,"name":"_metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"3126:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2394,"name":"_category","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"3159:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2395,"name":"_fileSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"3192:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3223:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"74727565","id":2397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3251:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2398,"name":"_checksum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"3279:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2387,"name":"IPFSData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"2990:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_IPFSData_$2204_storage_ptr_$","typeString":"type(struct IPFSStorage.IPFSData storage pointer)"}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3013:4:10","3042:9:10","3082:8:10","3116:8:10","3149:8:10","3182:8:10","3215:6:10","3241:8:10","3269:8:10"],"names":["hash","timestamp","uploader","metadata","category","fileSize","exists","isActive","checksum"],"nodeType":"FunctionCall","src":"2990:309:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_IPFSData_$2204_memory_ptr","typeString":"struct IPFSStorage.IPFSData memory"}},"src":"2973:326:10","typeDescriptions":{"typeIdentifier":"t_struct$_IPFSData_$2204_storage","typeString":"struct IPFSStorage.IPFSData storage ref"}},"id":2401,"nodeType":"ExpressionStatement","src":"2973:326:10"},{"expression":{"arguments":[{"id":2407,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"3347:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":2402,"name":"userUploads","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"3318:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[] storage ref)"}},"id":2405,"indexExpression":{"expression":{"id":2403,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3330:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3334:6:10","memberName":"sender","nodeType":"MemberAccess","src":"3330:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3318:23:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3342:4:10","memberName":"push","nodeType":"MemberAccess","src":"3318:28:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3318:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2409,"nodeType":"ExpressionStatement","src":"3318:34:10"},{"expression":{"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2410,"name":"usedHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"3362:10:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":2412,"indexExpression":{"id":2411,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"3373:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3362:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3386:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3362:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2415,"nodeType":"ExpressionStatement","src":"3362:28:10"},{"expression":{"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2416,"name":"hashToKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"3400:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bytes32_$","typeString":"mapping(string memory => bytes32)"}},"id":2418,"indexExpression":{"id":2417,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"3410:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3400:20:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2419,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"3423:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3400:27:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2421,"nodeType":"ExpressionStatement","src":"3400:27:10"},{"expression":{"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3437:14:10","subExpression":{"id":2422,"name":"totalUploads","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"3437:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2424,"nodeType":"ExpressionStatement","src":"3437:14:10"},{"eventCall":{"arguments":[{"id":2426,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"3490:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2427,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"3496:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2428,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3507:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3511:6:10","memberName":"sender","nodeType":"MemberAccess","src":"3507:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2430,"name":"_category","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"3519:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2431,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3530:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3536:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"3530:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2425,"name":"IPFSHashStored","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"3475:14:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes32,string memory,address,string memory,uint256)"}},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3475:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2434,"nodeType":"EmitStatement","src":"3470:76:10"}]},"functionSelector":"3e63df2b","id":2436,"implemented":true,"kind":"function","modifiers":[{"id":2334,"kind":"modifierInvocation","modifierName":{"id":2333,"name":"onlyUploader","nameLocations":["2586:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2278,"src":"2586:12:10"},"nodeType":"ModifierInvocation","src":"2586:12:10"},{"id":2336,"kind":"modifierInvocation","modifierName":{"id":2335,"name":"nonReentrant","nameLocations":["2599:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":550,"src":"2599:12:10"},"nodeType":"ModifierInvocation","src":"2599:12:10"}],"name":"storeIPFSHash","nameLocation":"2376:13:10","nodeType":"FunctionDefinition","parameters":{"id":2332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2321,"mutability":"mutable","name":"_key","nameLocation":"2407:4:10","nodeType":"VariableDeclaration","scope":2436,"src":"2399:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2399:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2323,"mutability":"mutable","name":"_ipfsHash","nameLocation":"2435:9:10","nodeType":"VariableDeclaration","scope":2436,"src":"2421:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2322,"name":"string","nodeType":"ElementaryTypeName","src":"2421:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2325,"mutability":"mutable","name":"_metadata","nameLocation":"2468:9:10","nodeType":"VariableDeclaration","scope":2436,"src":"2454:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2324,"name":"string","nodeType":"ElementaryTypeName","src":"2454:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2327,"mutability":"mutable","name":"_category","nameLocation":"2501:9:10","nodeType":"VariableDeclaration","scope":2436,"src":"2487:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2326,"name":"string","nodeType":"ElementaryTypeName","src":"2487:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2329,"mutability":"mutable","name":"_fileSize","nameLocation":"2528:9:10","nodeType":"VariableDeclaration","scope":2436,"src":"2520:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2328,"name":"uint256","nodeType":"ElementaryTypeName","src":"2520:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2331,"mutability":"mutable","name":"_checksum","nameLocation":"2561:9:10","nodeType":"VariableDeclaration","scope":2436,"src":"2547:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2330,"name":"string","nodeType":"ElementaryTypeName","src":"2547:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2389:187:10"},"returnParameters":{"id":2337,"nodeType":"ParameterList","parameters":[],"src":"2612:0:10"},"scope":2680,"src":"2367:1186:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2475,"nodeType":"Block","src":"3674:258:10","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2446,"name":"ipfsData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"3692:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_IPFSData_$2204_storage_$","typeString":"mapping(bytes32 => struct IPFSStorage.IPFSData storage ref)"}},"id":2448,"indexExpression":{"id":2447,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"3701:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3692:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_IPFSData_$2204_storage","typeString":"struct IPFSStorage.IPFSData storage ref"}},"id":2449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3707:6:10","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":2199,"src":"3692:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49504653206461746120646f6573206e6f74206578697374","id":2450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3715:26:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_a0b13bb3923bf5a3b90d0c678155422baf459ee23b35b88cc7f8658c1439cd56","typeString":"literal_string \"IPFS data does not exist\""},"value":"IPFS data does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a0b13bb3923bf5a3b90d0c678155422baf459ee23b35b88cc7f8658c1439cd56","typeString":"literal_string \"IPFS data does not exist\""}],"id":2445,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3684:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3684:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2452,"nodeType":"ExpressionStatement","src":"3684:58:10"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2454,"name":"ipfsData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"3760:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_IPFSData_$2204_storage_$","typeString":"mapping(bytes32 => struct IPFSStorage.IPFSData storage ref)"}},"id":2456,"indexExpression":{"id":2455,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"3769:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3760:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_IPFSData_$2204_storage","typeString":"struct IPFSStorage.IPFSData storage ref"}},"id":2457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3775:8:10","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2201,"src":"3760:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49504653206461746120616c726561647920696e616374697665","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3785:28:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_a1db69e25fc042bf55cfd42b1d3ff53a265117979ab4dd42c8a4a5b6e994eb61","typeString":"literal_string \"IPFS data already inactive\""},"value":"IPFS data already inactive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a1db69e25fc042bf55cfd42b1d3ff53a265117979ab4dd42c8a4a5b6e994eb61","typeString":"literal_string \"IPFS data already inactive\""}],"id":2453,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3752:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3752:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2460,"nodeType":"ExpressionStatement","src":"3752:62:10"},{"expression":{"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2461,"name":"ipfsData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"3833:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_IPFSData_$2204_storage_$","typeString":"mapping(bytes32 => struct IPFSStorage.IPFSData storage ref)"}},"id":2463,"indexExpression":{"id":2462,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"3842:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3833:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_IPFSData_$2204_storage","typeString":"struct IPFSStorage.IPFSData storage ref"}},"id":2464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3848:8:10","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2201,"src":"3833:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3859:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3833:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2467,"nodeType":"ExpressionStatement","src":"3833:31:10"},{"eventCall":{"arguments":[{"id":2469,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"3899:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2470,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3905:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3909:6:10","memberName":"sender","nodeType":"MemberAccess","src":"3905:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2472,"name":"_reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"3917:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2468,"name":"IPFSDataDeactivated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"3879:19:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes32,address,string memory)"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3879:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2474,"nodeType":"EmitStatement","src":"3874:51:10"}]},"functionSelector":"2d3c3fcd","id":2476,"implemented":true,"kind":"function","modifiers":[{"id":2443,"kind":"modifierInvocation","modifierName":{"id":2442,"name":"onlyModerator","nameLocations":["3660:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":2297,"src":"3660:13:10"},"nodeType":"ModifierInvocation","src":"3660:13:10"}],"name":"deactivateIPFSData","nameLocation":"3572:18:10","nodeType":"FunctionDefinition","parameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"_key","nameLocation":"3608:4:10","nodeType":"VariableDeclaration","scope":2476,"src":"3600:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2437,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3600:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2440,"mutability":"mutable","name":"_reason","nameLocation":"3637:7:10","nodeType":"VariableDeclaration","scope":2476,"src":"3623:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2439,"name":"string","nodeType":"ElementaryTypeName","src":"3623:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3590:60:10"},"returnParameters":{"id":2444,"nodeType":"ParameterList","parameters":[],"src":"3674:0:10"},"scope":2680,"src":"3563:369:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2512,"nodeType":"Block","src":"3999:293:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":2483,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"4025:18:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2484,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4045:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4049:6:10","memberName":"sender","nodeType":"MemberAccess","src":"4045:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2482,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"4017:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4017:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41646d696e206f6e6c79","id":2487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4058:12:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_df81f2958f5404b6857124d55e154aeac7784b8c4ad6f267efb2248d21d2db2a","typeString":"literal_string \"Admin only\""},"value":"Admin only"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df81f2958f5404b6857124d55e154aeac7784b8c4ad6f267efb2248d21d2db2a","typeString":"literal_string \"Admin only\""}],"id":2481,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4009:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4009:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2489,"nodeType":"ExpressionStatement","src":"4009:62:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2491,"name":"_newMaxSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"4089:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4103:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4089:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642066696c652073697a65","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4106:19:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_448ef1e820190a3c16fb605ca7e44a6c437365d17b42b3752a6bb0c62139ab97","typeString":"literal_string \"Invalid file size\""},"value":"Invalid file size"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_448ef1e820190a3c16fb605ca7e44a6c437365d17b42b3752a6bb0c62139ab97","typeString":"literal_string \"Invalid file size\""}],"id":2490,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4081:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4081:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2496,"nodeType":"ExpressionStatement","src":"4081:45:10"},{"assignments":[2498],"declarations":[{"constant":false,"id":2498,"mutability":"mutable","name":"oldSize","nameLocation":"4153:7:10","nodeType":"VariableDeclaration","scope":2512,"src":"4145:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2497,"name":"uint256","nodeType":"ElementaryTypeName","src":"4145:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2500,"initialValue":{"id":2499,"name":"maxFileSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"4163:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4145:29:10"},{"expression":{"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2501,"name":"maxFileSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"4184:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2502,"name":"_newMaxSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"4198:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4184:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2504,"nodeType":"ExpressionStatement","src":"4184:25:10"},{"eventCall":{"arguments":[{"id":2506,"name":"oldSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"4252:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2507,"name":"_newMaxSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"4261:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2508,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4274:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4278:6:10","memberName":"sender","nodeType":"MemberAccess","src":"4274:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2505,"name":"MaxFileSizeUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"4233:18:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4233:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2511,"nodeType":"EmitStatement","src":"4228:57:10"}]},"functionSelector":"57da0a78","id":2513,"implemented":true,"kind":"function","modifiers":[],"name":"updateMaxFileSize","nameLocation":"3951:17:10","nodeType":"FunctionDefinition","parameters":{"id":2479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2478,"mutability":"mutable","name":"_newMaxSize","nameLocation":"3977:11:10","nodeType":"VariableDeclaration","scope":2513,"src":"3969:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2477,"name":"uint256","nodeType":"ElementaryTypeName","src":"3969:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3968:21:10"},"returnParameters":{"id":2480,"nodeType":"ParameterList","parameters":[],"src":"3999:0:10"},"scope":2680,"src":"3942:350:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2541,"nodeType":"Block","src":"4375:178:10","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2521,"name":"ipfsData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"4393:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_IPFSData_$2204_storage_$","typeString":"mapping(bytes32 => struct IPFSStorage.IPFSData storage ref)"}},"id":2523,"indexExpression":{"id":2522,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"4402:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4393:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_IPFSData_$2204_storage","typeString":"struct IPFSStorage.IPFSData storage ref"}},"id":2524,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4408:6:10","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":2199,"src":"4393:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49504653206461746120646f6573206e6f74206578697374","id":2525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4416:26:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_a0b13bb3923bf5a3b90d0c678155422baf459ee23b35b88cc7f8658c1439cd56","typeString":"literal_string \"IPFS data does not exist\""},"value":"IPFS data does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a0b13bb3923bf5a3b90d0c678155422baf459ee23b35b88cc7f8658c1439cd56","typeString":"literal_string \"IPFS data does not exist\""}],"id":2520,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4385:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4385:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2527,"nodeType":"ExpressionStatement","src":"4385:58:10"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2529,"name":"ipfsData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"4461:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_IPFSData_$2204_storage_$","typeString":"mapping(bytes32 => struct IPFSStorage.IPFSData storage ref)"}},"id":2531,"indexExpression":{"id":2530,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"4470:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4461:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_IPFSData_$2204_storage","typeString":"struct IPFSStorage.IPFSData storage ref"}},"id":2532,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4476:8:10","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2201,"src":"4461:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49504653206461746120697320696e616374697665","id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4486:23:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_e7d35f872ae6a46ec063d62573e06af202a03b16cec521112c1e8eb16bde5a4a","typeString":"literal_string \"IPFS data is inactive\""},"value":"IPFS data is inactive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e7d35f872ae6a46ec063d62573e06af202a03b16cec521112c1e8eb16bde5a4a","typeString":"literal_string \"IPFS data is inactive\""}],"id":2528,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4453:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4453:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2535,"nodeType":"ExpressionStatement","src":"4453:57:10"},{"expression":{"expression":{"baseExpression":{"id":2536,"name":"ipfsData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"4527:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_IPFSData_$2204_storage_$","typeString":"mapping(bytes32 => struct IPFSStorage.IPFSData storage ref)"}},"id":2538,"indexExpression":{"id":2537,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"4536:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4527:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_IPFSData_$2204_storage","typeString":"struct IPFSStorage.IPFSData storage ref"}},"id":2539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4542:4:10","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":2187,"src":"4527:19:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2519,"id":2540,"nodeType":"Return","src":"4520:26:10"}]},"functionSelector":"2ed5ef14","id":2542,"implemented":true,"kind":"function","modifiers":[],"name":"getIPFSHash","nameLocation":"4311:11:10","nodeType":"FunctionDefinition","parameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"_key","nameLocation":"4331:4:10","nodeType":"VariableDeclaration","scope":2542,"src":"4323:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4323:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4322:14:10"},"returnParameters":{"id":2519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2542,"src":"4360:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2517,"name":"string","nodeType":"ElementaryTypeName","src":"4360:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4359:15:10"},"scope":2680,"src":"4302:251:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2562,"nodeType":"Block","src":"4638:106:10","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2551,"name":"ipfsData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"4656:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_IPFSData_$2204_storage_$","typeString":"mapping(bytes32 => struct IPFSStorage.IPFSData storage ref)"}},"id":2553,"indexExpression":{"id":2552,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"4665:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4656:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_IPFSData_$2204_storage","typeString":"struct IPFSStorage.IPFSData storage ref"}},"id":2554,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4671:6:10","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":2199,"src":"4656:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49504653206461746120646f6573206e6f74206578697374","id":2555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4679:26:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_a0b13bb3923bf5a3b90d0c678155422baf459ee23b35b88cc7f8658c1439cd56","typeString":"literal_string \"IPFS data does not exist\""},"value":"IPFS data does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a0b13bb3923bf5a3b90d0c678155422baf459ee23b35b88cc7f8658c1439cd56","typeString":"literal_string \"IPFS data does not exist\""}],"id":2550,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4648:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2557,"nodeType":"ExpressionStatement","src":"4648:58:10"},{"expression":{"baseExpression":{"id":2558,"name":"ipfsData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"4723:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_IPFSData_$2204_storage_$","typeString":"mapping(bytes32 => struct IPFSStorage.IPFSData storage ref)"}},"id":2560,"indexExpression":{"id":2559,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"4732:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4723:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_IPFSData_$2204_storage","typeString":"struct IPFSStorage.IPFSData storage ref"}},"functionReturnParameters":2549,"id":2561,"nodeType":"Return","src":"4716:21:10"}]},"functionSelector":"3d6f47b7","id":2563,"implemented":true,"kind":"function","modifiers":[],"name":"getIPFSData","nameLocation":"4572:11:10","nodeType":"FunctionDefinition","parameters":{"id":2545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"_key","nameLocation":"4592:4:10","nodeType":"VariableDeclaration","scope":2563,"src":"4584:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4584:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4583:14:10"},"returnParameters":{"id":2549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2563,"src":"4621:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_IPFSData_$2204_memory_ptr","typeString":"struct IPFSStorage.IPFSData"},"typeName":{"id":2547,"nodeType":"UserDefinedTypeName","pathNode":{"id":2546,"name":"IPFSData","nameLocations":["4621:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2204,"src":"4621:8:10"},"referencedDeclaration":2204,"src":"4621:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_IPFSData_$2204_storage_ptr","typeString":"struct IPFSStorage.IPFSData"}},"visibility":"internal"}],"src":"4620:17:10"},"scope":2680,"src":"4563:181:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2591,"nodeType":"Block","src":"4835:173:10","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2572,"name":"ipfsData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"4853:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_IPFSData_$2204_storage_$","typeString":"mapping(bytes32 => struct IPFSStorage.IPFSData storage ref)"}},"id":2574,"indexExpression":{"id":2573,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"4862:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4853:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_IPFSData_$2204_storage","typeString":"struct IPFSStorage.IPFSData storage ref"}},"id":2575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4868:6:10","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":2199,"src":"4853:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49504653206461746120646f6573206e6f74206578697374","id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4876:26:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_a0b13bb3923bf5a3b90d0c678155422baf459ee23b35b88cc7f8658c1439cd56","typeString":"literal_string \"IPFS data does not exist\""},"value":"IPFS data does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a0b13bb3923bf5a3b90d0c678155422baf459ee23b35b88cc7f8658c1439cd56","typeString":"literal_string \"IPFS data does not exist\""}],"id":2571,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4845:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4845:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2578,"nodeType":"ExpressionStatement","src":"4845:58:10"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2580,"name":"ipfsData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"4921:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_IPFSData_$2204_storage_$","typeString":"mapping(bytes32 => struct IPFSStorage.IPFSData storage ref)"}},"id":2582,"indexExpression":{"id":2581,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"4930:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4921:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_IPFSData_$2204_storage","typeString":"struct IPFSStorage.IPFSData storage ref"}},"id":2583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4936:8:10","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2201,"src":"4921:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49504653206461746120697320696e616374697665","id":2584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4946:23:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_e7d35f872ae6a46ec063d62573e06af202a03b16cec521112c1e8eb16bde5a4a","typeString":"literal_string \"IPFS data is inactive\""},"value":"IPFS data is inactive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e7d35f872ae6a46ec063d62573e06af202a03b16cec521112c1e8eb16bde5a4a","typeString":"literal_string \"IPFS data is inactive\""}],"id":2579,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4913:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4913:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2586,"nodeType":"ExpressionStatement","src":"4913:57:10"},{"expression":{"baseExpression":{"id":2587,"name":"ipfsData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"4987:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_IPFSData_$2204_storage_$","typeString":"mapping(bytes32 => struct IPFSStorage.IPFSData storage ref)"}},"id":2589,"indexExpression":{"id":2588,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"4996:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4987:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_IPFSData_$2204_storage","typeString":"struct IPFSStorage.IPFSData storage ref"}},"functionReturnParameters":2570,"id":2590,"nodeType":"Return","src":"4980:21:10"}]},"functionSelector":"5d837211","id":2592,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveIPFSData","nameLocation":"4763:17:10","nodeType":"FunctionDefinition","parameters":{"id":2566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2565,"mutability":"mutable","name":"_key","nameLocation":"4789:4:10","nodeType":"VariableDeclaration","scope":2592,"src":"4781:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2564,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4781:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4780:14:10"},"returnParameters":{"id":2570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2592,"src":"4818:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_IPFSData_$2204_memory_ptr","typeString":"struct IPFSStorage.IPFSData"},"typeName":{"id":2568,"nodeType":"UserDefinedTypeName","pathNode":{"id":2567,"name":"IPFSData","nameLocations":["4818:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2204,"src":"4818:8:10"},"referencedDeclaration":2204,"src":"4818:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_IPFSData_$2204_storage_ptr","typeString":"struct IPFSStorage.IPFSData"}},"visibility":"internal"}],"src":"4817:17:10"},"scope":2680,"src":"4754:254:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2604,"nodeType":"Block","src":"5098:42:10","statements":[{"expression":{"baseExpression":{"id":2600,"name":"userUploads","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"5115:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[] storage ref)"}},"id":2602,"indexExpression":{"id":2601,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"5127:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5115:18:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":2599,"id":2603,"nodeType":"Return","src":"5108:25:10"}]},"functionSelector":"412bd348","id":2605,"implemented":true,"kind":"function","modifiers":[],"name":"getUserUploads","nameLocation":"5027:14:10","nodeType":"FunctionDefinition","parameters":{"id":2595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2594,"mutability":"mutable","name":"_user","nameLocation":"5050:5:10","nodeType":"VariableDeclaration","scope":2605,"src":"5042:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2593,"name":"address","nodeType":"ElementaryTypeName","src":"5042:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5041:15:10"},"returnParameters":{"id":2599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2605,"src":"5080:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5080:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2597,"nodeType":"ArrayTypeName","src":"5080:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5079:18:10"},"scope":2680,"src":"5018:122:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2623,"nodeType":"Block","src":"5229:102:10","statements":[{"expression":{"arguments":[{"baseExpression":{"id":2613,"name":"usedHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"5247:10:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":2615,"indexExpression":{"id":2614,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"5258:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5247:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"48617368206e6f7420666f756e64","id":2616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5270:16:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_913db5539dd5498f2d4f22507c7955fa40c01c4197f0a1928f9e953889ed79ff","typeString":"literal_string \"Hash not found\""},"value":"Hash not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_913db5539dd5498f2d4f22507c7955fa40c01c4197f0a1928f9e953889ed79ff","typeString":"literal_string \"Hash not found\""}],"id":2612,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5239:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5239:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2618,"nodeType":"ExpressionStatement","src":"5239:48:10"},{"expression":{"baseExpression":{"id":2619,"name":"hashToKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"5304:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bytes32_$","typeString":"mapping(string memory => bytes32)"}},"id":2621,"indexExpression":{"id":2620,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"5314:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5304:20:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2611,"id":2622,"nodeType":"Return","src":"5297:27:10"}]},"functionSelector":"b394e7a7","id":2624,"implemented":true,"kind":"function","modifiers":[],"name":"getKeyByHash","nameLocation":"5159:12:10","nodeType":"FunctionDefinition","parameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"_ipfsHash","nameLocation":"5186:9:10","nodeType":"VariableDeclaration","scope":2624,"src":"5172:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2606,"name":"string","nodeType":"ElementaryTypeName","src":"5172:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5171:25:10"},"returnParameters":{"id":2611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2624,"src":"5220:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5220:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5219:9:10"},"scope":2680,"src":"5150:181:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2635,"nodeType":"Block","src":"5415:45:10","statements":[{"expression":{"baseExpression":{"id":2631,"name":"usedHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"5432:10:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":2633,"indexExpression":{"id":2632,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"5443:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5432:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2630,"id":2634,"nodeType":"Return","src":"5425:28:10"}]},"functionSelector":"15e318c1","id":2636,"implemented":true,"kind":"function","modifiers":[],"name":"isHashUsed","nameLocation":"5350:10:10","nodeType":"FunctionDefinition","parameters":{"id":2627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2626,"mutability":"mutable","name":"_ipfsHash","nameLocation":"5375:9:10","nodeType":"VariableDeclaration","scope":2636,"src":"5361:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2625,"name":"string","nodeType":"ElementaryTypeName","src":"5361:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5360:25:10"},"returnParameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2636,"src":"5409:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2628,"name":"bool","nodeType":"ElementaryTypeName","src":"5409:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5408:6:10"},"scope":2680,"src":"5341:119:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2643,"nodeType":"Block","src":"5529:36:10","statements":[{"expression":{"id":2641,"name":"totalUploads","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"5546:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2640,"id":2642,"nodeType":"Return","src":"5539:19:10"}]},"functionSelector":"be666c2c","id":2644,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalUploads","nameLocation":"5479:15:10","nodeType":"FunctionDefinition","parameters":{"id":2637,"nodeType":"ParameterList","parameters":[],"src":"5494:2:10"},"returnParameters":{"id":2640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2644,"src":"5520:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2638,"name":"uint256","nodeType":"ElementaryTypeName","src":"5520:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5519:9:10"},"scope":2680,"src":"5470:95:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2678,"nodeType":"Block","src":"5667:186:10","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2654,"name":"ipfsData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"5685:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_IPFSData_$2204_storage_$","typeString":"mapping(bytes32 => struct IPFSStorage.IPFSData storage ref)"}},"id":2656,"indexExpression":{"id":2655,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"5694:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5685:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_IPFSData_$2204_storage","typeString":"struct IPFSStorage.IPFSData storage ref"}},"id":2657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5700:6:10","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":2199,"src":"5685:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49504653206461746120646f6573206e6f74206578697374","id":2658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5708:26:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_a0b13bb3923bf5a3b90d0c678155422baf459ee23b35b88cc7f8658c1439cd56","typeString":"literal_string \"IPFS data does not exist\""},"value":"IPFS data does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a0b13bb3923bf5a3b90d0c678155422baf459ee23b35b88cc7f8658c1439cd56","typeString":"literal_string \"IPFS data does not exist\""}],"id":2653,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5677:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5677:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2660,"nodeType":"ExpressionStatement","src":"5677:58:10"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2664,"name":"ipfsData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"5779:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_IPFSData_$2204_storage_$","typeString":"mapping(bytes32 => struct IPFSStorage.IPFSData storage ref)"}},"id":2666,"indexExpression":{"id":2665,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"5788:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5779:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_IPFSData_$2204_storage","typeString":"struct IPFSStorage.IPFSData storage ref"}},"id":2667,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5794:8:10","memberName":"checksum","nodeType":"MemberAccess","referencedDeclaration":2203,"src":"5779:23:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2662,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5762:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5766:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"5762:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5762:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2661,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5752:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5752:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2673,"name":"_checksum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"5835:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2671,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5818:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5822:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"5818:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5818:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2670,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5808:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5808:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5752:94:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2652,"id":2677,"nodeType":"Return","src":"5745:101:10"}]},"functionSelector":"b6123e55","id":2679,"implemented":true,"kind":"function","modifiers":[],"name":"verifyChecksum","nameLocation":"5584:14:10","nodeType":"FunctionDefinition","parameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2646,"mutability":"mutable","name":"_key","nameLocation":"5607:4:10","nodeType":"VariableDeclaration","scope":2679,"src":"5599:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5599:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2648,"mutability":"mutable","name":"_checksum","nameLocation":"5627:9:10","nodeType":"VariableDeclaration","scope":2679,"src":"5613:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2647,"name":"string","nodeType":"ElementaryTypeName","src":"5613:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5598:39:10"},"returnParameters":{"id":2652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2679,"src":"5661:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2650,"name":"bool","nodeType":"ElementaryTypeName","src":"5661:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5660:6:10"},"scope":2680,"src":"5575:278:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2681,"src":"390:5465:10","usedErrors":[306,309,531],"usedEvents":[318,327,336,2243,2251,2259]}],"src":"32:5824:10"},"id":10},"contracts/MedChain.sol":{"ast":{"absolutePath":"contracts/MedChain.sol","exportedSymbols":{"AccessControl":[296],"Context":[409],"ERC165":[1723],"Hashes":[626],"IAccessControl":[379],"IERC165":[1735],"MedChain":[4496],"MerkleProof":[1699],"Pausable":[517],"ReentrancyGuard":[586]},"id":4497,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2682,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":2683,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4497,"sourceUnit":1700,"src":"58:68:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":2684,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4497,"sourceUnit":297,"src":"127:58:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":2685,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4497,"sourceUnit":587,"src":"186:59:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"@openzeppelin/contracts/utils/Pausable.sol","id":2686,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4497,"sourceUnit":518,"src":"246:52:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2688,"name":"AccessControl","nameLocations":["528:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":296,"src":"528:13:11"},"id":2689,"nodeType":"InheritanceSpecifier","src":"528:13:11"},{"baseName":{"id":2690,"name":"ReentrancyGuard","nameLocations":["543:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":586,"src":"543:15:11"},"id":2691,"nodeType":"InheritanceSpecifier","src":"543:15:11"},{"baseName":{"id":2692,"name":"Pausable","nameLocations":["560:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":517,"src":"560:8:11"},"id":2693,"nodeType":"InheritanceSpecifier","src":"560:8:11"}],"canonicalName":"MedChain","contractDependencies":[],"contractKind":"contract","documentation":{"id":2687,"nodeType":"StructuredDocumentation","src":"300:206:11","text":" @title MedChain\n @dev Enhanced Decentralized Drug Supply Chain & Health Record Management System\n @notice This contract manages the complete pharmaceutical supply chain with enhanced security"},"fullyImplemented":true,"id":4496,"linearizedBaseContracts":[4496,517,586,296,1723,1735,379,409],"name":"MedChain","nameLocation":"516:8:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"965288b0","id":2698,"mutability":"constant","name":"MANUFACTURER_ROLE","nameLocation":"628:17:11","nodeType":"VariableDeclaration","scope":4496,"src":"604:74:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"604:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d414e5546414354555245525f524f4c45","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"658:19:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_eefb95e842a3287179d933b4460be539a1d5af11aa8b325bb45c5c8dc92de4ed","typeString":"literal_string \"MANUFACTURER_ROLE\""},"value":"MANUFACTURER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_eefb95e842a3287179d933b4460be539a1d5af11aa8b325bb45c5c8dc92de4ed","typeString":"literal_string \"MANUFACTURER_ROLE\""}],"id":2695,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"648:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"648:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"f0bd87cc","id":2703,"mutability":"constant","name":"DISTRIBUTOR_ROLE","nameLocation":"708:16:11","nodeType":"VariableDeclaration","scope":4496,"src":"684:72:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2699,"name":"bytes32","nodeType":"ElementaryTypeName","src":"684:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4449535452494255544f525f524f4c45","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"737:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_fbd454f36a7e1a388bd6fc3ab10d434aa4578f811acbbcf33afb1c697486313c","typeString":"literal_string \"DISTRIBUTOR_ROLE\""},"value":"DISTRIBUTOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fbd454f36a7e1a388bd6fc3ab10d434aa4578f811acbbcf33afb1c697486313c","typeString":"literal_string \"DISTRIBUTOR_ROLE\""}],"id":2700,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"727:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"727:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"f6ba6678","id":2708,"mutability":"constant","name":"HOSPITAL_ROLE","nameLocation":"786:13:11","nodeType":"VariableDeclaration","scope":4496,"src":"762:66:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2704,"name":"bytes32","nodeType":"ElementaryTypeName","src":"762:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"484f53504954414c5f524f4c45","id":2706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"812:15:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8f5b4140cca307cd927e59cbeea8291bffeee228fc677f0fa059aef7b4dd8d5","typeString":"literal_string \"HOSPITAL_ROLE\""},"value":"HOSPITAL_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c8f5b4140cca307cd927e59cbeea8291bffeee228fc677f0fa059aef7b4dd8d5","typeString":"literal_string \"HOSPITAL_ROLE\""}],"id":2705,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"802:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"802:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"ac5cb97d","id":2713,"mutability":"constant","name":"PATIENT_ROLE","nameLocation":"858:12:11","nodeType":"VariableDeclaration","scope":4496,"src":"834:64:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2709,"name":"bytes32","nodeType":"ElementaryTypeName","src":"834:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"50415449454e545f524f4c45","id":2711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"883:14:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed","typeString":"literal_string \"PATIENT_ROLE\""},"value":"PATIENT_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed","typeString":"literal_string \"PATIENT_ROLE\""}],"id":2710,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"873:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"873:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"75b238fc","id":2718,"mutability":"constant","name":"ADMIN_ROLE","nameLocation":"928:10:11","nodeType":"VariableDeclaration","scope":4496,"src":"904:60:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2714,"name":"bytes32","nodeType":"ElementaryTypeName","src":"904:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"41444d494e5f524f4c45","id":2716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"951:12:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775","typeString":"literal_string \"ADMIN_ROLE\""},"value":"ADMIN_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775","typeString":"literal_string \"ADMIN_ROLE\""}],"id":2715,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"941:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"941:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"canonicalName":"MedChain.DrugStatus","id":2724,"members":[{"id":2719,"name":"Manufactured","nameLocation":"1011:12:11","nodeType":"EnumValue","src":"1011:12:11"},{"id":2720,"name":"WithDistributor","nameLocation":"1034:15:11","nodeType":"EnumValue","src":"1034:15:11"},{"id":2721,"name":"WithHospital","nameLocation":"1060:12:11","nodeType":"EnumValue","src":"1060:12:11"},{"id":2722,"name":"DispensedToPatient","nameLocation":"1083:18:11","nodeType":"EnumValue","src":"1083:18:11"},{"id":2723,"name":"Expired","nameLocation":"1112:7:11","nodeType":"EnumValue","src":"1112:7:11"}],"name":"DrugStatus","nameLocation":"989:10:11","nodeType":"EnumDefinition","src":"984:142:11"},{"canonicalName":"MedChain.HospitalType","id":2727,"members":[{"id":2725,"name":"Urban","nameLocation":"1156:5:11","nodeType":"EnumValue","src":"1156:5:11"},{"id":2726,"name":"Rural","nameLocation":"1163:5:11","nodeType":"EnumValue","src":"1163:5:11"}],"name":"HospitalType","nameLocation":"1141:12:11","nodeType":"EnumDefinition","src":"1136:34:11"},{"canonicalName":"MedChain.RequestStatus","id":2732,"members":[{"id":2728,"name":"Pending","nameLocation":"1196:7:11","nodeType":"EnumValue","src":"1196:7:11"},{"id":2729,"name":"Approved","nameLocation":"1205:8:11","nodeType":"EnumValue","src":"1205:8:11"},{"id":2730,"name":"Rejected","nameLocation":"1215:8:11","nodeType":"EnumValue","src":"1215:8:11"},{"id":2731,"name":"Fulfilled","nameLocation":"1225:9:11","nodeType":"EnumValue","src":"1225:9:11"}],"name":"RequestStatus","nameLocation":"1180:13:11","nodeType":"EnumDefinition","src":"1175:61:11"},{"canonicalName":"MedChain.DrugBatch","id":2764,"members":[{"constant":false,"id":2734,"mutability":"mutable","name":"batchId","nameLocation":"1292:7:11","nodeType":"VariableDeclaration","scope":2764,"src":"1284:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2733,"name":"uint256","nodeType":"ElementaryTypeName","src":"1284:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2736,"mutability":"mutable","name":"drugName","nameLocation":"1316:8:11","nodeType":"VariableDeclaration","scope":2764,"src":"1309:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2735,"name":"string","nodeType":"ElementaryTypeName","src":"1309:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2738,"mutability":"mutable","name":"drugCode","nameLocation":"1341:8:11","nodeType":"VariableDeclaration","scope":2764,"src":"1334:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2737,"name":"string","nodeType":"ElementaryTypeName","src":"1334:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2740,"mutability":"mutable","name":"manufacturer","nameLocation":"1394:12:11","nodeType":"VariableDeclaration","scope":2764,"src":"1386:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2739,"name":"address","nodeType":"ElementaryTypeName","src":"1386:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2742,"mutability":"mutable","name":"merkleRoot","nameLocation":"1424:10:11","nodeType":"VariableDeclaration","scope":2764,"src":"1416:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1416:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2744,"mutability":"mutable","name":"ipfsHash","nameLocation":"1451:8:11","nodeType":"VariableDeclaration","scope":2764,"src":"1444:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2743,"name":"string","nodeType":"ElementaryTypeName","src":"1444:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2746,"mutability":"mutable","name":"quantity","nameLocation":"1477:8:11","nodeType":"VariableDeclaration","scope":2764,"src":"1469:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2745,"name":"uint256","nodeType":"ElementaryTypeName","src":"1469:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2748,"mutability":"mutable","name":"originalQuantity","nameLocation":"1503:16:11","nodeType":"VariableDeclaration","scope":2764,"src":"1495:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2747,"name":"uint256","nodeType":"ElementaryTypeName","src":"1495:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2750,"mutability":"mutable","name":"manufactureDate","nameLocation":"1574:15:11","nodeType":"VariableDeclaration","scope":2764,"src":"1566:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2749,"name":"uint256","nodeType":"ElementaryTypeName","src":"1566:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2752,"mutability":"mutable","name":"expiryDate","nameLocation":"1607:10:11","nodeType":"VariableDeclaration","scope":2764,"src":"1599:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2751,"name":"uint256","nodeType":"ElementaryTypeName","src":"1599:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2755,"mutability":"mutable","name":"status","nameLocation":"1638:6:11","nodeType":"VariableDeclaration","scope":2764,"src":"1627:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"},"typeName":{"id":2754,"nodeType":"UserDefinedTypeName","pathNode":{"id":2753,"name":"DrugStatus","nameLocations":["1627:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2724,"src":"1627:10:11"},"referencedDeclaration":2724,"src":"1627:10:11","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}},"visibility":"internal"},{"constant":false,"id":2757,"mutability":"mutable","name":"currentHolder","nameLocation":"1662:13:11","nodeType":"VariableDeclaration","scope":2764,"src":"1654:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2756,"name":"address","nodeType":"ElementaryTypeName","src":"1654:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2759,"mutability":"mutable","name":"transferCount","nameLocation":"1693:13:11","nodeType":"VariableDeclaration","scope":2764,"src":"1685:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2758,"name":"uint256","nodeType":"ElementaryTypeName","src":"1685:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2761,"mutability":"mutable","name":"isRecalled","nameLocation":"1760:10:11","nodeType":"VariableDeclaration","scope":2764,"src":"1755:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2760,"name":"bool","nodeType":"ElementaryTypeName","src":"1755:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2763,"mutability":"mutable","name":"regulatoryApproval","nameLocation":"1826:18:11","nodeType":"VariableDeclaration","scope":2764,"src":"1819:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2762,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"DrugBatch","nameLocation":"1264:9:11","nodeType":"StructDefinition","scope":4496,"src":"1257:631:11","visibility":"public"},{"canonicalName":"MedChain.Hospital","id":2784,"members":[{"constant":false,"id":2766,"mutability":"mutable","name":"hospitalAddress","nameLocation":"1928:15:11","nodeType":"VariableDeclaration","scope":2784,"src":"1920:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2765,"name":"address","nodeType":"ElementaryTypeName","src":"1920:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2768,"mutability":"mutable","name":"name","nameLocation":"1960:4:11","nodeType":"VariableDeclaration","scope":2784,"src":"1953:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2767,"name":"string","nodeType":"ElementaryTypeName","src":"1953:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2770,"mutability":"mutable","name":"registrationNumber","nameLocation":"1981:18:11","nodeType":"VariableDeclaration","scope":2784,"src":"1974:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2769,"name":"string","nodeType":"ElementaryTypeName","src":"1974:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2773,"mutability":"mutable","name":"hospitalType","nameLocation":"2057:12:11","nodeType":"VariableDeclaration","scope":2784,"src":"2044:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_HospitalType_$2727","typeString":"enum MedChain.HospitalType"},"typeName":{"id":2772,"nodeType":"UserDefinedTypeName","pathNode":{"id":2771,"name":"HospitalType","nameLocations":["2044:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2727,"src":"2044:12:11"},"referencedDeclaration":2727,"src":"2044:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_HospitalType_$2727","typeString":"enum MedChain.HospitalType"}},"visibility":"internal"},{"constant":false,"id":2775,"mutability":"mutable","name":"stockCount","nameLocation":"2087:10:11","nodeType":"VariableDeclaration","scope":2784,"src":"2079:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2774,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2777,"mutability":"mutable","name":"stockThreshold","nameLocation":"2115:14:11","nodeType":"VariableDeclaration","scope":2784,"src":"2107:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2776,"name":"uint256","nodeType":"ElementaryTypeName","src":"2107:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2779,"mutability":"mutable","name":"isActive","nameLocation":"2144:8:11","nodeType":"VariableDeclaration","scope":2784,"src":"2139:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2778,"name":"bool","nodeType":"ElementaryTypeName","src":"2139:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2781,"mutability":"mutable","name":"isVerified","nameLocation":"2167:10:11","nodeType":"VariableDeclaration","scope":2784,"src":"2162:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2780,"name":"bool","nodeType":"ElementaryTypeName","src":"2162:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2783,"mutability":"mutable","name":"capacity","nameLocation":"2237:8:11","nodeType":"VariableDeclaration","scope":2784,"src":"2229:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2782,"name":"uint256","nodeType":"ElementaryTypeName","src":"2229:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Hospital","nameLocation":"1901:8:11","nodeType":"StructDefinition","scope":4496,"src":"1894:389:11","visibility":"public"},{"canonicalName":"MedChain.DrugRequest","id":2806,"members":[{"constant":false,"id":2786,"mutability":"mutable","name":"requestId","nameLocation":"2326:9:11","nodeType":"VariableDeclaration","scope":2806,"src":"2318:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2785,"name":"uint256","nodeType":"ElementaryTypeName","src":"2318:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2788,"mutability":"mutable","name":"hospital","nameLocation":"2353:8:11","nodeType":"VariableDeclaration","scope":2806,"src":"2345:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2787,"name":"address","nodeType":"ElementaryTypeName","src":"2345:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2790,"mutability":"mutable","name":"distributor","nameLocation":"2379:11:11","nodeType":"VariableDeclaration","scope":2806,"src":"2371:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2789,"name":"address","nodeType":"ElementaryTypeName","src":"2371:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2792,"mutability":"mutable","name":"batchId","nameLocation":"2408:7:11","nodeType":"VariableDeclaration","scope":2806,"src":"2400:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2791,"name":"uint256","nodeType":"ElementaryTypeName","src":"2400:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2794,"mutability":"mutable","name":"quantity","nameLocation":"2433:8:11","nodeType":"VariableDeclaration","scope":2806,"src":"2425:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2793,"name":"uint256","nodeType":"ElementaryTypeName","src":"2425:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2797,"mutability":"mutable","name":"status","nameLocation":"2465:6:11","nodeType":"VariableDeclaration","scope":2806,"src":"2451:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RequestStatus_$2732","typeString":"enum MedChain.RequestStatus"},"typeName":{"id":2796,"nodeType":"UserDefinedTypeName","pathNode":{"id":2795,"name":"RequestStatus","nameLocations":["2451:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":2732,"src":"2451:13:11"},"referencedDeclaration":2732,"src":"2451:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_RequestStatus_$2732","typeString":"enum MedChain.RequestStatus"}},"visibility":"internal"},{"constant":false,"id":2799,"mutability":"mutable","name":"timestamp","nameLocation":"2489:9:11","nodeType":"VariableDeclaration","scope":2806,"src":"2481:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2798,"name":"uint256","nodeType":"ElementaryTypeName","src":"2481:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2801,"mutability":"mutable","name":"priorityScore","nameLocation":"2516:13:11","nodeType":"VariableDeclaration","scope":2806,"src":"2508:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2800,"name":"uint256","nodeType":"ElementaryTypeName","src":"2508:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2803,"mutability":"mutable","name":"reason","nameLocation":"2576:6:11","nodeType":"VariableDeclaration","scope":2806,"src":"2569:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2802,"name":"string","nodeType":"ElementaryTypeName","src":"2569:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2805,"mutability":"mutable","name":"urgencyLevel","nameLocation":"2599:12:11","nodeType":"VariableDeclaration","scope":2806,"src":"2592:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2804,"name":"string","nodeType":"ElementaryTypeName","src":"2592:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"DrugRequest","nameLocation":"2296:11:11","nodeType":"StructDefinition","scope":4496,"src":"2289:363:11","visibility":"public"},{"canonicalName":"MedChain.HealthRecord","id":2815,"members":[{"constant":false,"id":2808,"mutability":"mutable","name":"patient","nameLocation":"2696:7:11","nodeType":"VariableDeclaration","scope":2815,"src":"2688:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2807,"name":"address","nodeType":"ElementaryTypeName","src":"2688:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2810,"mutability":"mutable","name":"ipfsHash","nameLocation":"2720:8:11","nodeType":"VariableDeclaration","scope":2815,"src":"2713:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2809,"name":"string","nodeType":"ElementaryTypeName","src":"2713:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2812,"mutability":"mutable","name":"lastUpdated","nameLocation":"2746:11:11","nodeType":"VariableDeclaration","scope":2815,"src":"2738:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2811,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2814,"mutability":"mutable","name":"exists","nameLocation":"2772:6:11","nodeType":"VariableDeclaration","scope":2815,"src":"2767:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2813,"name":"bool","nodeType":"ElementaryTypeName","src":"2767:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"HealthRecord","nameLocation":"2665:12:11","nodeType":"StructDefinition","scope":4496,"src":"2658:127:11","visibility":"public"},{"canonicalName":"MedChain.ExpiredDrugReport","id":2828,"members":[{"constant":false,"id":2817,"mutability":"mutable","name":"reportId","nameLocation":"2834:8:11","nodeType":"VariableDeclaration","scope":2828,"src":"2826:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2816,"name":"uint256","nodeType":"ElementaryTypeName","src":"2826:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2819,"mutability":"mutable","name":"batchId","nameLocation":"2860:7:11","nodeType":"VariableDeclaration","scope":2828,"src":"2852:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2818,"name":"uint256","nodeType":"ElementaryTypeName","src":"2852:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2821,"mutability":"mutable","name":"reporter","nameLocation":"2885:8:11","nodeType":"VariableDeclaration","scope":2828,"src":"2877:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2820,"name":"address","nodeType":"ElementaryTypeName","src":"2877:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2823,"mutability":"mutable","name":"ipfsHash","nameLocation":"2910:8:11","nodeType":"VariableDeclaration","scope":2828,"src":"2903:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2822,"name":"string","nodeType":"ElementaryTypeName","src":"2903:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2825,"mutability":"mutable","name":"timestamp","nameLocation":"2936:9:11","nodeType":"VariableDeclaration","scope":2828,"src":"2928:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2824,"name":"uint256","nodeType":"ElementaryTypeName","src":"2928:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2827,"mutability":"mutable","name":"verified","nameLocation":"2960:8:11","nodeType":"VariableDeclaration","scope":2828,"src":"2955:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2826,"name":"bool","nodeType":"ElementaryTypeName","src":"2955:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ExpiredDrugReport","nameLocation":"2798:17:11","nodeType":"StructDefinition","scope":4496,"src":"2791:184:11","visibility":"public"},{"constant":false,"id":2831,"mutability":"mutable","name":"nextBatchId","nameLocation":"3020:11:11","nodeType":"VariableDeclaration","scope":4496,"src":"3004:31:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2829,"name":"uint256","nodeType":"ElementaryTypeName","src":"3004:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3034:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":2834,"mutability":"mutable","name":"nextRequestId","nameLocation":"3057:13:11","nodeType":"VariableDeclaration","scope":4496,"src":"3041:33:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2832,"name":"uint256","nodeType":"ElementaryTypeName","src":"3041:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3073:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":2837,"mutability":"mutable","name":"nextReportId","nameLocation":"3096:12:11","nodeType":"VariableDeclaration","scope":4496,"src":"3080:32:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"3080:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3111:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"functionSelector":"a69d634f","id":2840,"mutability":"constant","name":"RURAL_PRIORITY_MULTIPLIER","nameLocation":"3190:25:11","nodeType":"VariableDeclaration","scope":4496,"src":"3166:53:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2838,"name":"uint256","nodeType":"ElementaryTypeName","src":"3166:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3218:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"public"},{"constant":false,"functionSelector":"c177d077","id":2845,"mutability":"mutable","name":"drugBatches","nameLocation":"3279:11:11","nodeType":"VariableDeclaration","scope":4496,"src":"3242:48:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch)"},"typeName":{"id":2844,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2841,"name":"uint256","nodeType":"ElementaryTypeName","src":"3250:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3242:29:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2843,"nodeType":"UserDefinedTypeName","pathNode":{"id":2842,"name":"DrugBatch","nameLocations":["3261:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":2764,"src":"3261:9:11"},"referencedDeclaration":2764,"src":"3261:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage_ptr","typeString":"struct MedChain.DrugBatch"}}},"visibility":"public"},{"constant":false,"functionSelector":"f093cf80","id":2850,"mutability":"mutable","name":"hospitals","nameLocation":"3332:9:11","nodeType":"VariableDeclaration","scope":4496,"src":"3296:45:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Hospital_$2784_storage_$","typeString":"mapping(address => struct MedChain.Hospital)"},"typeName":{"id":2849,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2846,"name":"address","nodeType":"ElementaryTypeName","src":"3304:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3296:28:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Hospital_$2784_storage_$","typeString":"mapping(address => struct MedChain.Hospital)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2848,"nodeType":"UserDefinedTypeName","pathNode":{"id":2847,"name":"Hospital","nameLocations":["3315:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2784,"src":"3315:8:11"},"referencedDeclaration":2784,"src":"3315:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_storage_ptr","typeString":"struct MedChain.Hospital"}}},"visibility":"public"},{"constant":false,"functionSelector":"c098cc32","id":2855,"mutability":"mutable","name":"drugRequests","nameLocation":"3386:12:11","nodeType":"VariableDeclaration","scope":4496,"src":"3347:51:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugRequest_$2806_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugRequest)"},"typeName":{"id":2854,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2851,"name":"uint256","nodeType":"ElementaryTypeName","src":"3355:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3347:31:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugRequest_$2806_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugRequest)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2853,"nodeType":"UserDefinedTypeName","pathNode":{"id":2852,"name":"DrugRequest","nameLocations":["3366:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":2806,"src":"3366:11:11"},"referencedDeclaration":2806,"src":"3366:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugRequest_$2806_storage_ptr","typeString":"struct MedChain.DrugRequest"}}},"visibility":"public"},{"constant":false,"functionSelector":"11cf8d85","id":2860,"mutability":"mutable","name":"healthRecords","nameLocation":"3444:13:11","nodeType":"VariableDeclaration","scope":4496,"src":"3404:53:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_HealthRecord_$2815_storage_$","typeString":"mapping(address => struct MedChain.HealthRecord)"},"typeName":{"id":2859,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2856,"name":"address","nodeType":"ElementaryTypeName","src":"3412:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3404:32:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_HealthRecord_$2815_storage_$","typeString":"mapping(address => struct MedChain.HealthRecord)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2858,"nodeType":"UserDefinedTypeName","pathNode":{"id":2857,"name":"HealthRecord","nameLocations":["3423:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2815,"src":"3423:12:11"},"referencedDeclaration":2815,"src":"3423:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_HealthRecord_$2815_storage_ptr","typeString":"struct MedChain.HealthRecord"}}},"visibility":"public"},{"constant":false,"functionSelector":"09c3bdb3","id":2865,"mutability":"mutable","name":"expiredReports","nameLocation":"3508:14:11","nodeType":"VariableDeclaration","scope":4496,"src":"3463:59:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ExpiredDrugReport_$2828_storage_$","typeString":"mapping(uint256 => struct MedChain.ExpiredDrugReport)"},"typeName":{"id":2864,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2861,"name":"uint256","nodeType":"ElementaryTypeName","src":"3471:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3463:37:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ExpiredDrugReport_$2828_storage_$","typeString":"mapping(uint256 => struct MedChain.ExpiredDrugReport)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2863,"nodeType":"UserDefinedTypeName","pathNode":{"id":2862,"name":"ExpiredDrugReport","nameLocations":["3482:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":2828,"src":"3482:17:11"},"referencedDeclaration":2828,"src":"3482:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_ExpiredDrugReport_$2828_storage_ptr","typeString":"struct MedChain.ExpiredDrugReport"}}},"visibility":"public"},{"constant":false,"functionSelector":"dfe6bbe6","id":2869,"mutability":"mutable","name":"whoApprovedDrugs","nameLocation":"3560:16:11","nodeType":"VariableDeclaration","scope":4496,"src":"3528:48:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":2868,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2866,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3536:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3528:24:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2867,"name":"bool","nodeType":"ElementaryTypeName","src":"3547:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"d50f7e7b","id":2874,"mutability":"mutable","name":"hospitalRequests","nameLocation":"3619:16:11","nodeType":"VariableDeclaration","scope":4496,"src":"3582:53:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":2873,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2870,"name":"address","nodeType":"ElementaryTypeName","src":"3590:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3582:29:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":2871,"name":"uint256","nodeType":"ElementaryTypeName","src":"3601:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2872,"nodeType":"ArrayTypeName","src":"3601:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"e181143c","id":2879,"mutability":"mutable","name":"patientBatches","nameLocation":"3678:14:11","nodeType":"VariableDeclaration","scope":4496,"src":"3641:51:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":2878,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2875,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3641:29:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":2876,"name":"uint256","nodeType":"ElementaryTypeName","src":"3660:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2877,"nodeType":"ArrayTypeName","src":"3660:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"e81d190ae43a7eaaf3db1d1ad7e4d9d84b8c08c3ef7c78d479e556efb4802fc8","id":2891,"name":"DrugBatchCreated","nameLocation":"3719:16:11","nodeType":"EventDefinition","parameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2881,"indexed":true,"mutability":"mutable","name":"batchId","nameLocation":"3761:7:11","nodeType":"VariableDeclaration","scope":2891,"src":"3745:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2880,"name":"uint256","nodeType":"ElementaryTypeName","src":"3745:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2883,"indexed":false,"mutability":"mutable","name":"drugName","nameLocation":"3785:8:11","nodeType":"VariableDeclaration","scope":2891,"src":"3778:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2882,"name":"string","nodeType":"ElementaryTypeName","src":"3778:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2885,"indexed":true,"mutability":"mutable","name":"manufacturer","nameLocation":"3819:12:11","nodeType":"VariableDeclaration","scope":2891,"src":"3803:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2884,"name":"address","nodeType":"ElementaryTypeName","src":"3803:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2887,"indexed":false,"mutability":"mutable","name":"merkleRoot","nameLocation":"3849:10:11","nodeType":"VariableDeclaration","scope":2891,"src":"3841:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3841:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2889,"indexed":false,"mutability":"mutable","name":"quantity","nameLocation":"3877:8:11","nodeType":"VariableDeclaration","scope":2891,"src":"3869:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2888,"name":"uint256","nodeType":"ElementaryTypeName","src":"3869:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3735:156:11"},"src":"3713:179:11"},{"anonymous":false,"eventSelector":"1183a7beb644d5e5d07752e6223cf93b80b08a9201f60c52aaa3d23aa32252c1","id":2902,"name":"DrugTransferred","nameLocation":"3908:15:11","nodeType":"EventDefinition","parameters":{"id":2901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2893,"indexed":true,"mutability":"mutable","name":"batchId","nameLocation":"3949:7:11","nodeType":"VariableDeclaration","scope":2902,"src":"3933:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2892,"name":"uint256","nodeType":"ElementaryTypeName","src":"3933:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2895,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"3982:4:11","nodeType":"VariableDeclaration","scope":2902,"src":"3966:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2894,"name":"address","nodeType":"ElementaryTypeName","src":"3966:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2897,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"4012:2:11","nodeType":"VariableDeclaration","scope":2902,"src":"3996:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2896,"name":"address","nodeType":"ElementaryTypeName","src":"3996:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2900,"indexed":false,"mutability":"mutable","name":"newStatus","nameLocation":"4035:9:11","nodeType":"VariableDeclaration","scope":2902,"src":"4024:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"},"typeName":{"id":2899,"nodeType":"UserDefinedTypeName","pathNode":{"id":2898,"name":"DrugStatus","nameLocations":["4024:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2724,"src":"4024:10:11"},"referencedDeclaration":2724,"src":"4024:10:11","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}},"visibility":"internal"}],"src":"3923:127:11"},"src":"3902:149:11"},{"anonymous":false,"eventSelector":"06c064a68a91e386a0f86fbeea16fd0052a00310bf1fd86927f30d29c9c881c6","id":2910,"name":"DrugVerified","nameLocation":"4067:12:11","nodeType":"EventDefinition","parameters":{"id":2909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"indexed":true,"mutability":"mutable","name":"batchId","nameLocation":"4105:7:11","nodeType":"VariableDeclaration","scope":2910,"src":"4089:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2903,"name":"uint256","nodeType":"ElementaryTypeName","src":"4089:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2906,"indexed":true,"mutability":"mutable","name":"verifier","nameLocation":"4138:8:11","nodeType":"VariableDeclaration","scope":2910,"src":"4122:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2905,"name":"address","nodeType":"ElementaryTypeName","src":"4122:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2908,"indexed":false,"mutability":"mutable","name":"isValid","nameLocation":"4161:7:11","nodeType":"VariableDeclaration","scope":2910,"src":"4156:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2907,"name":"bool","nodeType":"ElementaryTypeName","src":"4156:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4079:95:11"},"src":"4061:114:11"},{"anonymous":false,"eventSelector":"dc9c7ce67c6478b15cb0dbf6f1ed597031431d25746171ccc85589f658462252","id":2919,"name":"HospitalRegistered","nameLocation":"4191:18:11","nodeType":"EventDefinition","parameters":{"id":2918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2912,"indexed":true,"mutability":"mutable","name":"hospital","nameLocation":"4235:8:11","nodeType":"VariableDeclaration","scope":2919,"src":"4219:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2911,"name":"address","nodeType":"ElementaryTypeName","src":"4219:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2914,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"4260:4:11","nodeType":"VariableDeclaration","scope":2919,"src":"4253:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2913,"name":"string","nodeType":"ElementaryTypeName","src":"4253:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2917,"indexed":false,"mutability":"mutable","name":"hospitalType","nameLocation":"4287:12:11","nodeType":"VariableDeclaration","scope":2919,"src":"4274:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_HospitalType_$2727","typeString":"enum MedChain.HospitalType"},"typeName":{"id":2916,"nodeType":"UserDefinedTypeName","pathNode":{"id":2915,"name":"HospitalType","nameLocations":["4274:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2727,"src":"4274:12:11"},"referencedDeclaration":2727,"src":"4274:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_HospitalType_$2727","typeString":"enum MedChain.HospitalType"}},"visibility":"internal"}],"src":"4209:96:11"},"src":"4185:121:11"},{"anonymous":false,"eventSelector":"5ab53553aadac42f69e7f599923c6df5aa5264ba08b69e5b61b9b2cf4517a042","id":2929,"name":"DrugRequested","nameLocation":"4322:13:11","nodeType":"EventDefinition","parameters":{"id":2928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2921,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"4361:9:11","nodeType":"VariableDeclaration","scope":2929,"src":"4345:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2920,"name":"uint256","nodeType":"ElementaryTypeName","src":"4345:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2923,"indexed":true,"mutability":"mutable","name":"hospital","nameLocation":"4396:8:11","nodeType":"VariableDeclaration","scope":2929,"src":"4380:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2922,"name":"address","nodeType":"ElementaryTypeName","src":"4380:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2925,"indexed":true,"mutability":"mutable","name":"distributor","nameLocation":"4430:11:11","nodeType":"VariableDeclaration","scope":2929,"src":"4414:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2924,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2927,"indexed":false,"mutability":"mutable","name":"quantity","nameLocation":"4459:8:11","nodeType":"VariableDeclaration","scope":2929,"src":"4451:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2926,"name":"uint256","nodeType":"ElementaryTypeName","src":"4451:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4335:138:11"},"src":"4316:158:11"},{"anonymous":false,"eventSelector":"41e9729cd843b40e15655cc985182426e5c96894afc3283a7f5d012d43ec8c35","id":2937,"name":"StockThresholdReached","nameLocation":"4490:21:11","nodeType":"EventDefinition","parameters":{"id":2936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2931,"indexed":true,"mutability":"mutable","name":"hospital","nameLocation":"4537:8:11","nodeType":"VariableDeclaration","scope":2937,"src":"4521:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2930,"name":"address","nodeType":"ElementaryTypeName","src":"4521:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2933,"indexed":false,"mutability":"mutable","name":"currentStock","nameLocation":"4563:12:11","nodeType":"VariableDeclaration","scope":2937,"src":"4555:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2932,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2935,"indexed":false,"mutability":"mutable","name":"threshold","nameLocation":"4593:9:11","nodeType":"VariableDeclaration","scope":2937,"src":"4585:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2934,"name":"uint256","nodeType":"ElementaryTypeName","src":"4585:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4511:97:11"},"src":"4484:125:11"},{"anonymous":false,"eventSelector":"5c2b5d6645d201d29b6da912156d4b230ad8c622967aa75bd74d5e86308236d8","id":2945,"name":"HealthRecordUpdated","nameLocation":"4625:19:11","nodeType":"EventDefinition","parameters":{"id":2944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2939,"indexed":true,"mutability":"mutable","name":"patient","nameLocation":"4670:7:11","nodeType":"VariableDeclaration","scope":2945,"src":"4654:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2938,"name":"address","nodeType":"ElementaryTypeName","src":"4654:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2941,"indexed":false,"mutability":"mutable","name":"ipfsHash","nameLocation":"4694:8:11","nodeType":"VariableDeclaration","scope":2945,"src":"4687:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2940,"name":"string","nodeType":"ElementaryTypeName","src":"4687:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2943,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"4720:9:11","nodeType":"VariableDeclaration","scope":2945,"src":"4712:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2942,"name":"uint256","nodeType":"ElementaryTypeName","src":"4712:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4644:91:11"},"src":"4619:117:11"},{"anonymous":false,"eventSelector":"19e8779a5de1deea64844b3c74c7909a3e9d5774a736170cf5add7d652d3cfc2","id":2953,"name":"ExpiredDrugReported","nameLocation":"4752:19:11","nodeType":"EventDefinition","parameters":{"id":2952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2947,"indexed":true,"mutability":"mutable","name":"reportId","nameLocation":"4797:8:11","nodeType":"VariableDeclaration","scope":2953,"src":"4781:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2946,"name":"uint256","nodeType":"ElementaryTypeName","src":"4781:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2949,"indexed":true,"mutability":"mutable","name":"batchId","nameLocation":"4831:7:11","nodeType":"VariableDeclaration","scope":2953,"src":"4815:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2948,"name":"uint256","nodeType":"ElementaryTypeName","src":"4815:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2951,"indexed":true,"mutability":"mutable","name":"reporter","nameLocation":"4864:8:11","nodeType":"VariableDeclaration","scope":2953,"src":"4848:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2950,"name":"address","nodeType":"ElementaryTypeName","src":"4848:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4771:107:11"},"src":"4746:133:11"},{"body":{"id":2965,"nodeType":"Block","src":"4930:119:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2957,"name":"MANUFACTURER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"4956:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2958,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4975:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4979:6:11","memberName":"sender","nodeType":"MemberAccess","src":"4975:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2956,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"4948:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4948:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206d616e7566616374757265722063616e2063616c6c20746869732066756e6374696f6e","id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4988:42:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d79a3a3f7c1218961edbc0a86890a8208389a911b194e274cadd61488debdd30","typeString":"literal_string \"Only manufacturer can call this function\""},"value":"Only manufacturer can call this function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d79a3a3f7c1218961edbc0a86890a8208389a911b194e274cadd61488debdd30","typeString":"literal_string \"Only manufacturer can call this function\""}],"id":2955,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4940:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4940:91:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2963,"nodeType":"ExpressionStatement","src":"4940:91:11"},{"id":2964,"nodeType":"PlaceholderStatement","src":"5041:1:11"}]},"id":2966,"name":"onlyManufacturer","nameLocation":"4911:16:11","nodeType":"ModifierDefinition","parameters":{"id":2954,"nodeType":"ParameterList","parameters":[],"src":"4927:2:11"},"src":"4902:147:11","virtual":false,"visibility":"internal"},{"body":{"id":2978,"nodeType":"Block","src":"5086:117:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2970,"name":"DISTRIBUTOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"5112:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2971,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5130:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5134:6:11","memberName":"sender","nodeType":"MemberAccess","src":"5130:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2969,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"5104:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5104:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206469737472696275746f722063616e2063616c6c20746869732066756e6374696f6e","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5143:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_8f1d1c61b77108be846a193774e0e71c59f46d1142db5fad3dfe3aefe7eda661","typeString":"literal_string \"Only distributor can call this function\""},"value":"Only distributor can call this function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8f1d1c61b77108be846a193774e0e71c59f46d1142db5fad3dfe3aefe7eda661","typeString":"literal_string \"Only distributor can call this function\""}],"id":2968,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5096:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5096:89:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2976,"nodeType":"ExpressionStatement","src":"5096:89:11"},{"id":2977,"nodeType":"PlaceholderStatement","src":"5195:1:11"}]},"id":2979,"name":"onlyDistributor","nameLocation":"5068:15:11","nodeType":"ModifierDefinition","parameters":{"id":2967,"nodeType":"ParameterList","parameters":[],"src":"5083:2:11"},"src":"5059:144:11","virtual":false,"visibility":"internal"},{"body":{"id":2991,"nodeType":"Block","src":"5237:111:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2983,"name":"HOSPITAL_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"5263:13:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2984,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5278:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5282:6:11","memberName":"sender","nodeType":"MemberAccess","src":"5278:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2982,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"5255:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5255:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920686f73706974616c2063616e2063616c6c20746869732066756e6374696f6e","id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5291:38:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c05b4a77256b97ef45d0795d0c560a99faf3d312a1c097a10c5a816971f4bcf9","typeString":"literal_string \"Only hospital can call this function\""},"value":"Only hospital can call this function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c05b4a77256b97ef45d0795d0c560a99faf3d312a1c097a10c5a816971f4bcf9","typeString":"literal_string \"Only hospital can call this function\""}],"id":2981,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5247:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5247:83:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2989,"nodeType":"ExpressionStatement","src":"5247:83:11"},{"id":2990,"nodeType":"PlaceholderStatement","src":"5340:1:11"}]},"id":2992,"name":"onlyHospital","nameLocation":"5222:12:11","nodeType":"ModifierDefinition","parameters":{"id":2980,"nodeType":"ParameterList","parameters":[],"src":"5234:2:11"},"src":"5213:135:11","virtual":false,"visibility":"internal"},{"body":{"id":3004,"nodeType":"Block","src":"5381:109:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2996,"name":"PATIENT_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"5407:12:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2997,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5421:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5425:6:11","memberName":"sender","nodeType":"MemberAccess","src":"5421:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2995,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"5399:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5399:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792070617469656e742063616e2063616c6c20746869732066756e6374696f6e","id":3000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5434:37:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d5e4c67875a621d66379f842fedbca83dec15f9405e37ae1f43374e757ea40","typeString":"literal_string \"Only patient can call this function\""},"value":"Only patient can call this function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d5e4c67875a621d66379f842fedbca83dec15f9405e37ae1f43374e757ea40","typeString":"literal_string \"Only patient can call this function\""}],"id":2994,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5391:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5391:81:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3002,"nodeType":"ExpressionStatement","src":"5391:81:11"},{"id":3003,"nodeType":"PlaceholderStatement","src":"5482:1:11"}]},"id":3005,"name":"onlyPatient","nameLocation":"5367:11:11","nodeType":"ModifierDefinition","parameters":{"id":2993,"nodeType":"ParameterList","parameters":[],"src":"5378:2:11"},"src":"5358:132:11","virtual":false,"visibility":"internal"},{"body":{"id":3017,"nodeType":"Block","src":"5521:105:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":3009,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"5547:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3010,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5559:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5563:6:11","memberName":"sender","nodeType":"MemberAccess","src":"5559:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3008,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"5539:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5539:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f6e","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5572:35:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b","typeString":"literal_string \"Only admin can call this function\""},"value":"Only admin can call this function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b","typeString":"literal_string \"Only admin can call this function\""}],"id":3007,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5531:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5531:77:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3015,"nodeType":"ExpressionStatement","src":"5531:77:11"},{"id":3016,"nodeType":"PlaceholderStatement","src":"5618:1:11"}]},"id":3018,"name":"onlyAdmin","nameLocation":"5509:9:11","nodeType":"ModifierDefinition","parameters":{"id":3006,"nodeType":"ParameterList","parameters":[],"src":"5518:2:11"},"src":"5500:126:11","virtual":false,"visibility":"internal"},{"body":{"id":3034,"nodeType":"Block","src":"5670:95:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3023,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"5688:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5699:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5688:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3026,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"5704:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3027,"name":"nextBatchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"5715:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5704:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5688:38:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206261746368204944","id":3030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5728:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_eba880dea8aee8de1d9d9bf49acda120b70c7b63ab177b208a0c5c207634c80b","typeString":"literal_string \"Invalid batch ID\""},"value":"Invalid batch ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eba880dea8aee8de1d9d9bf49acda120b70c7b63ab177b208a0c5c207634c80b","typeString":"literal_string \"Invalid batch ID\""}],"id":3022,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5680:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5680:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3032,"nodeType":"ExpressionStatement","src":"5680:67:11"},{"id":3033,"nodeType":"PlaceholderStatement","src":"5757:1:11"}]},"id":3035,"name":"validBatch","nameLocation":"5641:10:11","nodeType":"ModifierDefinition","parameters":{"id":3021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3020,"mutability":"mutable","name":"_batchId","nameLocation":"5660:8:11","nodeType":"VariableDeclaration","scope":3035,"src":"5652:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3019,"name":"uint256","nodeType":"ElementaryTypeName","src":"5652:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5651:18:11"},"src":"5632:133:11","virtual":false,"visibility":"internal"},{"body":{"id":3050,"nodeType":"Block","src":"5785:103:11","statements":[{"expression":{"arguments":[{"id":3039,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"5806:18:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3040,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5826:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5830:6:11","memberName":"sender","nodeType":"MemberAccess","src":"5826:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3038,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"5795:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5795:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3043,"nodeType":"ExpressionStatement","src":"5795:42:11"},{"expression":{"arguments":[{"id":3045,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"5858:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3046,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5870:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5874:6:11","memberName":"sender","nodeType":"MemberAccess","src":"5870:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3044,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"5847:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5847:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3049,"nodeType":"ExpressionStatement","src":"5847:34:11"}]},"id":3051,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3036,"nodeType":"ParameterList","parameters":[],"src":"5782:2:11"},"returnParameters":{"id":3037,"nodeType":"ParameterList","parameters":[],"src":"5785:0:11"},"scope":4496,"src":"5771:117:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3063,"nodeType":"Block","src":"5994:55:11","statements":[{"expression":{"arguments":[{"id":3059,"name":"MANUFACTURER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"6015:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3060,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"6034:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3058,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"6004:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6004:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3062,"nodeType":"ExpressionStatement","src":"6004:38:11"}]},"functionSelector":"55c4281e","id":3064,"implemented":true,"kind":"function","modifiers":[{"id":3056,"kind":"modifierInvocation","modifierName":{"id":3055,"name":"onlyAdmin","nameLocations":["5984:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":3018,"src":"5984:9:11"},"nodeType":"ModifierInvocation","src":"5984:9:11"}],"name":"grantManufacturerRole","nameLocation":"5936:21:11","nodeType":"FunctionDefinition","parameters":{"id":3054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3053,"mutability":"mutable","name":"account","nameLocation":"5966:7:11","nodeType":"VariableDeclaration","scope":3064,"src":"5958:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3052,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5957:17:11"},"returnParameters":{"id":3057,"nodeType":"ParameterList","parameters":[],"src":"5994:0:11"},"scope":4496,"src":"5927:122:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3076,"nodeType":"Block","src":"6125:54:11","statements":[{"expression":{"arguments":[{"id":3072,"name":"DISTRIBUTOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"6146:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3073,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"6164:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3071,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"6135:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6135:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3075,"nodeType":"ExpressionStatement","src":"6135:37:11"}]},"functionSelector":"8bba2a0a","id":3077,"implemented":true,"kind":"function","modifiers":[{"id":3069,"kind":"modifierInvocation","modifierName":{"id":3068,"name":"onlyAdmin","nameLocations":["6115:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":3018,"src":"6115:9:11"},"nodeType":"ModifierInvocation","src":"6115:9:11"}],"name":"grantDistributorRole","nameLocation":"6068:20:11","nodeType":"FunctionDefinition","parameters":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3066,"mutability":"mutable","name":"account","nameLocation":"6097:7:11","nodeType":"VariableDeclaration","scope":3077,"src":"6089:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3065,"name":"address","nodeType":"ElementaryTypeName","src":"6089:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6088:17:11"},"returnParameters":{"id":3070,"nodeType":"ParameterList","parameters":[],"src":"6125:0:11"},"scope":4496,"src":"6059:120:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3089,"nodeType":"Block","src":"6252:51:11","statements":[{"expression":{"arguments":[{"id":3085,"name":"HOSPITAL_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"6273:13:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3086,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"6288:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3084,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"6262:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6262:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3088,"nodeType":"ExpressionStatement","src":"6262:34:11"}]},"functionSelector":"7ee756f2","id":3090,"implemented":true,"kind":"function","modifiers":[{"id":3082,"kind":"modifierInvocation","modifierName":{"id":3081,"name":"onlyAdmin","nameLocations":["6242:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":3018,"src":"6242:9:11"},"nodeType":"ModifierInvocation","src":"6242:9:11"}],"name":"grantHospitalRole","nameLocation":"6198:17:11","nodeType":"FunctionDefinition","parameters":{"id":3080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3079,"mutability":"mutable","name":"account","nameLocation":"6224:7:11","nodeType":"VariableDeclaration","scope":3090,"src":"6216:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3078,"name":"address","nodeType":"ElementaryTypeName","src":"6216:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6215:17:11"},"returnParameters":{"id":3083,"nodeType":"ParameterList","parameters":[],"src":"6252:0:11"},"scope":4496,"src":"6189:114:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3102,"nodeType":"Block","src":"6375:50:11","statements":[{"expression":{"arguments":[{"id":3098,"name":"PATIENT_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"6396:12:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3099,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"6410:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3097,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"6385:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6385:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3101,"nodeType":"ExpressionStatement","src":"6385:33:11"}]},"functionSelector":"7f2df8b0","id":3103,"implemented":true,"kind":"function","modifiers":[{"id":3095,"kind":"modifierInvocation","modifierName":{"id":3094,"name":"onlyAdmin","nameLocations":["6365:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":3018,"src":"6365:9:11"},"nodeType":"ModifierInvocation","src":"6365:9:11"}],"name":"grantPatientRole","nameLocation":"6322:16:11","nodeType":"FunctionDefinition","parameters":{"id":3093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3092,"mutability":"mutable","name":"account","nameLocation":"6347:7:11","nodeType":"VariableDeclaration","scope":3103,"src":"6339:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3091,"name":"address","nodeType":"ElementaryTypeName","src":"6339:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6338:17:11"},"returnParameters":{"id":3096,"nodeType":"ParameterList","parameters":[],"src":"6375:0:11"},"scope":4496,"src":"6313:112:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3227,"nodeType":"Block","src":"6788:1264:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3127,"name":"_quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"6806:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6818:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6806:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175616e74697479206d7573742062652067726561746572207468616e2030","id":3130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6821:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_0256b2f79971b33d79a70471e25342b40a29973a9924f7bf65b61d253cc5e2ad","typeString":"literal_string \"Quantity must be greater than 0\""},"value":"Quantity must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0256b2f79971b33d79a70471e25342b40a29973a9924f7bf65b61d253cc5e2ad","typeString":"literal_string \"Quantity must be greater than 0\""}],"id":3126,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6798:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6798:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3132,"nodeType":"ExpressionStatement","src":"6798:57:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3134,"name":"_expiryDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"6873:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":3135,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6887:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6893:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"6887:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6873:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4578706972792064617465206d75737420626520696e2074686520667574757265","id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6904:35:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b707a99a39ba6b67c0c01a9f25a9d3ca32fd1ec801c322e553fab0f6c6bfe13d","typeString":"literal_string \"Expiry date must be in the future\""},"value":"Expiry date must be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b707a99a39ba6b67c0c01a9f25a9d3ca32fd1ec801c322e553fab0f6c6bfe13d","typeString":"literal_string \"Expiry date must be in the future\""}],"id":3133,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6865:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6865:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3140,"nodeType":"ExpressionStatement","src":"6865:75:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3144,"name":"_drugName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"6964:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6958:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3142,"name":"bytes","nodeType":"ElementaryTypeName","src":"6958:5:11","typeDescriptions":{}}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6958:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6975:6:11","memberName":"length","nodeType":"MemberAccess","src":"6958:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6984:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6958:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44727567206e616d652063616e6e6f7420626520656d707479","id":3149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6987:27:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b7ec6dd5227f8d1beedd0e55367bdb10f8e548818ff0e4aaf7141d92323f4c4","typeString":"literal_string \"Drug name cannot be empty\""},"value":"Drug name cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b7ec6dd5227f8d1beedd0e55367bdb10f8e548818ff0e4aaf7141d92323f4c4","typeString":"literal_string \"Drug name cannot be empty\""}],"id":3141,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6950:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6950:65:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3151,"nodeType":"ExpressionStatement","src":"6950:65:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3155,"name":"_drugCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"7039:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7033:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3153,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:11","typeDescriptions":{}}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7033:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7050:6:11","memberName":"length","nodeType":"MemberAccess","src":"7033:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7059:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7033:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4472756720636f64652063616e6e6f7420626520656d707479","id":3160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7062:27:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_2378d917e092bbff8c91ccf56c862649d8c9afd50004c2a85082daf59a0fe98f","typeString":"literal_string \"Drug code cannot be empty\""},"value":"Drug code cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2378d917e092bbff8c91ccf56c862649d8c9afd50004c2a85082daf59a0fe98f","typeString":"literal_string \"Drug code cannot be empty\""}],"id":3152,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7025:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7025:65:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3162,"nodeType":"ExpressionStatement","src":"7025:65:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3166,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"7114:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7108:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3164,"name":"bytes","nodeType":"ElementaryTypeName","src":"7108:5:11","typeDescriptions":{}}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7108:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7125:6:11","memberName":"length","nodeType":"MemberAccess","src":"7108:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7134:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7108:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4950465320686173682063616e6e6f7420626520656d707479","id":3171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7137:27:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9133b9f3350abb9ad5c186a964d7544d54ce63c05ebecb3c7513f09140c5a07d","typeString":"literal_string \"IPFS hash cannot be empty\""},"value":"IPFS hash cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9133b9f3350abb9ad5c186a964d7544d54ce63c05ebecb3c7513f09140c5a07d","typeString":"literal_string \"IPFS hash cannot be empty\""}],"id":3163,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7100:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7100:65:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3173,"nodeType":"ExpressionStatement","src":"7100:65:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3177,"name":"_regulatoryApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"7189:19:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7183:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3175,"name":"bytes","nodeType":"ElementaryTypeName","src":"7183:5:11","typeDescriptions":{}}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7183:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7210:6:11","memberName":"length","nodeType":"MemberAccess","src":"7183:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7219:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7183:37:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526567756c61746f727920617070726f76616c207265717569726564","id":3182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7222:30:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_4245aecb392c65d7f74fa6edc2ee8661520b367df5413e4577bccbcb1dd7a072","typeString":"literal_string \"Regulatory approval required\""},"value":"Regulatory approval required"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4245aecb392c65d7f74fa6edc2ee8661520b367df5413e4577bccbcb1dd7a072","typeString":"literal_string \"Regulatory approval required\""}],"id":3174,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7175:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7175:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3184,"nodeType":"ExpressionStatement","src":"7175:78:11"},{"assignments":[3186],"declarations":[{"constant":false,"id":3186,"mutability":"mutable","name":"batchId","nameLocation":"7280:7:11","nodeType":"VariableDeclaration","scope":3227,"src":"7272:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3185,"name":"uint256","nodeType":"ElementaryTypeName","src":"7272:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3189,"initialValue":{"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7290:13:11","subExpression":{"id":3187,"name":"nextBatchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"7290:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7272:31:11"},{"expression":{"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3190,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"7322:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":3192,"indexExpression":{"id":3191,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"7334:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7322:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3194,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"7378:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3195,"name":"_drugName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"7409:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3196,"name":"_drugCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"7442:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3197,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7479:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7483:6:11","memberName":"sender","nodeType":"MemberAccess","src":"7479:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3199,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"7515:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3200,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"7550:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3201,"name":"_quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"7583:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3202,"name":"_quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"7624:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3203,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7664:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7670:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"7664:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3205,"name":"_expiryDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"7705:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3206,"name":"DrugStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"7738:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DrugStatus_$2724_$","typeString":"type(enum MedChain.DrugStatus)"}},"id":3207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7749:12:11","memberName":"Manufactured","nodeType":"MemberAccess","referencedDeclaration":2719,"src":"7738:23:11","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}},{"expression":{"id":3208,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7790:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7794:6:11","memberName":"sender","nodeType":"MemberAccess","src":"7790:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7829:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7856:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":3212,"name":"_regulatoryApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"7895:19:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3193,"name":"DrugBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"7345:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_DrugBatch_$2764_storage_ptr_$","typeString":"type(struct MedChain.DrugBatch storage pointer)"}},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7369:7:11","7399:8:11","7432:8:11","7465:12:11","7503:10:11","7540:8:11","7573:8:11","7606:16:11","7647:15:11","7693:10:11","7730:6:11","7775:13:11","7814:13:11","7844:10:11","7875:18:11"],"names":["batchId","drugName","drugCode","manufacturer","merkleRoot","ipfsHash","quantity","originalQuantity","manufactureDate","expiryDate","status","currentHolder","transferCount","isRecalled","regulatoryApproval"],"nodeType":"FunctionCall","src":"7345:580:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_memory_ptr","typeString":"struct MedChain.DrugBatch memory"}},"src":"7322:603:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":3215,"nodeType":"ExpressionStatement","src":"7322:603:11"},{"eventCall":{"arguments":[{"id":3217,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"7966:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3218,"name":"_drugName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"7975:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3219,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7986:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7990:6:11","memberName":"sender","nodeType":"MemberAccess","src":"7986:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3221,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"7998:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3222,"name":"_quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"8011:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3216,"name":"DrugBatchCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"7949:16:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_address_$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (uint256,string memory,address,bytes32,uint256)"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7949:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3224,"nodeType":"EmitStatement","src":"7944:77:11"},{"expression":{"id":3225,"name":"batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"8038:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3125,"id":3226,"nodeType":"Return","src":"8031:14:11"}]},"functionSelector":"8d55863b","id":3228,"implemented":true,"kind":"function","modifiers":[{"id":3120,"kind":"modifierInvocation","modifierName":{"id":3119,"name":"onlyManufacturer","nameLocations":["6739:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":2966,"src":"6739:16:11"},"nodeType":"ModifierInvocation","src":"6739:16:11"},{"id":3122,"kind":"modifierInvocation","modifierName":{"id":3121,"name":"whenNotPaused","nameLocations":["6756:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":442,"src":"6756:13:11"},"nodeType":"ModifierInvocation","src":"6756:13:11"}],"name":"createDrugBatch","nameLocation":"6481:15:11","nodeType":"FunctionDefinition","parameters":{"id":3118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3105,"mutability":"mutable","name":"_drugName","nameLocation":"6520:9:11","nodeType":"VariableDeclaration","scope":3228,"src":"6506:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3104,"name":"string","nodeType":"ElementaryTypeName","src":"6506:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3107,"mutability":"mutable","name":"_drugCode","nameLocation":"6553:9:11","nodeType":"VariableDeclaration","scope":3228,"src":"6539:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3106,"name":"string","nodeType":"ElementaryTypeName","src":"6539:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3109,"mutability":"mutable","name":"_regulatoryApproval","nameLocation":"6586:19:11","nodeType":"VariableDeclaration","scope":3228,"src":"6572:33:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3108,"name":"string","nodeType":"ElementaryTypeName","src":"6572:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3111,"mutability":"mutable","name":"_merkleRoot","nameLocation":"6623:11:11","nodeType":"VariableDeclaration","scope":3228,"src":"6615:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3110,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6615:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3113,"mutability":"mutable","name":"_ipfsHash","nameLocation":"6658:9:11","nodeType":"VariableDeclaration","scope":3228,"src":"6644:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3112,"name":"string","nodeType":"ElementaryTypeName","src":"6644:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3115,"mutability":"mutable","name":"_quantity","nameLocation":"6685:9:11","nodeType":"VariableDeclaration","scope":3228,"src":"6677:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3114,"name":"uint256","nodeType":"ElementaryTypeName","src":"6677:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3117,"mutability":"mutable","name":"_expiryDate","nameLocation":"6712:11:11","nodeType":"VariableDeclaration","scope":3228,"src":"6704:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3116,"name":"uint256","nodeType":"ElementaryTypeName","src":"6704:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6496:233:11"},"returnParameters":{"id":3125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3228,"src":"6779:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3123,"name":"uint256","nodeType":"ElementaryTypeName","src":"6779:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6778:9:11"},"scope":4496,"src":"6472:1580:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3324,"nodeType":"Block","src":"8225:775:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":3246,"name":"DISTRIBUTOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"8251:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3247,"name":"_distributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"8269:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3245,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"8243:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8243:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206469737472696275746f722061646472657373","id":3249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8284:29:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ec51d2cb71827eee9a428393c2723a61ba1997bdd4cc809fffef30397f9e96c","typeString":"literal_string \"Invalid distributor address\""},"value":"Invalid distributor address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ec51d2cb71827eee9a428393c2723a61ba1997bdd4cc809fffef30397f9e96c","typeString":"literal_string \"Invalid distributor address\""}],"id":3244,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8235:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8235:79:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3251,"nodeType":"ExpressionStatement","src":"8235:79:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3253,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"8332:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":3255,"indexExpression":{"id":3254,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"8344:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8332:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":3256,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8354:12:11","memberName":"manufacturer","nodeType":"MemberAccess","referencedDeclaration":2740,"src":"8332:34:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3257,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8370:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8374:6:11","memberName":"sender","nodeType":"MemberAccess","src":"8370:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8332:48:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206261746368206d616e7566616374757265722063616e207472616e73666572","id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8382:38:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f1a704e7e4614b3a2609ac947b3e3646d1832537ef62adf40599179811e6ed0","typeString":"literal_string \"Only batch manufacturer can transfer\""},"value":"Only batch manufacturer can transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f1a704e7e4614b3a2609ac947b3e3646d1832537ef62adf40599179811e6ed0","typeString":"literal_string \"Only batch manufacturer can transfer\""}],"id":3252,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8324:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8324:97:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3262,"nodeType":"ExpressionStatement","src":"8324:97:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3264,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"8439:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":3266,"indexExpression":{"id":3265,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"8451:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8439:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":3267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8461:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2755,"src":"8439:28:11","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3268,"name":"DrugStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"8471:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DrugStatus_$2724_$","typeString":"type(enum MedChain.DrugStatus)"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8482:12:11","memberName":"Manufactured","nodeType":"MemberAccess","referencedDeclaration":2719,"src":"8471:23:11","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}},"src":"8439:55:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420626174636820737461747573","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8496:22:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9368739f0bed58f75f5701608bc790c30a1ae1e9a2ba52c189927bdcd22a10d3","typeString":"literal_string \"Invalid batch status\""},"value":"Invalid batch status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9368739f0bed58f75f5701608bc790c30a1ae1e9a2ba52c189927bdcd22a10d3","typeString":"literal_string \"Invalid batch status\""}],"id":3263,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8431:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8431:88:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3273,"nodeType":"ExpressionStatement","src":"8431:88:11"},{"expression":{"arguments":[{"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8537:33:11","subExpression":{"expression":{"baseExpression":{"id":3275,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"8538:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":3277,"indexExpression":{"id":3276,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"8550:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8538:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":3278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8560:10:11","memberName":"isRecalled","nodeType":"MemberAccess","referencedDeclaration":2761,"src":"8538:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207472616e7366657220726563616c6c6564206261746368","id":3280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8572:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_7fe60d0a56fd9de48a0ee357f139202e3b236b9a82fcf7bec9472d175838384e","typeString":"literal_string \"Cannot transfer recalled batch\""},"value":"Cannot transfer recalled batch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7fe60d0a56fd9de48a0ee357f139202e3b236b9a82fcf7bec9472d175838384e","typeString":"literal_string \"Cannot transfer recalled batch\""}],"id":3274,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8529:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8529:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3282,"nodeType":"ExpressionStatement","src":"8529:76:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3284,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8623:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8629:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"8623:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":3286,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"8641:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":3288,"indexExpression":{"id":3287,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"8653:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8641:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":3289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8663:10:11","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":2752,"src":"8641:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8623:50:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207472616e736665722065787069726564206261746368","id":3291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8675:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_79fd44dd124018f676eb472681aad7e7fd5f3f18d0464feadd3327b27da5fac2","typeString":"literal_string \"Cannot transfer expired batch\""},"value":"Cannot transfer expired batch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_79fd44dd124018f676eb472681aad7e7fd5f3f18d0464feadd3327b27da5fac2","typeString":"literal_string \"Cannot transfer expired batch\""}],"id":3283,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8615:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8615:92:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3293,"nodeType":"ExpressionStatement","src":"8615:92:11"},{"expression":{"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3294,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"8726:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":3296,"indexExpression":{"id":3295,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"8738:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8726:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":3297,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8748:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2755,"src":"8726:28:11","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3298,"name":"DrugStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"8757:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DrugStatus_$2724_$","typeString":"type(enum MedChain.DrugStatus)"}},"id":3299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8768:15:11","memberName":"WithDistributor","nodeType":"MemberAccess","referencedDeclaration":2720,"src":"8757:26:11","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}},"src":"8726:57:11","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}},"id":3301,"nodeType":"ExpressionStatement","src":"8726:57:11"},{"expression":{"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3302,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"8793:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":3304,"indexExpression":{"id":3303,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"8805:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8793:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":3305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8815:13:11","memberName":"currentHolder","nodeType":"MemberAccess","referencedDeclaration":2757,"src":"8793:35:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3306,"name":"_distributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"8831:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8793:50:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3308,"nodeType":"ExpressionStatement","src":"8793:50:11"},{"expression":{"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8853:37:11","subExpression":{"expression":{"baseExpression":{"id":3309,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"8853:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":3311,"indexExpression":{"id":3310,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"8865:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8853:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":3312,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8875:13:11","memberName":"transferCount","nodeType":"MemberAccess","referencedDeclaration":2759,"src":"8853:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3314,"nodeType":"ExpressionStatement","src":"8853:37:11"},{"eventCall":{"arguments":[{"id":3316,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"8930:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3317,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8940:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8944:6:11","memberName":"sender","nodeType":"MemberAccess","src":"8940:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3319,"name":"_distributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"8952:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3320,"name":"DrugStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"8966:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DrugStatus_$2724_$","typeString":"type(enum MedChain.DrugStatus)"}},"id":3321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8977:15:11","memberName":"WithDistributor","nodeType":"MemberAccess","referencedDeclaration":2720,"src":"8966:26:11","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}],"id":3315,"name":"DrugTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"8914:15:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_enum$_DrugStatus_$2724_$returns$__$","typeString":"function (uint256,address,address,enum MedChain.DrugStatus)"}},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8914:79:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3323,"nodeType":"EmitStatement","src":"8909:84:11"}]},"functionSelector":"e229f2cb","id":3325,"implemented":true,"kind":"function","modifiers":[{"id":3235,"kind":"modifierInvocation","modifierName":{"id":3234,"name":"onlyManufacturer","nameLocations":["8160:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":2966,"src":"8160:16:11"},"nodeType":"ModifierInvocation","src":"8160:16:11"},{"arguments":[{"id":3237,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"8188:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3238,"kind":"modifierInvocation","modifierName":{"id":3236,"name":"validBatch","nameLocations":["8177:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":3035,"src":"8177:10:11"},"nodeType":"ModifierInvocation","src":"8177:20:11"},{"id":3240,"kind":"modifierInvocation","modifierName":{"id":3239,"name":"whenNotPaused","nameLocations":["8198:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":442,"src":"8198:13:11"},"nodeType":"ModifierInvocation","src":"8198:13:11"},{"id":3242,"kind":"modifierInvocation","modifierName":{"id":3241,"name":"nonReentrant","nameLocations":["8212:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":550,"src":"8212:12:11"},"nodeType":"ModifierInvocation","src":"8212:12:11"}],"name":"transferToDistributor","nameLocation":"8067:21:11","nodeType":"FunctionDefinition","parameters":{"id":3233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"mutability":"mutable","name":"_batchId","nameLocation":"8106:8:11","nodeType":"VariableDeclaration","scope":3325,"src":"8098:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3229,"name":"uint256","nodeType":"ElementaryTypeName","src":"8098:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3232,"mutability":"mutable","name":"_distributor","nameLocation":"8132:12:11","nodeType":"VariableDeclaration","scope":3325,"src":"8124:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3231,"name":"address","nodeType":"ElementaryTypeName","src":"8124:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8088:62:11"},"returnParameters":{"id":3243,"nodeType":"ParameterList","parameters":[],"src":"8225:0:11"},"scope":4496,"src":"8058:942:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3409,"nodeType":"Block","src":"9139:710:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":3339,"name":"HOSPITAL_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"9165:13:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3340,"name":"_hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"9180:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3338,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"9157:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9157:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420686f73706974616c2061646472657373","id":3342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9192:26:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b5c3fff8a7470fb7d3cb5a2c825606d65a273a4198bebb9e861ea888af21bb0","typeString":"literal_string \"Invalid hospital address\""},"value":"Invalid hospital address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4b5c3fff8a7470fb7d3cb5a2c825606d65a273a4198bebb9e861ea888af21bb0","typeString":"literal_string \"Invalid hospital address\""}],"id":3337,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9149:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9149:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3344,"nodeType":"ExpressionStatement","src":"9149:70:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3346,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"9237:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":3348,"indexExpression":{"id":3347,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"9249:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9237:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":3349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9259:13:11","memberName":"currentHolder","nodeType":"MemberAccess","referencedDeclaration":2757,"src":"9237:35:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3350,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9276:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9280:6:11","memberName":"sender","nodeType":"MemberAccess","src":"9276:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9237:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792063757272656e7420686f6c6465722063616e207472616e73666572","id":3353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9288:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_f168ff75ef98473fd7f73f4e6b907a8ef19a16fbaeb0e2dd57409db0a4eb8f90","typeString":"literal_string \"Only current holder can transfer\""},"value":"Only current holder can transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f168ff75ef98473fd7f73f4e6b907a8ef19a16fbaeb0e2dd57409db0a4eb8f90","typeString":"literal_string \"Only current holder can transfer\""}],"id":3345,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9229:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9229:94:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3355,"nodeType":"ExpressionStatement","src":"9229:94:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3357,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"9341:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":3359,"indexExpression":{"id":3358,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"9353:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9341:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":3360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9363:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2755,"src":"9341:28:11","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3361,"name":"DrugStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"9373:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DrugStatus_$2724_$","typeString":"type(enum MedChain.DrugStatus)"}},"id":3362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9384:15:11","memberName":"WithDistributor","nodeType":"MemberAccess","referencedDeclaration":2720,"src":"9373:26:11","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}},"src":"9341:58:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420626174636820737461747573","id":3364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9401:22:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9368739f0bed58f75f5701608bc790c30a1ae1e9a2ba52c189927bdcd22a10d3","typeString":"literal_string \"Invalid batch status\""},"value":"Invalid batch status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9368739f0bed58f75f5701608bc790c30a1ae1e9a2ba52c189927bdcd22a10d3","typeString":"literal_string \"Invalid batch status\""}],"id":3356,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9333:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9333:91:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3366,"nodeType":"ExpressionStatement","src":"9333:91:11"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":3368,"name":"hospitals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"9442:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Hospital_$2784_storage_$","typeString":"mapping(address => struct MedChain.Hospital storage ref)"}},"id":3370,"indexExpression":{"id":3369,"name":"_hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"9452:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9442:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_storage","typeString":"struct MedChain.Hospital storage ref"}},"id":3371,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9463:8:11","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2779,"src":"9442:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"486f73706974616c206973206e6f7420616374697665","id":3372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9473:24:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_08706de2733888bacad6eab0c6a0d9d43937f9fc53ad83b83b6b80c6bb51f51b","typeString":"literal_string \"Hospital is not active\""},"value":"Hospital is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_08706de2733888bacad6eab0c6a0d9d43937f9fc53ad83b83b6b80c6bb51f51b","typeString":"literal_string \"Hospital is not active\""}],"id":3367,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9434:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9434:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3374,"nodeType":"ExpressionStatement","src":"9434:64:11"},{"expression":{"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3375,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"9517:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":3377,"indexExpression":{"id":3376,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"9529:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9517:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":3378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9539:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2755,"src":"9517:28:11","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3379,"name":"DrugStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"9548:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DrugStatus_$2724_$","typeString":"type(enum MedChain.DrugStatus)"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9559:12:11","memberName":"WithHospital","nodeType":"MemberAccess","referencedDeclaration":2721,"src":"9548:23:11","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}},"src":"9517:54:11","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}},"id":3382,"nodeType":"ExpressionStatement","src":"9517:54:11"},{"expression":{"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3383,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"9581:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":3385,"indexExpression":{"id":3384,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"9593:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9581:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":3386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9603:13:11","memberName":"currentHolder","nodeType":"MemberAccess","referencedDeclaration":2757,"src":"9581:35:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3387,"name":"_hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"9619:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9581:47:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3389,"nodeType":"ExpressionStatement","src":"9581:47:11"},{"expression":{"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3390,"name":"hospitals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"9680:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Hospital_$2784_storage_$","typeString":"mapping(address => struct MedChain.Hospital storage ref)"}},"id":3392,"indexExpression":{"id":3391,"name":"_hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"9690:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9680:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_storage","typeString":"struct MedChain.Hospital storage ref"}},"id":3393,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9701:10:11","memberName":"stockCount","nodeType":"MemberAccess","referencedDeclaration":2775,"src":"9680:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":3394,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"9715:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":3396,"indexExpression":{"id":3395,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"9727:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9715:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":3397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9737:8:11","memberName":"quantity","nodeType":"MemberAccess","referencedDeclaration":2746,"src":"9715:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9680:65:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3399,"nodeType":"ExpressionStatement","src":"9680:65:11"},{"eventCall":{"arguments":[{"id":3401,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"9785:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3402,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9795:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9799:6:11","memberName":"sender","nodeType":"MemberAccess","src":"9795:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3404,"name":"_hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"9807:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3405,"name":"DrugStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"9818:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DrugStatus_$2724_$","typeString":"type(enum MedChain.DrugStatus)"}},"id":3406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9829:12:11","memberName":"WithHospital","nodeType":"MemberAccess","referencedDeclaration":2721,"src":"9818:23:11","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}],"id":3400,"name":"DrugTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"9769:15:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_enum$_DrugStatus_$2724_$returns$__$","typeString":"function (uint256,address,address,enum MedChain.DrugStatus)"}},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9769:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3408,"nodeType":"EmitStatement","src":"9764:78:11"}]},"functionSelector":"d5e42f79","id":3410,"implemented":true,"kind":"function","modifiers":[{"id":3332,"kind":"modifierInvocation","modifierName":{"id":3331,"name":"onlyDistributor","nameLocations":["9102:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":2979,"src":"9102:15:11"},"nodeType":"ModifierInvocation","src":"9102:15:11"},{"arguments":[{"id":3334,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"9129:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3335,"kind":"modifierInvocation","modifierName":{"id":3333,"name":"validBatch","nameLocations":["9118:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":3035,"src":"9118:10:11"},"nodeType":"ModifierInvocation","src":"9118:20:11"}],"name":"transferToHospital","nameLocation":"9015:18:11","nodeType":"FunctionDefinition","parameters":{"id":3330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3327,"mutability":"mutable","name":"_batchId","nameLocation":"9051:8:11","nodeType":"VariableDeclaration","scope":3410,"src":"9043:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3326,"name":"uint256","nodeType":"ElementaryTypeName","src":"9043:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3329,"mutability":"mutable","name":"_hospital","nameLocation":"9077:9:11","nodeType":"VariableDeclaration","scope":3410,"src":"9069:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3328,"name":"address","nodeType":"ElementaryTypeName","src":"9069:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9033:59:11"},"returnParameters":{"id":3336,"nodeType":"ParameterList","parameters":[],"src":"9139:0:11"},"scope":4496,"src":"9006:843:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3535,"nodeType":"Block","src":"10010:1148:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":3426,"name":"PATIENT_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"10036:12:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3427,"name":"_patient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"10050:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3425,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"10028:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10028:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070617469656e742061646472657373","id":3429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10061:25:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_33c473c2e2093856cbe26752e819a40ac1e4e430d9421ac16799c34433450e7a","typeString":"literal_string \"Invalid patient address\""},"value":"Invalid patient address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_33c473c2e2093856cbe26752e819a40ac1e4e430d9421ac16799c34433450e7a","typeString":"literal_string \"Invalid patient address\""}],"id":3424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10020:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3431,"nodeType":"ExpressionStatement","src":"10020:67:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3433,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"10105:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":3435,"indexExpression":{"id":3434,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"10117:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10105:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":3436,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10127:13:11","memberName":"currentHolder","nodeType":"MemberAccess","referencedDeclaration":2757,"src":"10105:35:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3437,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10144:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10148:6:11","memberName":"sender","nodeType":"MemberAccess","src":"10144:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10105:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792063757272656e7420686f6c6465722063616e2064697370656e7365","id":3440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10156:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e8db1c5649a53e76b4b8dbbf4953964363963002c6105d75f275a99c046b4d6e","typeString":"literal_string \"Only current holder can dispense\""},"value":"Only current holder can dispense"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e8db1c5649a53e76b4b8dbbf4953964363963002c6105d75f275a99c046b4d6e","typeString":"literal_string \"Only current holder can dispense\""}],"id":3432,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10097:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10097:94:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3442,"nodeType":"ExpressionStatement","src":"10097:94:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3444,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"10209:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":3446,"indexExpression":{"id":3445,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"10221:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10209:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":3447,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10231:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2755,"src":"10209:28:11","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3448,"name":"DrugStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"10241:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DrugStatus_$2724_$","typeString":"type(enum MedChain.DrugStatus)"}},"id":3449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10252:12:11","memberName":"WithHospital","nodeType":"MemberAccess","referencedDeclaration":2721,"src":"10241:23:11","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}},"src":"10209:55:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420626174636820737461747573","id":3451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10266:22:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9368739f0bed58f75f5701608bc790c30a1ae1e9a2ba52c189927bdcd22a10d3","typeString":"literal_string \"Invalid batch status\""},"value":"Invalid batch status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9368739f0bed58f75f5701608bc790c30a1ae1e9a2ba52c189927bdcd22a10d3","typeString":"literal_string \"Invalid batch status\""}],"id":3443,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10201:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10201:88:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3453,"nodeType":"ExpressionStatement","src":"10201:88:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3455,"name":"_quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"10307:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"baseExpression":{"id":3456,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"10320:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":3458,"indexExpression":{"id":3457,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"10332:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10320:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":3459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10342:8:11","memberName":"quantity","nodeType":"MemberAccess","referencedDeclaration":2746,"src":"10320:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10307:43:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207175616e74697479","id":3461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10352:23:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e345bef714a60f9cfa1afbafe49f94ff09bbe1b6cce40f685809de791548ebad","typeString":"literal_string \"Insufficient quantity\""},"value":"Insufficient quantity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e345bef714a60f9cfa1afbafe49f94ff09bbe1b6cce40f685809de791548ebad","typeString":"literal_string \"Insufficient quantity\""}],"id":3454,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10299:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10299:77:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3463,"nodeType":"ExpressionStatement","src":"10299:77:11"},{"expression":{"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3464,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"10395:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":3466,"indexExpression":{"id":3465,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"10407:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10395:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":3467,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10417:8:11","memberName":"quantity","nodeType":"MemberAccess","referencedDeclaration":2746,"src":"10395:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3468,"name":"_quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"10429:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10395:43:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3470,"nodeType":"ExpressionStatement","src":"10395:43:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3471,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"10461:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":3473,"indexExpression":{"id":3472,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"10473:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10461:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":3474,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10483:8:11","memberName":"quantity","nodeType":"MemberAccess","referencedDeclaration":2746,"src":"10461:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10495:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10461:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3486,"nodeType":"IfStatement","src":"10457:126:11","trueBody":{"id":3485,"nodeType":"Block","src":"10498:85:11","statements":[{"expression":{"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3477,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"10512:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":3479,"indexExpression":{"id":3478,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"10524:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10512:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":3480,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10534:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2755,"src":"10512:28:11","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3481,"name":"DrugStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"10543:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DrugStatus_$2724_$","typeString":"type(enum MedChain.DrugStatus)"}},"id":3482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10554:18:11","memberName":"DispensedToPatient","nodeType":"MemberAccess","referencedDeclaration":2722,"src":"10543:29:11","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}},"src":"10512:60:11","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}},"id":3484,"nodeType":"ExpressionStatement","src":"10512:60:11"}]}},{"expression":{"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3487,"name":"hospitals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"10634:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Hospital_$2784_storage_$","typeString":"mapping(address => struct MedChain.Hospital storage ref)"}},"id":3490,"indexExpression":{"expression":{"id":3488,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10644:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10648:6:11","memberName":"sender","nodeType":"MemberAccess","src":"10644:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10634:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_storage","typeString":"struct MedChain.Hospital storage ref"}},"id":3491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10656:10:11","memberName":"stockCount","nodeType":"MemberAccess","referencedDeclaration":2775,"src":"10634:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3492,"name":"_quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"10670:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10634:45:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3494,"nodeType":"ExpressionStatement","src":"10634:45:11"},{"expression":{"arguments":[{"id":3499,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"10770:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":3495,"name":"patientBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"10740:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":3497,"indexExpression":{"id":3496,"name":"_patient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"10755:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10740:24:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10765:4:11","memberName":"push","nodeType":"MemberAccess","src":"10740:29:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10740:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3501,"nodeType":"ExpressionStatement","src":"10740:39:11"},{"assignments":[3504],"declarations":[{"constant":false,"id":3504,"mutability":"mutable","name":"hospital","nameLocation":"10847:8:11","nodeType":"VariableDeclaration","scope":3535,"src":"10831:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_memory_ptr","typeString":"struct MedChain.Hospital"},"typeName":{"id":3503,"nodeType":"UserDefinedTypeName","pathNode":{"id":3502,"name":"Hospital","nameLocations":["10831:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2784,"src":"10831:8:11"},"referencedDeclaration":2784,"src":"10831:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_storage_ptr","typeString":"struct MedChain.Hospital"}},"visibility":"internal"}],"id":3509,"initialValue":{"baseExpression":{"id":3505,"name":"hospitals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"10858:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Hospital_$2784_storage_$","typeString":"mapping(address => struct MedChain.Hospital storage ref)"}},"id":3508,"indexExpression":{"expression":{"id":3506,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10868:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10872:6:11","memberName":"sender","nodeType":"MemberAccess","src":"10868:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10858:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_storage","typeString":"struct MedChain.Hospital storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10831:48:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3510,"name":"hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"10893:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_memory_ptr","typeString":"struct MedChain.Hospital memory"}},"id":3511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10902:10:11","memberName":"stockCount","nodeType":"MemberAccess","referencedDeclaration":2775,"src":"10893:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":3512,"name":"hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"10916:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_memory_ptr","typeString":"struct MedChain.Hospital memory"}},"id":3513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10925:14:11","memberName":"stockThreshold","nodeType":"MemberAccess","referencedDeclaration":2777,"src":"10916:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10893:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3525,"nodeType":"IfStatement","src":"10889:161:11","trueBody":{"id":3524,"nodeType":"Block","src":"10941:109:11","statements":[{"eventCall":{"arguments":[{"expression":{"id":3516,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10982:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10986:6:11","memberName":"sender","nodeType":"MemberAccess","src":"10982:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3518,"name":"hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"10994:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_memory_ptr","typeString":"struct MedChain.Hospital memory"}},"id":3519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11003:10:11","memberName":"stockCount","nodeType":"MemberAccess","referencedDeclaration":2775,"src":"10994:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3520,"name":"hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"11015:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_memory_ptr","typeString":"struct MedChain.Hospital memory"}},"id":3521,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11024:14:11","memberName":"stockThreshold","nodeType":"MemberAccess","referencedDeclaration":2777,"src":"11015:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3515,"name":"StockThresholdReached","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"10960:21:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10960:79:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3523,"nodeType":"EmitStatement","src":"10955:84:11"}]}},{"eventCall":{"arguments":[{"id":3527,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"11089:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3528,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11099:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11103:6:11","memberName":"sender","nodeType":"MemberAccess","src":"11099:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3530,"name":"_patient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"11111:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3531,"name":"DrugStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"11121:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DrugStatus_$2724_$","typeString":"type(enum MedChain.DrugStatus)"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11132:18:11","memberName":"DispensedToPatient","nodeType":"MemberAccess","referencedDeclaration":2722,"src":"11121:29:11","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}],"id":3526,"name":"DrugTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"11073:15:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_enum$_DrugStatus_$2724_$returns$__$","typeString":"function (uint256,address,address,enum MedChain.DrugStatus)"}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11073:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3534,"nodeType":"EmitStatement","src":"11068:83:11"}]},"functionSelector":"463e1f15","id":3536,"implemented":true,"kind":"function","modifiers":[{"id":3419,"kind":"modifierInvocation","modifierName":{"id":3418,"name":"onlyHospital","nameLocations":["9976:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2992,"src":"9976:12:11"},"nodeType":"ModifierInvocation","src":"9976:12:11"},{"arguments":[{"id":3421,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"10000:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3422,"kind":"modifierInvocation","modifierName":{"id":3420,"name":"validBatch","nameLocations":["9989:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":3035,"src":"9989:10:11"},"nodeType":"ModifierInvocation","src":"9989:20:11"}],"name":"dispenseToPatient","nameLocation":"9864:17:11","nodeType":"FunctionDefinition","parameters":{"id":3417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3412,"mutability":"mutable","name":"_batchId","nameLocation":"9899:8:11","nodeType":"VariableDeclaration","scope":3536,"src":"9891:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3411,"name":"uint256","nodeType":"ElementaryTypeName","src":"9891:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3414,"mutability":"mutable","name":"_patient","nameLocation":"9925:8:11","nodeType":"VariableDeclaration","scope":3536,"src":"9917:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3413,"name":"address","nodeType":"ElementaryTypeName","src":"9917:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3416,"mutability":"mutable","name":"_quantity","nameLocation":"9951:9:11","nodeType":"VariableDeclaration","scope":3536,"src":"9943:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3415,"name":"uint256","nodeType":"ElementaryTypeName","src":"9943:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9881:85:11"},"returnParameters":{"id":3423,"nodeType":"ParameterList","parameters":[],"src":"10010:0:11"},"scope":4496,"src":"9855:1303:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3565,"nodeType":"Block","src":"11355:120:11","statements":[{"assignments":[3552],"declarations":[{"constant":false,"id":3552,"mutability":"mutable","name":"root","nameLocation":"11373:4:11","nodeType":"VariableDeclaration","scope":3565,"src":"11365:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3551,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11365:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3557,"initialValue":{"expression":{"baseExpression":{"id":3553,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"11380:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":3555,"indexExpression":{"id":3554,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"11392:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11380:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":3556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11402:10:11","memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":2742,"src":"11380:32:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"11365:47:11"},{"expression":{"arguments":[{"id":3560,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"11448:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":3561,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"11456:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3562,"name":"_leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"11462:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3558,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"11429:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$1699_$","typeString":"type(library MerkleProof)"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11441:6:11","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":655,"src":"11429:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11429:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3550,"id":3564,"nodeType":"Return","src":"11422:46:11"}]},"functionSelector":"3316777e","id":3566,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3546,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"11330:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3547,"kind":"modifierInvocation","modifierName":{"id":3545,"name":"validBatch","nameLocations":["11319:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":3035,"src":"11319:10:11"},"nodeType":"ModifierInvocation","src":"11319:20:11"}],"name":"verifyDrug","nameLocation":"11208:10:11","nodeType":"FunctionDefinition","parameters":{"id":3544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3538,"mutability":"mutable","name":"_batchId","nameLocation":"11236:8:11","nodeType":"VariableDeclaration","scope":3566,"src":"11228:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3537,"name":"uint256","nodeType":"ElementaryTypeName","src":"11228:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3540,"mutability":"mutable","name":"_leaf","nameLocation":"11262:5:11","nodeType":"VariableDeclaration","scope":3566,"src":"11254:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11254:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3543,"mutability":"mutable","name":"_proof","nameLocation":"11294:6:11","nodeType":"VariableDeclaration","scope":3566,"src":"11277:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3541,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11277:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3542,"nodeType":"ArrayTypeName","src":"11277:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"11218:88:11"},"returnParameters":{"id":3550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3566,"src":"11349:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3548,"name":"bool","nodeType":"ElementaryTypeName","src":"11349:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11348:6:11"},"scope":4496,"src":"11199:276:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3598,"nodeType":"Block","src":"11636:149:11","statements":[{"assignments":[3582],"declarations":[{"constant":false,"id":3582,"mutability":"mutable","name":"isValid","nameLocation":"11651:7:11","nodeType":"VariableDeclaration","scope":3598,"src":"11646:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3581,"name":"bool","nodeType":"ElementaryTypeName","src":"11646:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3588,"initialValue":{"arguments":[{"id":3584,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"11672:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3585,"name":"_leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"11682:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3586,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"11689:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3583,"name":"verifyDrug","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"11661:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256,bytes32,bytes32[] memory) view returns (bool)"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11661:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"11646:50:11"},{"eventCall":{"arguments":[{"id":3590,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"11724:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3591,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11734:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11738:6:11","memberName":"sender","nodeType":"MemberAccess","src":"11734:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3593,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"11746:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3589,"name":"DrugVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"11711:12:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (uint256,address,bool)"}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11711:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3595,"nodeType":"EmitStatement","src":"11706:48:11"},{"expression":{"id":3596,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"11771:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3580,"id":3597,"nodeType":"Return","src":"11764:14:11"}]},"functionSelector":"2ff2ff0b","id":3599,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3576,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"11611:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3577,"kind":"modifierInvocation","modifierName":{"id":3575,"name":"validBatch","nameLocations":["11600:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":3035,"src":"11600:10:11"},"nodeType":"ModifierInvocation","src":"11600:20:11"}],"name":"verifyAndLog","nameLocation":"11490:12:11","nodeType":"FunctionDefinition","parameters":{"id":3574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3568,"mutability":"mutable","name":"_batchId","nameLocation":"11520:8:11","nodeType":"VariableDeclaration","scope":3599,"src":"11512:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3567,"name":"uint256","nodeType":"ElementaryTypeName","src":"11512:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3570,"mutability":"mutable","name":"_leaf","nameLocation":"11546:5:11","nodeType":"VariableDeclaration","scope":3599,"src":"11538:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11538:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3573,"mutability":"mutable","name":"_proof","nameLocation":"11578:6:11","nodeType":"VariableDeclaration","scope":3599,"src":"11561:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3571,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11561:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3572,"nodeType":"ArrayTypeName","src":"11561:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"11502:88:11"},"returnParameters":{"id":3580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3599,"src":"11630:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3578,"name":"bool","nodeType":"ElementaryTypeName","src":"11630:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11629:6:11"},"scope":4496,"src":"11481:304:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3682,"nodeType":"Block","src":"12074:825:11","statements":[{"expression":{"arguments":[{"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12092:30:11","subExpression":{"expression":{"baseExpression":{"id":3618,"name":"hospitals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"12093:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Hospital_$2784_storage_$","typeString":"mapping(address => struct MedChain.Hospital storage ref)"}},"id":3620,"indexExpression":{"id":3619,"name":"_hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"12103:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12093:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_storage","typeString":"struct MedChain.Hospital storage ref"}},"id":3621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12114:8:11","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2779,"src":"12093:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"486f73706974616c20616c72656164792072656769737465726564","id":3623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12124:29:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ca2c9f748bf64104675e54fde76314103e296bdbb7c79faf0df7a7f894e935b7","typeString":"literal_string \"Hospital already registered\""},"value":"Hospital already registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ca2c9f748bf64104675e54fde76314103e296bdbb7c79faf0df7a7f894e935b7","typeString":"literal_string \"Hospital already registered\""}],"id":3617,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12084:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12084:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3625,"nodeType":"ExpressionStatement","src":"12084:70:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3629,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"12178:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12172:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3627,"name":"bytes","nodeType":"ElementaryTypeName","src":"12172:5:11","typeDescriptions":{}}},"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12172:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12185:6:11","memberName":"length","nodeType":"MemberAccess","src":"12172:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12194:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12172:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"486f73706974616c206e616d652063616e6e6f7420626520656d707479","id":3634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12197:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_80ce83922f93081ab76c4a0ec289260affbea134a911d3f03b124541d701d013","typeString":"literal_string \"Hospital name cannot be empty\""},"value":"Hospital name cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_80ce83922f93081ab76c4a0ec289260affbea134a911d3f03b124541d701d013","typeString":"literal_string \"Hospital name cannot be empty\""}],"id":3626,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12164:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12164:65:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3636,"nodeType":"ExpressionStatement","src":"12164:65:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3640,"name":"_registrationNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"12253:19:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12247:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3638,"name":"bytes","nodeType":"ElementaryTypeName","src":"12247:5:11","typeDescriptions":{}}},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12247:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12274:6:11","memberName":"length","nodeType":"MemberAccess","src":"12247:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12283:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12247:37:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526567697374726174696f6e206e756d626572207265717569726564","id":3645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12286:30:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3ff66765d4fed2f5e2e71075d28ada0171e8463b1118b299f24b5dfcb01ac3b","typeString":"literal_string \"Registration number required\""},"value":"Registration number required"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3ff66765d4fed2f5e2e71075d28ada0171e8463b1118b299f24b5dfcb01ac3b","typeString":"literal_string \"Registration number required\""}],"id":3637,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12239:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12239:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3647,"nodeType":"ExpressionStatement","src":"12239:78:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3649,"name":"_capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"12335:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12347:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12335:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"486f73706974616c206361706163697479206d75737420626520706f736974697665","id":3652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12350:36:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_bcaf0cfab31e34e58603dc8ee8d6e235d07b504c3f38a9677178953c51e22996","typeString":"literal_string \"Hospital capacity must be positive\""},"value":"Hospital capacity must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bcaf0cfab31e34e58603dc8ee8d6e235d07b504c3f38a9677178953c51e22996","typeString":"literal_string \"Hospital capacity must be positive\""}],"id":3648,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12327:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12327:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3654,"nodeType":"ExpressionStatement","src":"12327:60:11"},{"expression":{"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3655,"name":"hospitals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"12406:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Hospital_$2784_storage_$","typeString":"mapping(address => struct MedChain.Hospital storage ref)"}},"id":3657,"indexExpression":{"id":3656,"name":"_hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"12416:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12406:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_storage","typeString":"struct MedChain.Hospital storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3659,"name":"_hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"12469:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3660,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"12498:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3661,"name":"_registrationNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"12537:19:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3662,"name":"_hospitalType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"12584:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_HospitalType_$2727","typeString":"enum MedChain.HospitalType"}},{"hexValue":"30","id":3663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12623:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3664,"name":"_stockThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"12654:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":3665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12693:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"74727565","id":3666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12723:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3667,"name":"_capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"12751:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_enum$_HospitalType_$2727","typeString":"enum MedChain.HospitalType"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3658,"name":"Hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"12429:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Hospital_$2784_storage_ptr_$","typeString":"type(struct MedChain.Hospital storage pointer)"}},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12452:15:11","12492:4:11","12517:18:11","12570:12:11","12611:10:11","12638:14:11","12683:8:11","12711:10:11","12741:8:11"],"names":["hospitalAddress","name","registrationNumber","hospitalType","stockCount","stockThreshold","isActive","isVerified","capacity"],"nodeType":"FunctionCall","src":"12429:342:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_memory_ptr","typeString":"struct MedChain.Hospital memory"}},"src":"12406:365:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_storage","typeString":"struct MedChain.Hospital storage ref"}},"id":3670,"nodeType":"ExpressionStatement","src":"12406:365:11"},{"expression":{"arguments":[{"id":3672,"name":"HOSPITAL_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"12801:13:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3673,"name":"_hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"12816:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3671,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"12790:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12790:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3675,"nodeType":"ExpressionStatement","src":"12790:36:11"},{"eventCall":{"arguments":[{"id":3677,"name":"_hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"12860:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3678,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"12871:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3679,"name":"_hospitalType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"12878:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_HospitalType_$2727","typeString":"enum MedChain.HospitalType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_enum$_HospitalType_$2727","typeString":"enum MedChain.HospitalType"}],"id":3676,"name":"HospitalRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"12841:18:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_enum$_HospitalType_$2727_$returns$__$","typeString":"function (address,string memory,enum MedChain.HospitalType)"}},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12841:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3681,"nodeType":"EmitStatement","src":"12836:56:11"}]},"functionSelector":"b6e202d7","id":3683,"implemented":true,"kind":"function","modifiers":[{"id":3615,"kind":"modifierInvocation","modifierName":{"id":3614,"name":"onlyAdmin","nameLocations":["12064:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":3018,"src":"12064:9:11"},"nodeType":"ModifierInvocation","src":"12064:9:11"}],"name":"registerHospital","nameLocation":"11837:16:11","nodeType":"FunctionDefinition","parameters":{"id":3613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3601,"mutability":"mutable","name":"_hospital","nameLocation":"11871:9:11","nodeType":"VariableDeclaration","scope":3683,"src":"11863:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3600,"name":"address","nodeType":"ElementaryTypeName","src":"11863:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3603,"mutability":"mutable","name":"_name","nameLocation":"11904:5:11","nodeType":"VariableDeclaration","scope":3683,"src":"11890:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3602,"name":"string","nodeType":"ElementaryTypeName","src":"11890:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3605,"mutability":"mutable","name":"_registrationNumber","nameLocation":"11933:19:11","nodeType":"VariableDeclaration","scope":3683,"src":"11919:33:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3604,"name":"string","nodeType":"ElementaryTypeName","src":"11919:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3608,"mutability":"mutable","name":"_hospitalType","nameLocation":"11975:13:11","nodeType":"VariableDeclaration","scope":3683,"src":"11962:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_HospitalType_$2727","typeString":"enum MedChain.HospitalType"},"typeName":{"id":3607,"nodeType":"UserDefinedTypeName","pathNode":{"id":3606,"name":"HospitalType","nameLocations":["11962:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2727,"src":"11962:12:11"},"referencedDeclaration":2727,"src":"11962:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_HospitalType_$2727","typeString":"enum MedChain.HospitalType"}},"visibility":"internal"},{"constant":false,"id":3610,"mutability":"mutable","name":"_stockThreshold","nameLocation":"12006:15:11","nodeType":"VariableDeclaration","scope":3683,"src":"11998:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3609,"name":"uint256","nodeType":"ElementaryTypeName","src":"11998:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3612,"mutability":"mutable","name":"_capacity","nameLocation":"12039:9:11","nodeType":"VariableDeclaration","scope":3683,"src":"12031:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3611,"name":"uint256","nodeType":"ElementaryTypeName","src":"12031:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11853:201:11"},"returnParameters":{"id":3616,"nodeType":"ParameterList","parameters":[],"src":"12074:0:11"},"scope":4496,"src":"11828:1071:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3820,"nodeType":"Block","src":"13154:1409:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":3702,"name":"DISTRIBUTOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"13180:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3703,"name":"_distributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"13198:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3701,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"13172:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13172:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206469737472696275746f722061646472657373","id":3705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13213:29:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ec51d2cb71827eee9a428393c2723a61ba1997bdd4cc809fffef30397f9e96c","typeString":"literal_string \"Invalid distributor address\""},"value":"Invalid distributor address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ec51d2cb71827eee9a428393c2723a61ba1997bdd4cc809fffef30397f9e96c","typeString":"literal_string \"Invalid distributor address\""}],"id":3700,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13164:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13164:79:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3707,"nodeType":"ExpressionStatement","src":"13164:79:11"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":3709,"name":"hospitals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"13261:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Hospital_$2784_storage_$","typeString":"mapping(address => struct MedChain.Hospital storage ref)"}},"id":3712,"indexExpression":{"expression":{"id":3710,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13271:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13275:6:11","memberName":"sender","nodeType":"MemberAccess","src":"13271:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13261:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_storage","typeString":"struct MedChain.Hospital storage ref"}},"id":3713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13283:8:11","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2779,"src":"13261:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"486f73706974616c206973206e6f7420616374697665","id":3714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13293:24:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_08706de2733888bacad6eab0c6a0d9d43937f9fc53ad83b83b6b80c6bb51f51b","typeString":"literal_string \"Hospital is not active\""},"value":"Hospital is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_08706de2733888bacad6eab0c6a0d9d43937f9fc53ad83b83b6b80c6bb51f51b","typeString":"literal_string \"Hospital is not active\""}],"id":3708,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13253:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13253:65:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3716,"nodeType":"ExpressionStatement","src":"13253:65:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3718,"name":"_quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"13336:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13348:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13336:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175616e74697479206d7573742062652067726561746572207468616e2030","id":3721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13351:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_0256b2f79971b33d79a70471e25342b40a29973a9924f7bf65b61d253cc5e2ad","typeString":"literal_string \"Quantity must be greater than 0\""},"value":"Quantity must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0256b2f79971b33d79a70471e25342b40a29973a9924f7bf65b61d253cc5e2ad","typeString":"literal_string \"Quantity must be greater than 0\""}],"id":3717,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13328:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13328:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3723,"nodeType":"ExpressionStatement","src":"13328:57:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3727,"name":"_reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"13409:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13403:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3725,"name":"bytes","nodeType":"ElementaryTypeName","src":"13403:5:11","typeDescriptions":{}}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13403:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13418:6:11","memberName":"length","nodeType":"MemberAccess","src":"13403:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13427:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13403:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526561736f6e2063616e6e6f7420626520656d707479","id":3732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13430:24:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_aaf4c4c54f68e536cc5669f043e4d9b9cbcccb230cd0fead10b38b11a5809707","typeString":"literal_string \"Reason cannot be empty\""},"value":"Reason cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aaf4c4c54f68e536cc5669f043e4d9b9cbcccb230cd0fead10b38b11a5809707","typeString":"literal_string \"Reason cannot be empty\""}],"id":3724,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13395:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13395:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3734,"nodeType":"ExpressionStatement","src":"13395:60:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3738,"name":"_urgencyLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"13479:13:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13473:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3736,"name":"bytes","nodeType":"ElementaryTypeName","src":"13473:5:11","typeDescriptions":{}}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13473:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13494:6:11","memberName":"length","nodeType":"MemberAccess","src":"13473:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13503:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13473:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"557267656e6379206c6576656c207265717569726564","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13506:24:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_34cb078aa5633d050776477ee0383e3098a065fc02b70b8b27773c07432b9cc7","typeString":"literal_string \"Urgency level required\""},"value":"Urgency level required"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_34cb078aa5633d050776477ee0383e3098a065fc02b70b8b27773c07432b9cc7","typeString":"literal_string \"Urgency level required\""}],"id":3735,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13465:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13465:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3745,"nodeType":"ExpressionStatement","src":"13465:66:11"},{"assignments":[3747],"declarations":[{"constant":false,"id":3747,"mutability":"mutable","name":"requestId","nameLocation":"13558:9:11","nodeType":"VariableDeclaration","scope":3820,"src":"13550:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3746,"name":"uint256","nodeType":"ElementaryTypeName","src":"13550:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3750,"initialValue":{"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13570:15:11","subExpression":{"id":3748,"name":"nextRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"13570:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13550:35:11"},{"assignments":[3753],"declarations":[{"constant":false,"id":3753,"mutability":"mutable","name":"hospital","nameLocation":"13665:8:11","nodeType":"VariableDeclaration","scope":3820,"src":"13649:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_memory_ptr","typeString":"struct MedChain.Hospital"},"typeName":{"id":3752,"nodeType":"UserDefinedTypeName","pathNode":{"id":3751,"name":"Hospital","nameLocations":["13649:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2784,"src":"13649:8:11"},"referencedDeclaration":2784,"src":"13649:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_storage_ptr","typeString":"struct MedChain.Hospital"}},"visibility":"internal"}],"id":3758,"initialValue":{"baseExpression":{"id":3754,"name":"hospitals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"13676:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Hospital_$2784_storage_$","typeString":"mapping(address => struct MedChain.Hospital storage ref)"}},"id":3757,"indexExpression":{"expression":{"id":3755,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13686:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13690:6:11","memberName":"sender","nodeType":"MemberAccess","src":"13686:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13676:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_storage","typeString":"struct MedChain.Hospital storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13649:48:11"},{"assignments":[3760],"declarations":[{"constant":false,"id":3760,"mutability":"mutable","name":"priorityScore","nameLocation":"13715:13:11","nodeType":"VariableDeclaration","scope":3820,"src":"13707:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3759,"name":"uint256","nodeType":"ElementaryTypeName","src":"13707:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3761,"nodeType":"VariableDeclarationStatement","src":"13707:21:11"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_HospitalType_$2727","typeString":"enum MedChain.HospitalType"},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3762,"name":"hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"13742:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_memory_ptr","typeString":"struct MedChain.Hospital memory"}},"id":3763,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13751:12:11","memberName":"hospitalType","nodeType":"MemberAccess","referencedDeclaration":2773,"src":"13742:21:11","typeDescriptions":{"typeIdentifier":"t_enum$_HospitalType_$2727","typeString":"enum MedChain.HospitalType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3764,"name":"HospitalType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"13767:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_HospitalType_$2727_$","typeString":"type(enum MedChain.HospitalType)"}},"id":3765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13780:5:11","memberName":"Rural","nodeType":"MemberAccess","referencedDeclaration":2726,"src":"13767:18:11","typeDescriptions":{"typeIdentifier":"t_enum$_HospitalType_$2727","typeString":"enum MedChain.HospitalType"}},"src":"13742:43:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3780,"nodeType":"Block","src":"13885:64:11","statements":[{"expression":{"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3775,"name":"priorityScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"13899:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3776,"name":"hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"13915:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_memory_ptr","typeString":"struct MedChain.Hospital memory"}},"id":3777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13924:14:11","memberName":"stockThreshold","nodeType":"MemberAccess","referencedDeclaration":2777,"src":"13915:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13899:39:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3779,"nodeType":"ExpressionStatement","src":"13899:39:11"}]},"id":3781,"nodeType":"IfStatement","src":"13738:211:11","trueBody":{"id":3774,"nodeType":"Block","src":"13787:92:11","statements":[{"expression":{"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3767,"name":"priorityScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"13801:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3768,"name":"hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"13817:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_memory_ptr","typeString":"struct MedChain.Hospital memory"}},"id":3769,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13826:14:11","memberName":"stockThreshold","nodeType":"MemberAccess","referencedDeclaration":2777,"src":"13817:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3770,"name":"RURAL_PRIORITY_MULTIPLIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"13843:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13817:51:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13801:67:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3773,"nodeType":"ExpressionStatement","src":"13801:67:11"}]}},{"expression":{"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3782,"name":"drugRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"13967:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugRequest_$2806_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugRequest storage ref)"}},"id":3784,"indexExpression":{"id":3783,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"13980:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13967:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugRequest_$2806_storage","typeString":"struct MedChain.DrugRequest storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3786,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"14030:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3787,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14063:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14067:6:11","memberName":"sender","nodeType":"MemberAccess","src":"14063:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3789,"name":"_distributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"14100:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3790,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"14135:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3791,"name":"_quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"14167:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3792,"name":"RequestStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"14198:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RequestStatus_$2732_$","typeString":"type(enum MedChain.RequestStatus)"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14212:7:11","memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":2728,"src":"14198:21:11","typeDescriptions":{"typeIdentifier":"t_enum$_RequestStatus_$2732","typeString":"enum MedChain.RequestStatus"}},{"expression":{"id":3794,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14244:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14250:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"14244:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3796,"name":"priorityScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"14288:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3797,"name":"_reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"14323:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3798,"name":"_urgencyLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"14358:13:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RequestStatus_$2732","typeString":"enum MedChain.RequestStatus"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3785,"name":"DrugRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"13993:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_DrugRequest_$2806_storage_ptr_$","typeString":"type(struct MedChain.DrugRequest storage pointer)"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["14019:9:11","14053:8:11","14087:11:11","14126:7:11","14157:8:11","14190:6:11","14233:9:11","14273:13:11","14315:6:11","14344:12:11"],"names":["requestId","hospital","distributor","batchId","quantity","status","timestamp","priorityScore","reason","urgencyLevel"],"nodeType":"FunctionCall","src":"13993:389:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DrugRequest_$2806_memory_ptr","typeString":"struct MedChain.DrugRequest memory"}},"src":"13967:415:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugRequest_$2806_storage","typeString":"struct MedChain.DrugRequest storage ref"}},"id":3801,"nodeType":"ExpressionStatement","src":"13967:415:11"},{"expression":{"arguments":[{"id":3807,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"14435:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":3802,"name":"hospitalRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"14401:16:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":3805,"indexExpression":{"expression":{"id":3803,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14418:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14422:6:11","memberName":"sender","nodeType":"MemberAccess","src":"14418:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14401:28:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14430:4:11","memberName":"push","nodeType":"MemberAccess","src":"14401:33:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14401:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3809,"nodeType":"ExpressionStatement","src":"14401:44:11"},{"eventCall":{"arguments":[{"id":3811,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"14483:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3812,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14494:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14498:6:11","memberName":"sender","nodeType":"MemberAccess","src":"14494:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3814,"name":"_distributor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"14506:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3815,"name":"_quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"14520:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3810,"name":"DrugRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"14469:13:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,uint256)"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14469:61:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3817,"nodeType":"EmitStatement","src":"14464:66:11"},{"expression":{"id":3818,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"14547:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3699,"id":3819,"nodeType":"Return","src":"14540:16:11"}]},"functionSelector":"e19d6fd0","id":3821,"implemented":true,"kind":"function","modifiers":[{"id":3696,"kind":"modifierInvocation","modifierName":{"id":3695,"name":"onlyHospital","nameLocations":["13123:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2992,"src":"13123:12:11"},"nodeType":"ModifierInvocation","src":"13123:12:11"}],"name":"requestDrugs","nameLocation":"12944:12:11","nodeType":"FunctionDefinition","parameters":{"id":3694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3685,"mutability":"mutable","name":"_distributor","nameLocation":"12974:12:11","nodeType":"VariableDeclaration","scope":3821,"src":"12966:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3684,"name":"address","nodeType":"ElementaryTypeName","src":"12966:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3687,"mutability":"mutable","name":"_batchId","nameLocation":"13004:8:11","nodeType":"VariableDeclaration","scope":3821,"src":"12996:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3686,"name":"uint256","nodeType":"ElementaryTypeName","src":"12996:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3689,"mutability":"mutable","name":"_quantity","nameLocation":"13030:9:11","nodeType":"VariableDeclaration","scope":3821,"src":"13022:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3688,"name":"uint256","nodeType":"ElementaryTypeName","src":"13022:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3691,"mutability":"mutable","name":"_reason","nameLocation":"13063:7:11","nodeType":"VariableDeclaration","scope":3821,"src":"13049:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3690,"name":"string","nodeType":"ElementaryTypeName","src":"13049:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3693,"mutability":"mutable","name":"_urgencyLevel","nameLocation":"13094:13:11","nodeType":"VariableDeclaration","scope":3821,"src":"13080:27:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3692,"name":"string","nodeType":"ElementaryTypeName","src":"13080:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12956:157:11"},"returnParameters":{"id":3699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3821,"src":"13145:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3697,"name":"uint256","nodeType":"ElementaryTypeName","src":"13145:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13144:9:11"},"scope":4496,"src":"12935:1628:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3869,"nodeType":"Block","src":"14638:381:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3829,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"14656:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14669:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14656:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3832,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"14674:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3833,"name":"nextRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"14687:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14674:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14656:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642072657175657374204944","id":3836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14702:20:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_fe5b51659b77963fefd5a885289e5d9edfecd23ba844cc064e0fb0d9e0b7fe82","typeString":"literal_string \"Invalid request ID\""},"value":"Invalid request ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fe5b51659b77963fefd5a885289e5d9edfecd23ba844cc064e0fb0d9e0b7fe82","typeString":"literal_string \"Invalid request ID\""}],"id":3828,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14648:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14648:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3838,"nodeType":"ExpressionStatement","src":"14648:75:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3840,"name":"drugRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"14741:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugRequest_$2806_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugRequest storage ref)"}},"id":3842,"indexExpression":{"id":3841,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"14754:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14741:24:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugRequest_$2806_storage","typeString":"struct MedChain.DrugRequest storage ref"}},"id":3843,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14766:11:11","memberName":"distributor","nodeType":"MemberAccess","referencedDeclaration":2790,"src":"14741:36:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3844,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14781:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14785:6:11","memberName":"sender","nodeType":"MemberAccess","src":"14781:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14741:50:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792061737369676e6564206469737472696275746f722063616e20617070726f7665","id":3847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14793:39:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_83ce5253175e291f0402ace7e1938d7898b79debc91d700f7616f70261adcc4d","typeString":"literal_string \"Only assigned distributor can approve\""},"value":"Only assigned distributor can approve"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_83ce5253175e291f0402ace7e1938d7898b79debc91d700f7616f70261adcc4d","typeString":"literal_string \"Only assigned distributor can approve\""}],"id":3839,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14733:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14733:100:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3849,"nodeType":"ExpressionStatement","src":"14733:100:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_RequestStatus_$2732","typeString":"enum MedChain.RequestStatus"},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3851,"name":"drugRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"14851:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugRequest_$2806_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugRequest storage ref)"}},"id":3853,"indexExpression":{"id":3852,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"14864:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14851:24:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugRequest_$2806_storage","typeString":"struct MedChain.DrugRequest storage ref"}},"id":3854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14876:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2797,"src":"14851:31:11","typeDescriptions":{"typeIdentifier":"t_enum$_RequestStatus_$2732","typeString":"enum MedChain.RequestStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3855,"name":"RequestStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"14886:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RequestStatus_$2732_$","typeString":"type(enum MedChain.RequestStatus)"}},"id":3856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14900:7:11","memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":2728,"src":"14886:21:11","typeDescriptions":{"typeIdentifier":"t_enum$_RequestStatus_$2732","typeString":"enum MedChain.RequestStatus"}},"src":"14851:56:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265717565737420616c72656164792070726f636573736564","id":3858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14909:27:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_535f5f32107992b7b77fb6e593b8613bbafe3a6b338595ec1976a624e8d8f6b4","typeString":"literal_string \"Request already processed\""},"value":"Request already processed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_535f5f32107992b7b77fb6e593b8613bbafe3a6b338595ec1976a624e8d8f6b4","typeString":"literal_string \"Request already processed\""}],"id":3850,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14843:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14843:94:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3860,"nodeType":"ExpressionStatement","src":"14843:94:11"},{"expression":{"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3861,"name":"drugRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"14956:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugRequest_$2806_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugRequest storage ref)"}},"id":3863,"indexExpression":{"id":3862,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"14969:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14956:24:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugRequest_$2806_storage","typeString":"struct MedChain.DrugRequest storage ref"}},"id":3864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14981:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2797,"src":"14956:31:11","typeDescriptions":{"typeIdentifier":"t_enum$_RequestStatus_$2732","typeString":"enum MedChain.RequestStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3865,"name":"RequestStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"14990:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RequestStatus_$2732_$","typeString":"type(enum MedChain.RequestStatus)"}},"id":3866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15004:8:11","memberName":"Approved","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"14990:22:11","typeDescriptions":{"typeIdentifier":"t_enum$_RequestStatus_$2732","typeString":"enum MedChain.RequestStatus"}},"src":"14956:56:11","typeDescriptions":{"typeIdentifier":"t_enum$_RequestStatus_$2732","typeString":"enum MedChain.RequestStatus"}},"id":3868,"nodeType":"ExpressionStatement","src":"14956:56:11"}]},"functionSelector":"d7d1bbdb","id":3870,"implemented":true,"kind":"function","modifiers":[{"id":3826,"kind":"modifierInvocation","modifierName":{"id":3825,"name":"onlyDistributor","nameLocations":["14622:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":2979,"src":"14622:15:11"},"nodeType":"ModifierInvocation","src":"14622:15:11"}],"name":"approveRequest","nameLocation":"14578:14:11","nodeType":"FunctionDefinition","parameters":{"id":3824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3823,"mutability":"mutable","name":"_requestId","nameLocation":"14601:10:11","nodeType":"VariableDeclaration","scope":3870,"src":"14593:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3822,"name":"uint256","nodeType":"ElementaryTypeName","src":"14593:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14592:20:11"},"returnParameters":{"id":3827,"nodeType":"ParameterList","parameters":[],"src":"14638:0:11"},"scope":4496,"src":"14569:450:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3918,"nodeType":"Block","src":"15093:380:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3878,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"15111:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15124:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15111:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3881,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"15129:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3882,"name":"nextRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"15142:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15129:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15111:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642072657175657374204944","id":3885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15157:20:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_fe5b51659b77963fefd5a885289e5d9edfecd23ba844cc064e0fb0d9e0b7fe82","typeString":"literal_string \"Invalid request ID\""},"value":"Invalid request ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fe5b51659b77963fefd5a885289e5d9edfecd23ba844cc064e0fb0d9e0b7fe82","typeString":"literal_string \"Invalid request ID\""}],"id":3877,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15103:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15103:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3887,"nodeType":"ExpressionStatement","src":"15103:75:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3889,"name":"drugRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"15196:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugRequest_$2806_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugRequest storage ref)"}},"id":3891,"indexExpression":{"id":3890,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"15209:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15196:24:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugRequest_$2806_storage","typeString":"struct MedChain.DrugRequest storage ref"}},"id":3892,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15221:11:11","memberName":"distributor","nodeType":"MemberAccess","referencedDeclaration":2790,"src":"15196:36:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3893,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15236:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15240:6:11","memberName":"sender","nodeType":"MemberAccess","src":"15236:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15196:50:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792061737369676e6564206469737472696275746f722063616e2072656a656374","id":3896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15248:38:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_11bedb07f4c1bd15661695954ebbe5809bbf0cfafbee390f8158c991161601c7","typeString":"literal_string \"Only assigned distributor can reject\""},"value":"Only assigned distributor can reject"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_11bedb07f4c1bd15661695954ebbe5809bbf0cfafbee390f8158c991161601c7","typeString":"literal_string \"Only assigned distributor can reject\""}],"id":3888,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15188:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15188:99:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3898,"nodeType":"ExpressionStatement","src":"15188:99:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_RequestStatus_$2732","typeString":"enum MedChain.RequestStatus"},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3900,"name":"drugRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"15305:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugRequest_$2806_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugRequest storage ref)"}},"id":3902,"indexExpression":{"id":3901,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"15318:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15305:24:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugRequest_$2806_storage","typeString":"struct MedChain.DrugRequest storage ref"}},"id":3903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15330:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2797,"src":"15305:31:11","typeDescriptions":{"typeIdentifier":"t_enum$_RequestStatus_$2732","typeString":"enum MedChain.RequestStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3904,"name":"RequestStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"15340:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RequestStatus_$2732_$","typeString":"type(enum MedChain.RequestStatus)"}},"id":3905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15354:7:11","memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":2728,"src":"15340:21:11","typeDescriptions":{"typeIdentifier":"t_enum$_RequestStatus_$2732","typeString":"enum MedChain.RequestStatus"}},"src":"15305:56:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265717565737420616c72656164792070726f636573736564","id":3907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15363:27:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_535f5f32107992b7b77fb6e593b8613bbafe3a6b338595ec1976a624e8d8f6b4","typeString":"literal_string \"Request already processed\""},"value":"Request already processed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_535f5f32107992b7b77fb6e593b8613bbafe3a6b338595ec1976a624e8d8f6b4","typeString":"literal_string \"Request already processed\""}],"id":3899,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15297:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15297:94:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3909,"nodeType":"ExpressionStatement","src":"15297:94:11"},{"expression":{"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3910,"name":"drugRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"15410:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugRequest_$2806_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugRequest storage ref)"}},"id":3912,"indexExpression":{"id":3911,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"15423:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15410:24:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugRequest_$2806_storage","typeString":"struct MedChain.DrugRequest storage ref"}},"id":3913,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15435:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2797,"src":"15410:31:11","typeDescriptions":{"typeIdentifier":"t_enum$_RequestStatus_$2732","typeString":"enum MedChain.RequestStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3914,"name":"RequestStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"15444:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RequestStatus_$2732_$","typeString":"type(enum MedChain.RequestStatus)"}},"id":3915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15458:8:11","memberName":"Rejected","nodeType":"MemberAccess","referencedDeclaration":2730,"src":"15444:22:11","typeDescriptions":{"typeIdentifier":"t_enum$_RequestStatus_$2732","typeString":"enum MedChain.RequestStatus"}},"src":"15410:56:11","typeDescriptions":{"typeIdentifier":"t_enum$_RequestStatus_$2732","typeString":"enum MedChain.RequestStatus"}},"id":3917,"nodeType":"ExpressionStatement","src":"15410:56:11"}]},"functionSelector":"2d7788db","id":3919,"implemented":true,"kind":"function","modifiers":[{"id":3875,"kind":"modifierInvocation","modifierName":{"id":3874,"name":"onlyDistributor","nameLocations":["15077:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":2979,"src":"15077:15:11"},"nodeType":"ModifierInvocation","src":"15077:15:11"}],"name":"rejectRequest","nameLocation":"15034:13:11","nodeType":"FunctionDefinition","parameters":{"id":3873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3872,"mutability":"mutable","name":"_requestId","nameLocation":"15056:10:11","nodeType":"VariableDeclaration","scope":3919,"src":"15048:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3871,"name":"uint256","nodeType":"ElementaryTypeName","src":"15048:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15047:20:11"},"returnParameters":{"id":3876,"nodeType":"ParameterList","parameters":[],"src":"15093:0:11"},"scope":4496,"src":"15025:448:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3932,"nodeType":"Block","src":"15581:51:11","statements":[{"expression":{"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3926,"name":"whoApprovedDrugs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"15591:16:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":3928,"indexExpression":{"id":3927,"name":"_drugHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"15608:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15591:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15621:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"15591:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3931,"nodeType":"ExpressionStatement","src":"15591:34:11"}]},"functionSelector":"20749068","id":3933,"implemented":true,"kind":"function","modifiers":[{"id":3924,"kind":"modifierInvocation","modifierName":{"id":3923,"name":"onlyAdmin","nameLocations":["15571:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":3018,"src":"15571:9:11"},"nodeType":"ModifierInvocation","src":"15571:9:11"}],"name":"addWHOApprovedDrug","nameLocation":"15524:18:11","nodeType":"FunctionDefinition","parameters":{"id":3922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3921,"mutability":"mutable","name":"_drugHash","nameLocation":"15551:9:11","nodeType":"VariableDeclaration","scope":3933,"src":"15543:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3920,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15543:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15542:19:11"},"returnParameters":{"id":3925,"nodeType":"ParameterList","parameters":[],"src":"15581:0:11"},"scope":4496,"src":"15515:117:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3946,"nodeType":"Block","src":"15707:52:11","statements":[{"expression":{"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3940,"name":"whoApprovedDrugs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"15717:16:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":3942,"indexExpression":{"id":3941,"name":"_drugHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"15734:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15717:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15747:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"15717:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3945,"nodeType":"ExpressionStatement","src":"15717:35:11"}]},"functionSelector":"99be8c82","id":3947,"implemented":true,"kind":"function","modifiers":[{"id":3938,"kind":"modifierInvocation","modifierName":{"id":3937,"name":"onlyAdmin","nameLocations":["15697:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":3018,"src":"15697:9:11"},"nodeType":"ModifierInvocation","src":"15697:9:11"}],"name":"removeWHOApprovedDrug","nameLocation":"15647:21:11","nodeType":"FunctionDefinition","parameters":{"id":3936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3935,"mutability":"mutable","name":"_drugHash","nameLocation":"15677:9:11","nodeType":"VariableDeclaration","scope":3947,"src":"15669:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3934,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15669:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15668:19:11"},"returnParameters":{"id":3939,"nodeType":"ParameterList","parameters":[],"src":"15707:0:11"},"scope":4496,"src":"15638:121:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3958,"nodeType":"Block","src":"15836:51:11","statements":[{"expression":{"baseExpression":{"id":3954,"name":"whoApprovedDrugs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"15853:16:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":3956,"indexExpression":{"id":3955,"name":"_drugHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"15870:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15853:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3953,"id":3957,"nodeType":"Return","src":"15846:34:11"}]},"functionSelector":"fdbf6ee5","id":3959,"implemented":true,"kind":"function","modifiers":[],"name":"isWHOApproved","nameLocation":"15774:13:11","nodeType":"FunctionDefinition","parameters":{"id":3950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3949,"mutability":"mutable","name":"_drugHash","nameLocation":"15796:9:11","nodeType":"VariableDeclaration","scope":3959,"src":"15788:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15788:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15787:19:11"},"returnParameters":{"id":3953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3959,"src":"15830:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3951,"name":"bool","nodeType":"ElementaryTypeName","src":"15830:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15829:6:11"},"scope":4496,"src":"15765:122:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4032,"nodeType":"Block","src":"16094:735:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3974,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"16112:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":3976,"indexExpression":{"id":3975,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"16124:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16112:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":3977,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16134:13:11","memberName":"currentHolder","nodeType":"MemberAccess","referencedDeclaration":2757,"src":"16112:35:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3978,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16151:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16155:6:11","memberName":"sender","nodeType":"MemberAccess","src":"16151:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16112:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792063757272656e7420686f6c6465722063616e207265706f7274","id":3981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16163:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d515f64218358f9f5ae54e9888baa516abfd82943c3260595060879877834188","typeString":"literal_string \"Only current holder can report\""},"value":"Only current holder can report"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d515f64218358f9f5ae54e9888baa516abfd82943c3260595060879877834188","typeString":"literal_string \"Only current holder can report\""}],"id":3973,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16104:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16104:92:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3983,"nodeType":"ExpressionStatement","src":"16104:92:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3987,"name":"_evidenceIpfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"16220:17:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16214:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3985,"name":"bytes","nodeType":"ElementaryTypeName","src":"16214:5:11","typeDescriptions":{}}},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16214:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16239:6:11","memberName":"length","nodeType":"MemberAccess","src":"16214:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16248:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16214:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45766964656e6365204950465320686173682063616e6e6f7420626520656d707479","id":3992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16251:36:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_20db2e89fb7af64063c3a19373b91da4804f345961f4ebeafddeb964b43545ac","typeString":"literal_string \"Evidence IPFS hash cannot be empty\""},"value":"Evidence IPFS hash cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_20db2e89fb7af64063c3a19373b91da4804f345961f4ebeafddeb964b43545ac","typeString":"literal_string \"Evidence IPFS hash cannot be empty\""}],"id":3984,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16206:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16206:82:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3994,"nodeType":"ExpressionStatement","src":"16206:82:11"},{"assignments":[3996],"declarations":[{"constant":false,"id":3996,"mutability":"mutable","name":"reportId","nameLocation":"16315:8:11","nodeType":"VariableDeclaration","scope":4032,"src":"16307:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3995,"name":"uint256","nodeType":"ElementaryTypeName","src":"16307:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3999,"initialValue":{"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16326:14:11","subExpression":{"id":3997,"name":"nextReportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"16326:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16307:33:11"},{"expression":{"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4000,"name":"expiredReports","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"16359:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ExpiredDrugReport_$2828_storage_$","typeString":"mapping(uint256 => struct MedChain.ExpiredDrugReport storage ref)"}},"id":4002,"indexExpression":{"id":4001,"name":"reportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"16374:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16359:24:11","typeDescriptions":{"typeIdentifier":"t_struct$_ExpiredDrugReport_$2828_storage","typeString":"struct MedChain.ExpiredDrugReport storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4004,"name":"reportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"16428:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4005,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"16459:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4006,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16491:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16495:6:11","memberName":"sender","nodeType":"MemberAccess","src":"16491:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4008,"name":"_evidenceIpfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"16525:17:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":4009,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"16567:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16573:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"16567:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":4011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16606:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4003,"name":"ExpiredDrugReport","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"16386:17:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExpiredDrugReport_$2828_storage_ptr_$","typeString":"type(struct MedChain.ExpiredDrugReport storage pointer)"}},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["16418:8:11","16450:7:11","16481:8:11","16515:8:11","16556:9:11","16596:8:11"],"names":["reportId","batchId","reporter","ipfsHash","timestamp","verified"],"nodeType":"FunctionCall","src":"16386:236:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExpiredDrugReport_$2828_memory_ptr","typeString":"struct MedChain.ExpiredDrugReport memory"}},"src":"16359:263:11","typeDescriptions":{"typeIdentifier":"t_struct$_ExpiredDrugReport_$2828_storage","typeString":"struct MedChain.ExpiredDrugReport storage ref"}},"id":4014,"nodeType":"ExpressionStatement","src":"16359:263:11"},{"expression":{"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4015,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"16673:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":4017,"indexExpression":{"id":4016,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"16685:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16673:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":4018,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16695:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2755,"src":"16673:28:11","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4019,"name":"DrugStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"16704:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DrugStatus_$2724_$","typeString":"type(enum MedChain.DrugStatus)"}},"id":4020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16715:7:11","memberName":"Expired","nodeType":"MemberAccess","referencedDeclaration":2723,"src":"16704:18:11","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}},"src":"16673:49:11","typeDescriptions":{"typeIdentifier":"t_enum$_DrugStatus_$2724","typeString":"enum MedChain.DrugStatus"}},"id":4022,"nodeType":"ExpressionStatement","src":"16673:49:11"},{"eventCall":{"arguments":[{"id":4024,"name":"reportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"16766:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4025,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"16776:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4026,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16786:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16790:6:11","memberName":"sender","nodeType":"MemberAccess","src":"16786:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4023,"name":"ExpiredDrugReported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"16746:19:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16746:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4029,"nodeType":"EmitStatement","src":"16741:56:11"},{"expression":{"id":4030,"name":"reportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"16814:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3972,"id":4031,"nodeType":"Return","src":"16807:15:11"}]},"functionSelector":"463b3da0","id":4033,"implemented":true,"kind":"function","modifiers":[{"id":3966,"kind":"modifierInvocation","modifierName":{"id":3965,"name":"onlyHospital","nameLocations":["16042:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2992,"src":"16042:12:11"},"nodeType":"ModifierInvocation","src":"16042:12:11"},{"arguments":[{"id":3968,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"16066:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3969,"kind":"modifierInvocation","modifierName":{"id":3967,"name":"validBatch","nameLocations":["16055:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":3035,"src":"16055:10:11"},"nodeType":"ModifierInvocation","src":"16055:20:11"}],"name":"reportExpiredDrug","nameLocation":"15942:17:11","nodeType":"FunctionDefinition","parameters":{"id":3964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3961,"mutability":"mutable","name":"_batchId","nameLocation":"15977:8:11","nodeType":"VariableDeclaration","scope":4033,"src":"15969:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3960,"name":"uint256","nodeType":"ElementaryTypeName","src":"15969:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3963,"mutability":"mutable","name":"_evidenceIpfsHash","nameLocation":"16009:17:11","nodeType":"VariableDeclaration","scope":4033,"src":"15995:31:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3962,"name":"string","nodeType":"ElementaryTypeName","src":"15995:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15959:73:11"},"returnParameters":{"id":3972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4033,"src":"16085:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3970,"name":"uint256","nodeType":"ElementaryTypeName","src":"16085:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16084:9:11"},"scope":4496,"src":"15933:896:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4058,"nodeType":"Block","src":"16902:139:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4041,"name":"_reportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"16920:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16932:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16920:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4044,"name":"_reportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"16937:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4045,"name":"nextReportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"16949:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16937:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16920:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207265706f7274204944","id":4048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16963:19:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_21303354814edff0dc483901bb7168239c4d865cdd124c4d1c4442d597233ae8","typeString":"literal_string \"Invalid report ID\""},"value":"Invalid report ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_21303354814edff0dc483901bb7168239c4d865cdd124c4d1c4442d597233ae8","typeString":"literal_string \"Invalid report ID\""}],"id":4040,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16912:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16912:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4050,"nodeType":"ExpressionStatement","src":"16912:71:11"},{"expression":{"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4051,"name":"expiredReports","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"16993:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ExpiredDrugReport_$2828_storage_$","typeString":"mapping(uint256 => struct MedChain.ExpiredDrugReport storage ref)"}},"id":4053,"indexExpression":{"id":4052,"name":"_reportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"17008:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16993:25:11","typeDescriptions":{"typeIdentifier":"t_struct$_ExpiredDrugReport_$2828_storage","typeString":"struct MedChain.ExpiredDrugReport storage ref"}},"id":4054,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17019:8:11","memberName":"verified","nodeType":"MemberAccess","referencedDeclaration":2827,"src":"16993:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17030:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"16993:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4057,"nodeType":"ExpressionStatement","src":"16993:41:11"}]},"functionSelector":"e17769bf","id":4059,"implemented":true,"kind":"function","modifiers":[{"id":4038,"kind":"modifierInvocation","modifierName":{"id":4037,"name":"onlyAdmin","nameLocations":["16892:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":3018,"src":"16892:9:11"},"nodeType":"ModifierInvocation","src":"16892:9:11"}],"name":"verifyExpiredReport","nameLocation":"16844:19:11","nodeType":"FunctionDefinition","parameters":{"id":4036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4035,"mutability":"mutable","name":"_reportId","nameLocation":"16872:9:11","nodeType":"VariableDeclaration","scope":4059,"src":"16864:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4034,"name":"uint256","nodeType":"ElementaryTypeName","src":"16864:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16863:19:11"},"returnParameters":{"id":4039,"nodeType":"ParameterList","parameters":[],"src":"16902:0:11"},"scope":4496,"src":"16835:206:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4106,"nodeType":"Block","src":"17193:441:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":4070,"name":"PATIENT_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"17219:12:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4071,"name":"_patient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"17233:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4069,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"17211:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17211:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070617469656e742061646472657373","id":4073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17244:25:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_33c473c2e2093856cbe26752e819a40ac1e4e430d9421ac16799c34433450e7a","typeString":"literal_string \"Invalid patient address\""},"value":"Invalid patient address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_33c473c2e2093856cbe26752e819a40ac1e4e430d9421ac16799c34433450e7a","typeString":"literal_string \"Invalid patient address\""}],"id":4068,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17203:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17203:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4075,"nodeType":"ExpressionStatement","src":"17203:67:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4079,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"17294:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17288:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4077,"name":"bytes","nodeType":"ElementaryTypeName","src":"17288:5:11","typeDescriptions":{}}},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17288:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17305:6:11","memberName":"length","nodeType":"MemberAccess","src":"17288:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17314:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17288:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4950465320686173682063616e6e6f7420626520656d707479","id":4084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17317:27:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9133b9f3350abb9ad5c186a964d7544d54ce63c05ebecb3c7513f09140c5a07d","typeString":"literal_string \"IPFS hash cannot be empty\""},"value":"IPFS hash cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9133b9f3350abb9ad5c186a964d7544d54ce63c05ebecb3c7513f09140c5a07d","typeString":"literal_string \"IPFS hash cannot be empty\""}],"id":4076,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17280:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17280:65:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4086,"nodeType":"ExpressionStatement","src":"17280:65:11"},{"expression":{"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4087,"name":"healthRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"17364:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_HealthRecord_$2815_storage_$","typeString":"mapping(address => struct MedChain.HealthRecord storage ref)"}},"id":4089,"indexExpression":{"id":4088,"name":"_patient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"17378:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17364:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_HealthRecord_$2815_storage","typeString":"struct MedChain.HealthRecord storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4091,"name":"_patient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"17426:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4092,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"17458:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":4093,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"17494:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17500:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"17494:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17531:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4090,"name":"HealthRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"17390:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_HealthRecord_$2815_storage_ptr_$","typeString":"type(struct MedChain.HealthRecord storage pointer)"}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["17417:7:11","17448:8:11","17481:11:11","17523:6:11"],"names":["patient","ipfsHash","lastUpdated","exists"],"nodeType":"FunctionCall","src":"17390:156:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_HealthRecord_$2815_memory_ptr","typeString":"struct MedChain.HealthRecord memory"}},"src":"17364:182:11","typeDescriptions":{"typeIdentifier":"t_struct$_HealthRecord_$2815_storage","typeString":"struct MedChain.HealthRecord storage ref"}},"id":4098,"nodeType":"ExpressionStatement","src":"17364:182:11"},{"eventCall":{"arguments":[{"id":4100,"name":"_patient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"17590:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4101,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"17600:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":4102,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"17611:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17617:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"17611:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4099,"name":"HealthRecordUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"17570:19:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,string memory,uint256)"}},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17570:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4105,"nodeType":"EmitStatement","src":"17565:62:11"}]},"functionSelector":"8a817e7b","id":4107,"implemented":true,"kind":"function","modifiers":[{"id":4066,"kind":"modifierInvocation","modifierName":{"id":4065,"name":"onlyHospital","nameLocations":["17180:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2992,"src":"17180:12:11"},"nodeType":"ModifierInvocation","src":"17180:12:11"}],"name":"updateHealthRecord","nameLocation":"17087:18:11","nodeType":"FunctionDefinition","parameters":{"id":4064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4061,"mutability":"mutable","name":"_patient","nameLocation":"17123:8:11","nodeType":"VariableDeclaration","scope":4107,"src":"17115:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4060,"name":"address","nodeType":"ElementaryTypeName","src":"17115:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4063,"mutability":"mutable","name":"_ipfsHash","nameLocation":"17155:9:11","nodeType":"VariableDeclaration","scope":4107,"src":"17141:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4062,"name":"string","nodeType":"ElementaryTypeName","src":"17141:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17105:65:11"},"returnParameters":{"id":4067,"nodeType":"ParameterList","parameters":[],"src":"17193:0:11"},"scope":4496,"src":"17078:556:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4147,"nodeType":"Block","src":"17721:360:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4115,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17752:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17756:6:11","memberName":"sender","nodeType":"MemberAccess","src":"17752:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4117,"name":"_patient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"17766:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17752:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":4120,"name":"HOSPITAL_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"17799:13:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4121,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17814:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17818:6:11","memberName":"sender","nodeType":"MemberAccess","src":"17814:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4119,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"17791:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17791:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17752:73:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":4126,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"17850:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4127,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17862:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17866:6:11","memberName":"sender","nodeType":"MemberAccess","src":"17862:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4125,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"17842:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17842:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17752:121:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e617574686f72697a65642061636365737320746f206865616c7468207265636f7264","id":4131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17887:38:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_39c63a939f491021a6c6aa86c4d81fb5cc8c418890bc69a535e0fd68391760e4","typeString":"literal_string \"Unauthorized access to health record\""},"value":"Unauthorized access to health record"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_39c63a939f491021a6c6aa86c4d81fb5cc8c418890bc69a535e0fd68391760e4","typeString":"literal_string \"Unauthorized access to health record\""}],"id":4114,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17731:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17731:204:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4133,"nodeType":"ExpressionStatement","src":"17731:204:11"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":4135,"name":"healthRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"17953:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_HealthRecord_$2815_storage_$","typeString":"mapping(address => struct MedChain.HealthRecord storage ref)"}},"id":4137,"indexExpression":{"id":4136,"name":"_patient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"17967:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17953:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_HealthRecord_$2815_storage","typeString":"struct MedChain.HealthRecord storage ref"}},"id":4138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17977:6:11","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":2814,"src":"17953:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4865616c7468207265636f726420646f6573206e6f74206578697374","id":4139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17985:30:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_a5ffb20838006940d95a1892712b3ff04ceafa5b90e74f59bcf173a8c15858b8","typeString":"literal_string \"Health record does not exist\""},"value":"Health record does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a5ffb20838006940d95a1892712b3ff04ceafa5b90e74f59bcf173a8c15858b8","typeString":"literal_string \"Health record does not exist\""}],"id":4134,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17945:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17945:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4141,"nodeType":"ExpressionStatement","src":"17945:71:11"},{"expression":{"expression":{"baseExpression":{"id":4142,"name":"healthRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"18042:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_HealthRecord_$2815_storage_$","typeString":"mapping(address => struct MedChain.HealthRecord storage ref)"}},"id":4144,"indexExpression":{"id":4143,"name":"_patient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"18056:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18042:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_HealthRecord_$2815_storage","typeString":"struct MedChain.HealthRecord storage ref"}},"id":4145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18066:8:11","memberName":"ipfsHash","nodeType":"MemberAccess","referencedDeclaration":2810,"src":"18042:32:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":4113,"id":4146,"nodeType":"Return","src":"18035:39:11"}]},"functionSelector":"bd8f1752","id":4148,"implemented":true,"kind":"function","modifiers":[],"name":"getHealthRecord","nameLocation":"17649:15:11","nodeType":"FunctionDefinition","parameters":{"id":4110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4109,"mutability":"mutable","name":"_patient","nameLocation":"17673:8:11","nodeType":"VariableDeclaration","scope":4148,"src":"17665:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4108,"name":"address","nodeType":"ElementaryTypeName","src":"17665:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17664:18:11"},"returnParameters":{"id":4113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4148,"src":"17706:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4111,"name":"string","nodeType":"ElementaryTypeName","src":"17706:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17705:15:11"},"scope":4496,"src":"17640:441:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4172,"nodeType":"Block","src":"18234:142:11","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":4158,"name":"hospitals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"18252:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Hospital_$2784_storage_$","typeString":"mapping(address => struct MedChain.Hospital storage ref)"}},"id":4160,"indexExpression":{"id":4159,"name":"_hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"18262:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18252:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_storage","typeString":"struct MedChain.Hospital storage ref"}},"id":4161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18273:8:11","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2779,"src":"18252:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"486f73706974616c206973206e6f7420616374697665","id":4162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18283:24:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_08706de2733888bacad6eab0c6a0d9d43937f9fc53ad83b83b6b80c6bb51f51b","typeString":"literal_string \"Hospital is not active\""},"value":"Hospital is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_08706de2733888bacad6eab0c6a0d9d43937f9fc53ad83b83b6b80c6bb51f51b","typeString":"literal_string \"Hospital is not active\""}],"id":4157,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18244:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18244:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4164,"nodeType":"ExpressionStatement","src":"18244:64:11"},{"expression":{"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4165,"name":"hospitals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"18318:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Hospital_$2784_storage_$","typeString":"mapping(address => struct MedChain.Hospital storage ref)"}},"id":4167,"indexExpression":{"id":4166,"name":"_hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"18328:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18318:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_storage","typeString":"struct MedChain.Hospital storage ref"}},"id":4168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18339:14:11","memberName":"stockThreshold","nodeType":"MemberAccess","referencedDeclaration":2777,"src":"18318:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4169,"name":"_newThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"18356:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18318:51:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4171,"nodeType":"ExpressionStatement","src":"18318:51:11"}]},"functionSelector":"98e9220a","id":4173,"implemented":true,"kind":"function","modifiers":[{"id":4155,"kind":"modifierInvocation","modifierName":{"id":4154,"name":"onlyAdmin","nameLocations":["18224:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":3018,"src":"18224:9:11"},"nodeType":"ModifierInvocation","src":"18224:9:11"}],"name":"updateStockThreshold","nameLocation":"18130:20:11","nodeType":"FunctionDefinition","parameters":{"id":4153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4150,"mutability":"mutable","name":"_hospital","nameLocation":"18168:9:11","nodeType":"VariableDeclaration","scope":4173,"src":"18160:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4149,"name":"address","nodeType":"ElementaryTypeName","src":"18160:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4152,"mutability":"mutable","name":"_newThreshold","nameLocation":"18195:13:11","nodeType":"VariableDeclaration","scope":4173,"src":"18187:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4151,"name":"uint256","nodeType":"ElementaryTypeName","src":"18187:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18150:64:11"},"returnParameters":{"id":4156,"nodeType":"ParameterList","parameters":[],"src":"18234:0:11"},"scope":4496,"src":"18121:255:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4197,"nodeType":"Block","src":"18493:134:11","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":4183,"name":"hospitals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"18511:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Hospital_$2784_storage_$","typeString":"mapping(address => struct MedChain.Hospital storage ref)"}},"id":4185,"indexExpression":{"id":4184,"name":"_hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"18521:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18511:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_storage","typeString":"struct MedChain.Hospital storage ref"}},"id":4186,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18532:8:11","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2779,"src":"18511:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"486f73706974616c206973206e6f7420616374697665","id":4187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18542:24:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_08706de2733888bacad6eab0c6a0d9d43937f9fc53ad83b83b6b80c6bb51f51b","typeString":"literal_string \"Hospital is not active\""},"value":"Hospital is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_08706de2733888bacad6eab0c6a0d9d43937f9fc53ad83b83b6b80c6bb51f51b","typeString":"literal_string \"Hospital is not active\""}],"id":4182,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18503:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18503:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4189,"nodeType":"ExpressionStatement","src":"18503:64:11"},{"expression":{"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4190,"name":"hospitals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"18577:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Hospital_$2784_storage_$","typeString":"mapping(address => struct MedChain.Hospital storage ref)"}},"id":4192,"indexExpression":{"id":4191,"name":"_hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"18587:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18577:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_storage","typeString":"struct MedChain.Hospital storage ref"}},"id":4193,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18598:10:11","memberName":"stockCount","nodeType":"MemberAccess","referencedDeclaration":2775,"src":"18577:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4194,"name":"_newStock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"18611:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18577:43:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4196,"nodeType":"ExpressionStatement","src":"18577:43:11"}]},"functionSelector":"af988145","id":4198,"implemented":true,"kind":"function","modifiers":[{"id":4180,"kind":"modifierInvocation","modifierName":{"id":4179,"name":"onlyAdmin","nameLocations":["18483:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":3018,"src":"18483:9:11"},"nodeType":"ModifierInvocation","src":"18483:9:11"}],"name":"emergencyStockOverride","nameLocation":"18391:22:11","nodeType":"FunctionDefinition","parameters":{"id":4178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4175,"mutability":"mutable","name":"_hospital","nameLocation":"18431:9:11","nodeType":"VariableDeclaration","scope":4198,"src":"18423:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4174,"name":"address","nodeType":"ElementaryTypeName","src":"18423:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4177,"mutability":"mutable","name":"_newStock","nameLocation":"18458:9:11","nodeType":"VariableDeclaration","scope":4198,"src":"18450:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4176,"name":"uint256","nodeType":"ElementaryTypeName","src":"18450:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18413:60:11"},"returnParameters":{"id":4181,"nodeType":"ParameterList","parameters":[],"src":"18493:0:11"},"scope":4496,"src":"18382:245:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4213,"nodeType":"Block","src":"18757:45:11","statements":[{"expression":{"baseExpression":{"id":4209,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"18774:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":4211,"indexExpression":{"id":4210,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"18786:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18774:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"functionReturnParameters":4208,"id":4212,"nodeType":"Return","src":"18767:28:11"}]},"functionSelector":"f276c323","id":4214,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4203,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"18720:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4204,"kind":"modifierInvocation","modifierName":{"id":4202,"name":"validBatch","nameLocations":["18709:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":3035,"src":"18709:10:11"},"nodeType":"ModifierInvocation","src":"18709:20:11"}],"name":"getDrugBatch","nameLocation":"18664:12:11","nodeType":"FunctionDefinition","parameters":{"id":4201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4200,"mutability":"mutable","name":"_batchId","nameLocation":"18685:8:11","nodeType":"VariableDeclaration","scope":4214,"src":"18677:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4199,"name":"uint256","nodeType":"ElementaryTypeName","src":"18677:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18676:18:11"},"returnParameters":{"id":4208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4214,"src":"18739:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_memory_ptr","typeString":"struct MedChain.DrugBatch"},"typeName":{"id":4206,"nodeType":"UserDefinedTypeName","pathNode":{"id":4205,"name":"DrugBatch","nameLocations":["18739:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":2764,"src":"18739:9:11"},"referencedDeclaration":2764,"src":"18739:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage_ptr","typeString":"struct MedChain.DrugBatch"}},"visibility":"internal"}],"src":"18738:18:11"},"scope":4496,"src":"18655:147:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4226,"nodeType":"Block","src":"18888:44:11","statements":[{"expression":{"baseExpression":{"id":4222,"name":"hospitals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"18905:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Hospital_$2784_storage_$","typeString":"mapping(address => struct MedChain.Hospital storage ref)"}},"id":4224,"indexExpression":{"id":4223,"name":"_hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"18915:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18905:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_storage","typeString":"struct MedChain.Hospital storage ref"}},"functionReturnParameters":4221,"id":4225,"nodeType":"Return","src":"18898:27:11"}]},"functionSelector":"c49b09b5","id":4227,"implemented":true,"kind":"function","modifiers":[],"name":"getHospital","nameLocation":"18817:11:11","nodeType":"FunctionDefinition","parameters":{"id":4217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4216,"mutability":"mutable","name":"_hospital","nameLocation":"18837:9:11","nodeType":"VariableDeclaration","scope":4227,"src":"18829:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4215,"name":"address","nodeType":"ElementaryTypeName","src":"18829:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18828:19:11"},"returnParameters":{"id":4221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4227,"src":"18871:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_memory_ptr","typeString":"struct MedChain.Hospital"},"typeName":{"id":4219,"nodeType":"UserDefinedTypeName","pathNode":{"id":4218,"name":"Hospital","nameLocations":["18871:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2784,"src":"18871:8:11"},"referencedDeclaration":2784,"src":"18871:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_storage_ptr","typeString":"struct MedChain.Hospital"}},"visibility":"internal"}],"src":"18870:17:11"},"scope":4496,"src":"18808:124:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4250,"nodeType":"Block","src":"19025:133:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4236,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"19043:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19056:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19043:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4239,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"19061:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4240,"name":"nextRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"19074:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19061:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19043:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642072657175657374204944","id":4243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19089:20:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_fe5b51659b77963fefd5a885289e5d9edfecd23ba844cc064e0fb0d9e0b7fe82","typeString":"literal_string \"Invalid request ID\""},"value":"Invalid request ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fe5b51659b77963fefd5a885289e5d9edfecd23ba844cc064e0fb0d9e0b7fe82","typeString":"literal_string \"Invalid request ID\""}],"id":4235,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19035:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19035:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4245,"nodeType":"ExpressionStatement","src":"19035:75:11"},{"expression":{"baseExpression":{"id":4246,"name":"drugRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"19127:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugRequest_$2806_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugRequest storage ref)"}},"id":4248,"indexExpression":{"id":4247,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"19140:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19127:24:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugRequest_$2806_storage","typeString":"struct MedChain.DrugRequest storage ref"}},"functionReturnParameters":4234,"id":4249,"nodeType":"Return","src":"19120:31:11"}]},"functionSelector":"85115ab1","id":4251,"implemented":true,"kind":"function","modifiers":[],"name":"getDrugRequest","nameLocation":"18947:14:11","nodeType":"FunctionDefinition","parameters":{"id":4230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4229,"mutability":"mutable","name":"_requestId","nameLocation":"18970:10:11","nodeType":"VariableDeclaration","scope":4251,"src":"18962:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4228,"name":"uint256","nodeType":"ElementaryTypeName","src":"18962:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18961:20:11"},"returnParameters":{"id":4234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4251,"src":"19005:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DrugRequest_$2806_memory_ptr","typeString":"struct MedChain.DrugRequest"},"typeName":{"id":4232,"nodeType":"UserDefinedTypeName","pathNode":{"id":4231,"name":"DrugRequest","nameLocations":["19005:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":2806,"src":"19005:11:11"},"referencedDeclaration":2806,"src":"19005:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugRequest_$2806_storage_ptr","typeString":"struct MedChain.DrugRequest"}},"visibility":"internal"}],"src":"19004:20:11"},"scope":4496,"src":"18938:220:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4274,"nodeType":"Block","src":"19258:130:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4260,"name":"_reportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"19276:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19288:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19276:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4263,"name":"_reportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"19293:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4264,"name":"nextReportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"19305:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19293:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19276:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207265706f7274204944","id":4267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19319:19:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_21303354814edff0dc483901bb7168239c4d865cdd124c4d1c4442d597233ae8","typeString":"literal_string \"Invalid report ID\""},"value":"Invalid report ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_21303354814edff0dc483901bb7168239c4d865cdd124c4d1c4442d597233ae8","typeString":"literal_string \"Invalid report ID\""}],"id":4259,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19268:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19268:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4269,"nodeType":"ExpressionStatement","src":"19268:71:11"},{"expression":{"baseExpression":{"id":4270,"name":"expiredReports","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"19356:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ExpiredDrugReport_$2828_storage_$","typeString":"mapping(uint256 => struct MedChain.ExpiredDrugReport storage ref)"}},"id":4272,"indexExpression":{"id":4271,"name":"_reportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"19371:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19356:25:11","typeDescriptions":{"typeIdentifier":"t_struct$_ExpiredDrugReport_$2828_storage","typeString":"struct MedChain.ExpiredDrugReport storage ref"}},"functionReturnParameters":4258,"id":4273,"nodeType":"Return","src":"19349:32:11"}]},"functionSelector":"0c38b75f","id":4275,"implemented":true,"kind":"function","modifiers":[],"name":"getExpiredReport","nameLocation":"19173:16:11","nodeType":"FunctionDefinition","parameters":{"id":4254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4253,"mutability":"mutable","name":"_reportId","nameLocation":"19198:9:11","nodeType":"VariableDeclaration","scope":4275,"src":"19190:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4252,"name":"uint256","nodeType":"ElementaryTypeName","src":"19190:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19189:19:11"},"returnParameters":{"id":4258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4275,"src":"19232:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExpiredDrugReport_$2828_memory_ptr","typeString":"struct MedChain.ExpiredDrugReport"},"typeName":{"id":4256,"nodeType":"UserDefinedTypeName","pathNode":{"id":4255,"name":"ExpiredDrugReport","nameLocations":["19232:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":2828,"src":"19232:17:11"},"referencedDeclaration":2828,"src":"19232:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_ExpiredDrugReport_$2828_storage_ptr","typeString":"struct MedChain.ExpiredDrugReport"}},"visibility":"internal"}],"src":"19231:26:11"},"scope":4496,"src":"19164:224:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4287,"nodeType":"Block","src":"19483:51:11","statements":[{"expression":{"baseExpression":{"id":4283,"name":"hospitalRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"19500:16:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":4285,"indexExpression":{"id":4284,"name":"_hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"19517:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19500:27:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":4282,"id":4286,"nodeType":"Return","src":"19493:34:11"}]},"functionSelector":"5d45e084","id":4288,"implemented":true,"kind":"function","modifiers":[],"name":"getHospitalRequests","nameLocation":"19403:19:11","nodeType":"FunctionDefinition","parameters":{"id":4278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4277,"mutability":"mutable","name":"_hospital","nameLocation":"19431:9:11","nodeType":"VariableDeclaration","scope":4288,"src":"19423:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4276,"name":"address","nodeType":"ElementaryTypeName","src":"19423:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19422:19:11"},"returnParameters":{"id":4282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4288,"src":"19465:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4279,"name":"uint256","nodeType":"ElementaryTypeName","src":"19465:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4280,"nodeType":"ArrayTypeName","src":"19465:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"19464:18:11"},"scope":4496,"src":"19394:140:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4300,"nodeType":"Block","src":"19626:48:11","statements":[{"expression":{"baseExpression":{"id":4296,"name":"patientBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"19643:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":4298,"indexExpression":{"id":4297,"name":"_patient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"19658:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19643:24:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":4295,"id":4299,"nodeType":"Return","src":"19636:31:11"}]},"functionSelector":"69a6dda5","id":4301,"implemented":true,"kind":"function","modifiers":[],"name":"getPatientBatches","nameLocation":"19549:17:11","nodeType":"FunctionDefinition","parameters":{"id":4291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4290,"mutability":"mutable","name":"_patient","nameLocation":"19575:8:11","nodeType":"VariableDeclaration","scope":4301,"src":"19567:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4289,"name":"address","nodeType":"ElementaryTypeName","src":"19567:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19566:18:11"},"returnParameters":{"id":4295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4301,"src":"19608:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4292,"name":"uint256","nodeType":"ElementaryTypeName","src":"19608:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4293,"nodeType":"ArrayTypeName","src":"19608:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"19607:18:11"},"scope":4496,"src":"19540:134:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4310,"nodeType":"Block","src":"19741:39:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4306,"name":"nextBatchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"19758:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19772:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19758:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4305,"id":4309,"nodeType":"Return","src":"19751:22:11"}]},"functionSelector":"e720ac8e","id":4311,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentBatchId","nameLocation":"19689:17:11","nodeType":"FunctionDefinition","parameters":{"id":4302,"nodeType":"ParameterList","parameters":[],"src":"19706:2:11"},"returnParameters":{"id":4305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4311,"src":"19732:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4303,"name":"uint256","nodeType":"ElementaryTypeName","src":"19732:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19731:9:11"},"scope":4496,"src":"19680:100:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4320,"nodeType":"Block","src":"19849:41:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4316,"name":"nextRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"19866:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19882:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19866:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4315,"id":4319,"nodeType":"Return","src":"19859:24:11"}]},"functionSelector":"15cd1841","id":4321,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentRequestId","nameLocation":"19795:19:11","nodeType":"FunctionDefinition","parameters":{"id":4312,"nodeType":"ParameterList","parameters":[],"src":"19814:2:11"},"returnParameters":{"id":4315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4321,"src":"19840:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4313,"name":"uint256","nodeType":"ElementaryTypeName","src":"19840:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19839:9:11"},"scope":4496,"src":"19786:104:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4330,"nodeType":"Block","src":"19958:40:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4326,"name":"nextReportId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"19975:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19990:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19975:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4325,"id":4329,"nodeType":"Return","src":"19968:23:11"}]},"functionSelector":"39595ee4","id":4331,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentReportId","nameLocation":"19905:18:11","nodeType":"FunctionDefinition","parameters":{"id":4322,"nodeType":"ParameterList","parameters":[],"src":"19923:2:11"},"returnParameters":{"id":4325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4331,"src":"19949:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4323,"name":"uint256","nodeType":"ElementaryTypeName","src":"19949:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19948:9:11"},"scope":4496,"src":"19896:102:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4339,"nodeType":"Block","src":"20087:25:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4336,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"20097:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20097:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4338,"nodeType":"ExpressionStatement","src":"20097:8:11"}]},"functionSelector":"8456cb59","id":4340,"implemented":true,"kind":"function","modifiers":[{"id":4334,"kind":"modifierInvocation","modifierName":{"id":4333,"name":"onlyAdmin","nameLocations":["20077:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":3018,"src":"20077:9:11"},"nodeType":"ModifierInvocation","src":"20077:9:11"}],"name":"pause","nameLocation":"20060:5:11","nodeType":"FunctionDefinition","parameters":{"id":4332,"nodeType":"ParameterList","parameters":[],"src":"20065:2:11"},"returnParameters":{"id":4335,"nodeType":"ParameterList","parameters":[],"src":"20087:0:11"},"scope":4496,"src":"20051:61:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4348,"nodeType":"Block","src":"20160:27:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4345,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"20170:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20170:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4347,"nodeType":"ExpressionStatement","src":"20170:10:11"}]},"functionSelector":"3f4ba83a","id":4349,"implemented":true,"kind":"function","modifiers":[{"id":4343,"kind":"modifierInvocation","modifierName":{"id":4342,"name":"onlyAdmin","nameLocations":["20150:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":3018,"src":"20150:9:11"},"nodeType":"ModifierInvocation","src":"20150:9:11"}],"name":"unpause","nameLocation":"20131:7:11","nodeType":"FunctionDefinition","parameters":{"id":4341,"nodeType":"ParameterList","parameters":[],"src":"20138:2:11"},"returnParameters":{"id":4344,"nodeType":"ParameterList","parameters":[],"src":"20160:0:11"},"scope":4496,"src":"20122:65:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4384,"nodeType":"Block","src":"20368:201:11","statements":[{"expression":{"arguments":[{"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"20386:33:11","subExpression":{"expression":{"baseExpression":{"id":4362,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"20387:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":4364,"indexExpression":{"id":4363,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"20399:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20387:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":4365,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20409:10:11","memberName":"isRecalled","nodeType":"MemberAccess","referencedDeclaration":2761,"src":"20387:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426174636820616c726561647920726563616c6c6564","id":4367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20421:24:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_387eb87fdaeb3a85d10685d35e360fdd6dd3d9a567616ef137a52c34641fa3a6","typeString":"literal_string \"Batch already recalled\""},"value":"Batch already recalled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_387eb87fdaeb3a85d10685d35e360fdd6dd3d9a567616ef137a52c34641fa3a6","typeString":"literal_string \"Batch already recalled\""}],"id":4361,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20378:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20378:68:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4369,"nodeType":"ExpressionStatement","src":"20378:68:11"},{"expression":{"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4370,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"20465:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":4372,"indexExpression":{"id":4371,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"20477:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20465:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":4373,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20487:10:11","memberName":"isRecalled","nodeType":"MemberAccess","referencedDeclaration":2761,"src":"20465:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20500:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"20465:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4376,"nodeType":"ExpressionStatement","src":"20465:39:11"},{"eventCall":{"arguments":[{"id":4378,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"20532:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4379,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20542:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20546:6:11","memberName":"sender","nodeType":"MemberAccess","src":"20542:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4381,"name":"_reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"20554:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4377,"name":"DrugRecalled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"20519:12:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,string memory)"}},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4383,"nodeType":"EmitStatement","src":"20514:48:11"}]},"functionSelector":"4d22436f","id":4385,"implemented":true,"kind":"function","modifiers":[{"id":4356,"kind":"modifierInvocation","modifierName":{"id":4355,"name":"onlyAdmin","nameLocations":["20337:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":3018,"src":"20337:9:11"},"nodeType":"ModifierInvocation","src":"20337:9:11"},{"arguments":[{"id":4358,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"20358:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4359,"kind":"modifierInvocation","modifierName":{"id":4357,"name":"validBatch","nameLocations":["20347:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":3035,"src":"20347:10:11"},"nodeType":"ModifierInvocation","src":"20347:20:11"}],"name":"recallDrugBatch","nameLocation":"20249:15:11","nodeType":"FunctionDefinition","parameters":{"id":4354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4351,"mutability":"mutable","name":"_batchId","nameLocation":"20282:8:11","nodeType":"VariableDeclaration","scope":4385,"src":"20274:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4350,"name":"uint256","nodeType":"ElementaryTypeName","src":"20274:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4353,"mutability":"mutable","name":"_reason","nameLocation":"20314:7:11","nodeType":"VariableDeclaration","scope":4385,"src":"20300:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4352,"name":"string","nodeType":"ElementaryTypeName","src":"20300:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20264:63:11"},"returnParameters":{"id":4360,"nodeType":"ParameterList","parameters":[],"src":"20368:0:11"},"scope":4496,"src":"20240:329:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4424,"nodeType":"Block","src":"20685:265:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4392,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"20699:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20711:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20699:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4395,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"20716:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4396,"name":"nextBatchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"20728:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20716:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20699:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4401,"nodeType":"IfStatement","src":"20695:58:11","trueBody":{"expression":{"hexValue":"66616c7365","id":4399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20748:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4391,"id":4400,"nodeType":"Return","src":"20741:12:11"}},{"assignments":[4404],"declarations":[{"constant":false,"id":4404,"mutability":"mutable","name":"batch","nameLocation":"20789:5:11","nodeType":"VariableDeclaration","scope":4424,"src":"20772:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_memory_ptr","typeString":"struct MedChain.DrugBatch"},"typeName":{"id":4403,"nodeType":"UserDefinedTypeName","pathNode":{"id":4402,"name":"DrugBatch","nameLocations":["20772:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":2764,"src":"20772:9:11"},"referencedDeclaration":2764,"src":"20772:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage_ptr","typeString":"struct MedChain.DrugBatch"}},"visibility":"internal"}],"id":4408,"initialValue":{"baseExpression":{"id":4405,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"20797:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":4407,"indexExpression":{"id":4406,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"20809:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20797:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"nodeType":"VariableDeclarationStatement","src":"20772:46:11"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"20835:17:11","subExpression":{"expression":{"id":4409,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"20836:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_memory_ptr","typeString":"struct MedChain.DrugBatch memory"}},"id":4410,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20842:10:11","memberName":"isRecalled","nodeType":"MemberAccess","referencedDeclaration":2761,"src":"20836:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4412,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"20872:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20878:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"20872:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4414,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"20890:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_memory_ptr","typeString":"struct MedChain.DrugBatch memory"}},"id":4415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20896:10:11","memberName":"expiryDate","nodeType":"MemberAccess","referencedDeclaration":2752,"src":"20890:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20872:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20835:71:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4418,"name":"batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"20925:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_memory_ptr","typeString":"struct MedChain.DrugBatch memory"}},"id":4419,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20931:8:11","memberName":"quantity","nodeType":"MemberAccess","referencedDeclaration":2746,"src":"20925:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20942:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20925:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20835:108:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4391,"id":4423,"nodeType":"Return","src":"20828:115:11"}]},"functionSelector":"bc7999ad","id":4425,"implemented":true,"kind":"function","modifiers":[],"name":"isValidBatch","nameLocation":"20625:12:11","nodeType":"FunctionDefinition","parameters":{"id":4388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4387,"mutability":"mutable","name":"_batchId","nameLocation":"20646:8:11","nodeType":"VariableDeclaration","scope":4425,"src":"20638:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4386,"name":"uint256","nodeType":"ElementaryTypeName","src":"20638:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20637:18:11"},"returnParameters":{"id":4391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4425,"src":"20679:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4389,"name":"bool","nodeType":"ElementaryTypeName","src":"20679:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20678:6:11"},"scope":4496,"src":"20616:334:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4440,"nodeType":"Block","src":"21112:59:11","statements":[{"expression":{"expression":{"baseExpression":{"id":4435,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"21129:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":4437,"indexExpression":{"id":4436,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"21141:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21129:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":4438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21151:13:11","memberName":"transferCount","nodeType":"MemberAccess","referencedDeclaration":2759,"src":"21129:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4434,"id":4439,"nodeType":"Return","src":"21122:42:11"}]},"functionSelector":"8102dbcf","id":4441,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4430,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"21084:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4431,"kind":"modifierInvocation","modifierName":{"id":4429,"name":"validBatch","nameLocations":["21073:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":3035,"src":"21073:10:11"},"nodeType":"ModifierInvocation","src":"21073:20:11"}],"name":"getBatchTransferCount","nameLocation":"21019:21:11","nodeType":"FunctionDefinition","parameters":{"id":4428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4427,"mutability":"mutable","name":"_batchId","nameLocation":"21049:8:11","nodeType":"VariableDeclaration","scope":4441,"src":"21041:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4426,"name":"uint256","nodeType":"ElementaryTypeName","src":"21041:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21040:18:11"},"returnParameters":{"id":4434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4441,"src":"21103:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4432,"name":"uint256","nodeType":"ElementaryTypeName","src":"21103:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21102:9:11"},"scope":4496,"src":"21010:161:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4456,"nodeType":"Block","src":"21318:56:11","statements":[{"expression":{"expression":{"baseExpression":{"id":4451,"name":"drugBatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"21335:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrugBatch_$2764_storage_$","typeString":"mapping(uint256 => struct MedChain.DrugBatch storage ref)"}},"id":4453,"indexExpression":{"id":4452,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"21347:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21335:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_DrugBatch_$2764_storage","typeString":"struct MedChain.DrugBatch storage ref"}},"id":4454,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21357:10:11","memberName":"isRecalled","nodeType":"MemberAccess","referencedDeclaration":2761,"src":"21335:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4450,"id":4455,"nodeType":"Return","src":"21328:39:11"}]},"functionSelector":"8987e936","id":4457,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4446,"name":"_batchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"21293:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4447,"kind":"modifierInvocation","modifierName":{"id":4445,"name":"validBatch","nameLocations":["21282:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":3035,"src":"21282:10:11"},"nodeType":"ModifierInvocation","src":"21282:20:11"}],"name":"isBatchRecalled","nameLocation":"21234:15:11","nodeType":"FunctionDefinition","parameters":{"id":4444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4443,"mutability":"mutable","name":"_batchId","nameLocation":"21258:8:11","nodeType":"VariableDeclaration","scope":4457,"src":"21250:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4442,"name":"uint256","nodeType":"ElementaryTypeName","src":"21250:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21249:18:11"},"returnParameters":{"id":4450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4457,"src":"21312:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4448,"name":"bool","nodeType":"ElementaryTypeName","src":"21312:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21311:6:11"},"scope":4496,"src":"21225:149:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4486,"nodeType":"Block","src":"21509:245:11","statements":[{"assignments":[4466],"declarations":[{"constant":false,"id":4466,"mutability":"mutable","name":"hospital","nameLocation":"21535:8:11","nodeType":"VariableDeclaration","scope":4486,"src":"21519:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_memory_ptr","typeString":"struct MedChain.Hospital"},"typeName":{"id":4465,"nodeType":"UserDefinedTypeName","pathNode":{"id":4464,"name":"Hospital","nameLocations":["21519:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2784,"src":"21519:8:11"},"referencedDeclaration":2784,"src":"21519:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_storage_ptr","typeString":"struct MedChain.Hospital"}},"visibility":"internal"}],"id":4470,"initialValue":{"baseExpression":{"id":4467,"name":"hospitals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"21546:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Hospital_$2784_storage_$","typeString":"mapping(address => struct MedChain.Hospital storage ref)"}},"id":4469,"indexExpression":{"id":4468,"name":"_hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"21556:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21546:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_storage","typeString":"struct MedChain.Hospital storage ref"}},"nodeType":"VariableDeclarationStatement","src":"21519:47:11"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_HospitalType_$2727","typeString":"enum MedChain.HospitalType"},"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4471,"name":"hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"21580:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_memory_ptr","typeString":"struct MedChain.Hospital memory"}},"id":4472,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21589:12:11","memberName":"hospitalType","nodeType":"MemberAccess","referencedDeclaration":2773,"src":"21580:21:11","typeDescriptions":{"typeIdentifier":"t_enum$_HospitalType_$2727","typeString":"enum MedChain.HospitalType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4473,"name":"HospitalType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"21605:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_HospitalType_$2727_$","typeString":"type(enum MedChain.HospitalType)"}},"id":4474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21618:5:11","memberName":"Rural","nodeType":"MemberAccess","referencedDeclaration":2726,"src":"21605:18:11","typeDescriptions":{"typeIdentifier":"t_enum$_HospitalType_$2727","typeString":"enum MedChain.HospitalType"}},"src":"21580:43:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4482,"nodeType":"IfStatement","src":"21576:132:11","trueBody":{"id":4481,"nodeType":"Block","src":"21625:83:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4476,"name":"hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"21646:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_memory_ptr","typeString":"struct MedChain.Hospital memory"}},"id":4477,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21655:14:11","memberName":"stockThreshold","nodeType":"MemberAccess","referencedDeclaration":2777,"src":"21646:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4478,"name":"RURAL_PRIORITY_MULTIPLIER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"21672:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21646:51:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4463,"id":4480,"nodeType":"Return","src":"21639:58:11"}]}},{"expression":{"expression":{"id":4483,"name":"hospital","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"21724:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_Hospital_$2784_memory_ptr","typeString":"struct MedChain.Hospital memory"}},"id":4484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21733:14:11","memberName":"stockThreshold","nodeType":"MemberAccess","referencedDeclaration":2777,"src":"21724:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4463,"id":4485,"nodeType":"Return","src":"21717:30:11"}]},"functionSelector":"d890e049","id":4487,"implemented":true,"kind":"function","modifiers":[],"name":"calculatePriority","nameLocation":"21440:17:11","nodeType":"FunctionDefinition","parameters":{"id":4460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4459,"mutability":"mutable","name":"_hospital","nameLocation":"21466:9:11","nodeType":"VariableDeclaration","scope":4487,"src":"21458:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4458,"name":"address","nodeType":"ElementaryTypeName","src":"21458:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21457:19:11"},"returnParameters":{"id":4463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4487,"src":"21500:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4461,"name":"uint256","nodeType":"ElementaryTypeName","src":"21500:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21499:9:11"},"scope":4496,"src":"21431:323:11","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"eventSelector":"eb44898320c8a9cdeba7cce944505307316634cf2ec97635311d70dd46aaaae6","id":4495,"name":"DrugRecalled","nameLocation":"21793:12:11","nodeType":"EventDefinition","parameters":{"id":4494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4489,"indexed":true,"mutability":"mutable","name":"batchId","nameLocation":"21831:7:11","nodeType":"VariableDeclaration","scope":4495,"src":"21815:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4488,"name":"uint256","nodeType":"ElementaryTypeName","src":"21815:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4491,"indexed":true,"mutability":"mutable","name":"recaller","nameLocation":"21864:8:11","nodeType":"VariableDeclaration","scope":4495,"src":"21848:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4490,"name":"address","nodeType":"ElementaryTypeName","src":"21848:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4493,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"21889:6:11","nodeType":"VariableDeclaration","scope":4495,"src":"21882:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4492,"name":"string","nodeType":"ElementaryTypeName","src":"21882:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21805:96:11"},"src":"21787:115:11"}],"scope":4497,"src":"507:21397:11","usedErrors":[306,309,431,434,531],"usedEvents":[318,327,336,423,428,2891,2902,2910,2919,2929,2937,2945,2953,4495]}],"src":"32:21873:11"},"id":11}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"Hashes":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f8ddfcb4103aa51544b00aaa701a2624c5742409d5ce009dc850274c167d4adb64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xDD 0xFC 0xB4 LT GASPRICE 0xA5 ISZERO PREVRANDAO 0xB0 EXP 0xAA PUSH17 0x1A2624C5742409D5CE009DC850274C167D 0x4A 0xDB PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"221:811:5:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220f8ddfcb4103aa51544b00aaa701a2624c5742409d5ce009dc850274c167d4adb64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xDD 0xFC 0xB4 LT GASPRICE 0xA5 ISZERO PREVRANDAO 0xB0 EXP 0xAA PUSH17 0x1A2624C5742409D5CE009DC850274C167D 0x4A 0xDB PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"221:811:5:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library of standard hash functions. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":\"Hashes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[{"inputs":[],"name":"MerkleProofInvalidMultiproof","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212203d12f11a614515fdf75a5197547264ecf17c10c41f379d0df83ea08ab39517ee64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE SLT CALL BYTE PUSH2 0x4515 REVERT 0xF7 GAS MLOAD SWAP8 SLOAD PUSH19 0x64ECF17C10C41F379D0DF83EA08AB39517EE64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"1353:22982:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212203d12f11a614515fdf75a5197547264ecf17c10c41f379d0df83ea08ab39517ee64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE SLT CALL BYTE PUSH2 0x4515 REVERT 0xF7 GAS MLOAD SWAP8 SLOAD PUSH19 0x64ECF17C10C41F379D0DF83EA08AB39517EE64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"1353:22982:6:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MerkleProofInvalidMultiproof\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the Merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates Merkle trees that are safe against this attack out of the box. IMPORTANT: Consider memory side-effects when using custom hashing functions that access memory in an unsafe way. NOTE: This library supports proof verification for merkle trees built using custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving leaf inclusion in trees built using non-commutative hashing functions requires additional logic that is not supported by this library.\",\"errors\":{\"MerkleProofInvalidMultiproof()\":[{\"details\":\"The multiproof provided is not valid.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"contracts/DrugVerification.sol":{"DrugVerification":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"batchHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"deactivator","type":"address"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"BatchDeactivated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"batchHash","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":false,"internalType":"uint256","name":"drugCount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"DrugBatchCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"drugHash","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"batchHash","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"isValid","type":"bool"},{"indexed":true,"internalType":"address","name":"verifier","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"DrugVerificationResult","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"BATCH_CREATOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VERIFIER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"batchInfo","outputs":[{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"address","name":"creator","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"drugCount","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"string","name":"description","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_batchHash","type":"bytes32"},{"internalType":"bytes32","name":"_merkleRoot","type":"bytes32"},{"internalType":"uint256","name":"_drugCount","type":"uint256"},{"internalType":"string","name":"_description","type":"string"}],"name":"createBatchWithMerkleRoot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_batchHash","type":"bytes32"},{"internalType":"string","name":"_reason","type":"string"}],"name":"deactivateBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"drugVerificationCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_batchName","type":"string"},{"internalType":"address","name":"_manufacturer","type":"address"},{"internalType":"uint256","name":"_timestamp","type":"uint256"}],"name":"generateBatchHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"drugCode","type":"string"},{"internalType":"string","name":"manufacturer","type":"string"},{"internalType":"uint256","name":"batchNumber","type":"uint256"},{"internalType":"uint256","name":"manufactureDate","type":"uint256"},{"internalType":"uint256","name":"expiryDate","type":"uint256"},{"internalType":"string","name":"regulatoryApproval","type":"string"},{"internalType":"string","name":"additionalData","type":"string"}],"internalType":"struct DrugVerification.DrugData","name":"_drug","type":"tuple"}],"name":"generateDrugHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_batchHash","type":"bytes32"}],"name":"getBatchInfo","outputs":[{"components":[{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"address","name":"creator","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"drugCount","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"string","name":"description","type":"string"}],"internalType":"struct DrugVerification.BatchInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_drugHash","type":"bytes32"}],"name":"getDrugVerificationCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_drugHash","type":"bytes32"}],"name":"isDrugVerified","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"verifiedDrugs","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"verifierCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_batchHash","type":"bytes32"},{"internalType":"bytes32","name":"_drugHash","type":"bytes32"},{"internalType":"bytes32[]","name":"_proof","type":"bytes32[]"}],"name":"verifyDrugInBatch","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"fun_grantRole":{"entryPoint":199,"id":257,"parameterSlots":1,"returnSlots":1},"fun_grantRole_357":{"entryPoint":71,"id":257,"parameterSlots":1,"returnSlots":1},"fun_grantRole_359":{"entryPoint":361,"id":257,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"608060405234620000425760018055620000193362000047565b506200002533620000c7565b50620000313362000169565b5060405161131a9081620002078239f35b600080fd5b6001600160a01b031660008181527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205490919060ff16620000c357818052816020526040822081835260205260408220600160ff198254161790553391600080516020620015218339815191528180a4600190565b5090565b6001600160a01b031660008181527f1da0b5176dfe03406af5a6eed66ca01dda9b45ac4da671c3fa379cb93717ef8160205260408120549091907f0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea099060ff166200016457808352826020526040832082845260205260408320600160ff1982541617905560008051602062001521833981519152339380a4600190565b505090565b6001600160a01b031660008181527f30433366eac5a2acde383037df453ad4c87319592fed09ed71e70bbbd312d3fc60205260408120549091907ff01dfff628bb2030bb23788fe73598a0f61c4e4b7f7ab01ac604be7f33162b489060ff166200016457808352826020526040832082845260205260408320600160ff1982541617905560008051602062001521833981519152339380a460019056fe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a714610ef3575080631c43e095146101065780631d4aa61f14610e0d578063248a9ca314610ec45780632f2ff15d14610e8557806336568abe14610e3e57806352bcc90d14610e0d5780635b46e13e14610b4257806374aa149614610abf578063753207c7146109c85780638274d0451461080b57806391d14854146107be578063a217fddf146107a2578063b500365e14610767578063b97d8c4714610626578063be8c9fab14610592578063c3f5a1b414610554578063c4233e5c146101b3578063d547741f14610172578063e7705db6146101375763fc68d3dd1461010657600080fd5b346101325760203660031901126101325760043560005260046020526020604060002054604051908152f35b600080fd5b346101325760003660031901126101325760206040517f0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea098152f35b34610132576040366003190112610132576101b1600435610191610f46565b908060005260006020526101ac600160406000200154611119565b6111db565b005b346101325760803660031901126101325760643567ffffffffffffffff8111610132576101e49036906004016110c2565b3360009081527f30433366eac5a2acde383037df453ad4c87319592fed09ed71e70bbbd312d3fc602052604090205460ff16801561051c575b61022690611250565b61022e61129c565b602435156104e1576044351561049c57600435600052600260205260ff6004604060002001541661046057600560405161026781610f5c565b602435815233602082015242604082015260443560608201526001608082015260a081019283526004356000526002602052604060002090805182556001820160018060a01b036020830151166bffffffffffffffffffffffff60a01b8254161790556040810151600283015560608101516003830155608060048301910151151560ff8019835416911617905501905190815167ffffffffffffffff811161044a576103148254610f9a565b601f8111610402575b50602092601f821160011461039e5792819293600092610393575b50508160011b916000199060031b1c19161790555b6040516024358152604435602082015242604082015233907f0fb669f9a7fefdd0910acbdc2e6a292a89e1a4996205b698f244f33aa823bbe5606060043592a360018055005b015190508380610338565b601f198216938360005260206000209160005b8681106103ea57508360019596106103d1575b505050811b01905561034d565b015160001960f88460031b161c191690558380806103c4565b919260206001819286850151815501940192016103b1565b826000526020600020601f830160051c81019160208410610440575b601f0160051c01905b818110610434575061031d565b60008155600101610427565b909150819061041e565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b8152602060048201526014602482015273426174636820616c72656164792065786973747360601b6044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f4472756720636f756e74206d75737420626520706f73697469766500000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081b595c9adb19481c9bdbdd606a1b6044820152606490fd5b503360009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff1661021d565b34610132576020366003190112610132576004356001600160a01b038116908190036101325760005260056020526020604060002054604051908152f35b346101325760603660031901126101325760043567ffffffffffffffff8111610132576105c560209136906004016110c2565b6105cd610f46565b61061b60546040518093866105eb818401978881519384920161107a565b8201906bffffffffffffffffffffffff199060601b16878201526044356034820152036034810184520182610f78565b519020604051908152f35b346101325760403660031901126101325760043560243567ffffffffffffffff81116101325761065a9036906004016110c2565b3360009081527f30433366eac5a2acde383037df453ad4c87319592fed09ed71e70bbbd312d3fc60209081526040909120549092919060ff168015610749575b6106a390611250565b816000526002835260ff60046040600020015416156107115761070c7f6cc795e272aa17edef887810c33965edb8d8f9f3377573bec2dcf05fc03bd540918360005260028552600460406000200160ff198154169055604051918291868352339683019061109d565b0390a3005b60405162461bcd60e51b815260048101849052601060248201526f4261746368206e6f742061637469766560801b6044820152606490fd5b5060008080528084526040808220338352855290205460ff1661069a565b346101325760003660031901126101325760206040517ff01dfff628bb2030bb23788fe73598a0f61c4e4b7f7ab01ac604be7f33162b488152f35b3461013257600036600319011261013257602060405160008152f35b34610132576040366003190112610132576107d7610f46565b600435600052600060205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b3461013257602060031981813601126101325767ffffffffffffffff6004358181116101325761010080938236030112610132576040519283018381108382111761044a5760405280600401358281116101325761086f90600436918401016110c2565b835260248101358281116101325761088d90600436918401016110c2565b928481019384526044820135838111610132576108b090600436918501016110c2565b916040820192835260608201936064820135855260808301906084830135825260a084019260a4810135845260c4810135828111610132576108f890600436918401016110c2565b9160c0860192835260e4820135908111610132573691016004019061091c916110c2565b938460e082015251965194519551915192519051926040519687968a8089018b819c51928391019161094d9261107a565b8801815191828d8084019201916109639261107a565b01815191828c8084019201916109789261107a565b0192898401526040830152606082015281519182886080840192019161099d9261107a565b018151918287608084019201916109b39261107a565b010360608101825260800161061b9082610f78565b346101325760208060031936011261013257606060a06040516109ea81610f5c565b6000815260008482015260006040820152600083820152600060808201520152600435600052600281526040600020610abb60405191610a2983610f5c565b8054835260018060a01b0390816001820154169185850192835260028201546040860190815260038301549160608701928352610a79600560ff6004870154169560808a01961515875201610fd4565b9460a08801958652604051988998818a5251908901525116604087015251606086015251608085015251151560a08401525160c08084015260e083019061109d565b0390f35b3461013257602036600319011261013257600435600052600260205260406000208054610abb60018060a01b03600184015416926002810154906003810154610b12600560ff6004850154169301610fd4565b9260405196879687526020870152604086015260608501521515608084015260c060a084015260c083019061109d565b346101325760603660031901126101325767ffffffffffffffff602460043560443582358482116101325736602383011215610132578160040135948511610df85760059085821b60405193602097610b9d89840187610f78565b85528688860192820101913683116101325787899201905b838210610de957505050507f0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea0960005260008652604060002033600052865260ff604060002054168015610dc7575b15610d8b57610c1061129c565b8360005260028652604060002060ff60048201541615610d475754948515610d145750600093815b8451861015610c7f5785841b85018801519081811015610c6c576000528752610c6660406000205b956112bf565b94610c38565b906000528752610c666040600020610c60565b87945086149283610cca575b506040519183835242858401527f1bad957772d37d622630f431a184d6e6932abfe1ddf17b738b3e6b032071591960403394a460018055604051908152f35b82600052600385526040600020600160ff19825416179055600485526040600020610cf581546112bf565b90553360005284526040600020610d0c81546112bf565b905584610c8b565b86600d6064926040519262461bcd60e51b845260048401528201526c092dcecc2d8d2c840c4c2e8c6d609b1b6044820152fd5b60405162461bcd60e51b815260048101889052601b818801527f4261746368206e6f7420666f756e64206f7220696e61637469766500000000006044820152606490fd5b60405162461bcd60e51b815260048101879052601581870152742ab730baba3437b934bd32b2103b32b934b334b2b960591b6044820152606490fd5b506000805260008652604060002033600052865260ff60406000205416610c03565b81358152908201908201610bb5565b83634e487b7160e01b60005260416004526000fd5b34610132576020366003190112610132576004356000526003602052602060ff604060002054166040519015158152f35b3461013257604036600319011261013257610e57610f46565b336001600160a01b03821603610e73576101b1906004356111db565b60405163334bd91960e11b8152600490fd5b34610132576040366003190112610132576101b1600435610ea4610f46565b90806000526000602052610ebf600160406000200154611119565b61115d565b346101325760203660031901126101325760043560005260006020526020600160406000200154604051908152f35b34610132576020366003190112610132576004359063ffffffff60e01b821680920361013257602091637965db0b60e01b8114908115610f35575b5015158152f35b6301ffc9a760e01b14905083610f2e565b602435906001600160a01b038216820361013257565b60c0810190811067ffffffffffffffff82111761044a57604052565b90601f8019910116810190811067ffffffffffffffff82111761044a57604052565b90600182811c92168015610fca575b6020831014610fb457565b634e487b7160e01b600052602260045260246000fd5b91607f1691610fa9565b9060405191826000825492610fe884610f9a565b9081845260019485811690816000146110575750600114611014575b505061101292500383610f78565b565b9093915060005260209081600020936000915b81831061103f57505061101293508201013880611004565b85548884018501529485019487945091830191611027565b91505061101294506020925060ff191682840152151560051b8201013880611004565b60005b83811061108d5750506000910152565b818101518382015260200161107d565b906020916110b68151809281855285808601910161107a565b601f01601f1916010190565b81601f820112156101325780359067ffffffffffffffff821161044a57604051926110f7601f8401601f191660200185610f78565b8284526020838301011161013257816000926020809301838601378301015290565b80600052600060205260406000203360005260205260ff604060002054161561113f5750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b9060009180835282602052604083209160018060a01b03169182845260205260ff604084205416156000146111d657808352826020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b9060009180835282602052604083209160018060a01b03169182845260205260ff6040842054166000146111d65780835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b1561125757565b60405162461bcd60e51b815260206004820152601a60248201527f556e617574686f72697a65642062617463682063726561746f720000000000006044820152606490fd5b6002600154146112ad576002600155565b604051633ee5aeb560e01b8152600490fd5b60001981146112ce5760010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122070677d3f7e29af26340f59de9ec5e7ae33a50ebc0c59c3e5a10ff6de1849bb7e64736f6c634300081400332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x42 JUMPI PUSH1 0x1 DUP1 SSTORE PUSH3 0x19 CALLER PUSH3 0x47 JUMP JUMPDEST POP PUSH3 0x25 CALLER PUSH3 0xC7 JUMP JUMPDEST POP PUSH3 0x31 CALLER PUSH3 0x169 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x131A SWAP1 DUP2 PUSH3 0x207 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0xC3 JUMPI DUP2 DUP1 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1521 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x1DA0B5176DFE03406AF5A6EED66CA01DDA9B45AC4DA671C3FA379CB93717EF81 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 SWAP1 PUSH1 0xFF AND PUSH3 0x164 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1521 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x30433366EAC5A2ACDE383037DF453AD4C87319592FED09ED71E70BBBD312D3FC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xF01DFFF628BB2030BB23788FE73598A0F61C4E4B7F7AB01AC604BE7F33162B48 SWAP1 PUSH1 0xFF AND PUSH3 0x164 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1521 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF3 JUMPI POP DUP1 PUSH4 0x1C43E095 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x1D4AA61F EQ PUSH2 0xE0D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xEC4 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xE85 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0xE3E JUMPI DUP1 PUSH4 0x52BCC90D EQ PUSH2 0xE0D JUMPI DUP1 PUSH4 0x5B46E13E EQ PUSH2 0xB42 JUMPI DUP1 PUSH4 0x74AA1496 EQ PUSH2 0xABF JUMPI DUP1 PUSH4 0x753207C7 EQ PUSH2 0x9C8 JUMPI DUP1 PUSH4 0x8274D045 EQ PUSH2 0x80B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x7BE JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x7A2 JUMPI DUP1 PUSH4 0xB500365E EQ PUSH2 0x767 JUMPI DUP1 PUSH4 0xB97D8C47 EQ PUSH2 0x626 JUMPI DUP1 PUSH4 0xBE8C9FAB EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0xC3F5A1B4 EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0xC4233E5C EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xE7705DB6 EQ PUSH2 0x137 JUMPI PUSH4 0xFC68D3DD EQ PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH2 0x1B1 PUSH1 0x4 CALLDATALOAD PUSH2 0x191 PUSH2 0xF46 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x1AC PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x11DB JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x132 JUMPI PUSH2 0x1E4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x10C2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x30433366EAC5A2ACDE383037DF453AD4C87319592FED09ED71E70BBBD312D3FC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x51C JUMPI JUMPDEST PUSH2 0x226 SWAP1 PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x22E PUSH2 0x129C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x44 CALLDATALOAD ISZERO PUSH2 0x49C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x460 JUMPI PUSH1 0x5 PUSH1 0x40 MLOAD PUSH2 0x267 DUP2 PUSH2 0xF5C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 PUSH1 0x4 DUP4 ADD SWAP2 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE ADD SWAP1 MLOAD SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x44A JUMPI PUSH2 0x314 DUP3 SLOAD PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x402 JUMPI JUMPDEST POP PUSH1 0x20 SWAP3 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x39E JUMPI SWAP3 DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x393 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x24 CALLDATALOAD DUP2 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0xFB669F9A7FEFDD0910ACBDC2E6A292A89E1A4996205B698F244F33AA823BBE5 PUSH1 0x60 PUSH1 0x4 CALLDATALOAD SWAP3 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST ADD MLOAD SWAP1 POP DUP4 DUP1 PUSH2 0x338 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP4 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT PUSH2 0x3EA JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x3D1 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x34D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP4 DUP1 DUP1 PUSH2 0x3C4 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x3B1 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x440 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x434 JUMPI POP PUSH2 0x31D JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x427 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x41E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x426174636820616C726561647920657869737473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4472756720636F756E74206D75737420626520706F7369746976650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A59081B595C9ADB19481C9BDBDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x21D JUMP JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x132 JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x132 JUMPI PUSH2 0x5C5 PUSH1 0x20 SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x10C2 JUMP JUMPDEST PUSH2 0x5CD PUSH2 0xF46 JUMP JUMPDEST PUSH2 0x61B PUSH1 0x54 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP7 PUSH2 0x5EB DUP2 DUP5 ADD SWAP8 DUP9 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x107A JUMP JUMPDEST DUP3 ADD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 PUSH1 0x60 SHL AND DUP8 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x34 DUP3 ADD MSTORE SUB PUSH1 0x34 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xF78 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x132 JUMPI PUSH2 0x65A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x10C2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x30433366EAC5A2ACDE383037DF453AD4C87319592FED09ED71E70BBBD312D3FC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x749 JUMPI JUMPDEST PUSH2 0x6A3 SWAP1 PUSH2 0x1250 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP4 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x711 JUMPI PUSH2 0x70C PUSH32 0x6CC795E272AA17EDEF887810C33965EDB8D8F9F3377573BEC2DCF05FC03BD540 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP6 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP7 DUP4 MSTORE CALLER SWAP7 DUP4 ADD SWAP1 PUSH2 0x109D JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4261746368206E6F7420616374697665 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 DUP1 MSTORE DUP1 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP6 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x69A JUMP JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xF01DFFF628BB2030BB23788FE73598A0F61C4E4B7F7AB01AC604BE7F33162B48 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH2 0x7D7 PUSH2 0xF46 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x20 PUSH1 0x3 NOT DUP2 DUP2 CALLDATASIZE ADD SLT PUSH2 0x132 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x132 JUMPI PUSH2 0x100 DUP1 SWAP4 DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x132 JUMPI PUSH1 0x40 MLOAD SWAP3 DUP4 ADD DUP4 DUP2 LT DUP4 DUP3 GT OR PUSH2 0x44A JUMPI PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 ADD CALLDATALOAD DUP3 DUP2 GT PUSH2 0x132 JUMPI PUSH2 0x86F SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH2 0x10C2 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x24 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT PUSH2 0x132 JUMPI PUSH2 0x88D SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH2 0x10C2 JUMP JUMPDEST SWAP3 DUP5 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0x44 DUP3 ADD CALLDATALOAD DUP4 DUP2 GT PUSH2 0x132 JUMPI PUSH2 0x8B0 SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP6 ADD ADD PUSH2 0x10C2 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x60 DUP3 ADD SWAP4 PUSH1 0x64 DUP3 ADD CALLDATALOAD DUP6 MSTORE PUSH1 0x80 DUP4 ADD SWAP1 PUSH1 0x84 DUP4 ADD CALLDATALOAD DUP3 MSTORE PUSH1 0xA0 DUP5 ADD SWAP3 PUSH1 0xA4 DUP2 ADD CALLDATALOAD DUP5 MSTORE PUSH1 0xC4 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT PUSH2 0x132 JUMPI PUSH2 0x8F8 SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH2 0x10C2 JUMP JUMPDEST SWAP2 PUSH1 0xC0 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0xE4 DUP3 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x132 JUMPI CALLDATASIZE SWAP2 ADD PUSH1 0x4 ADD SWAP1 PUSH2 0x91C SWAP2 PUSH2 0x10C2 JUMP JUMPDEST SWAP4 DUP5 PUSH1 0xE0 DUP3 ADD MSTORE MLOAD SWAP7 MLOAD SWAP5 MLOAD SWAP6 MLOAD SWAP2 MLOAD SWAP3 MLOAD SWAP1 MLOAD SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP11 DUP1 DUP10 ADD DUP12 DUP2 SWAP13 MLOAD SWAP3 DUP4 SWAP2 ADD SWAP2 PUSH2 0x94D SWAP3 PUSH2 0x107A JUMP JUMPDEST DUP9 ADD DUP2 MLOAD SWAP2 DUP3 DUP14 DUP1 DUP5 ADD SWAP3 ADD SWAP2 PUSH2 0x963 SWAP3 PUSH2 0x107A JUMP JUMPDEST ADD DUP2 MLOAD SWAP2 DUP3 DUP13 DUP1 DUP5 ADD SWAP3 ADD SWAP2 PUSH2 0x978 SWAP3 PUSH2 0x107A JUMP JUMPDEST ADD SWAP3 DUP10 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 DUP9 PUSH1 0x80 DUP5 ADD SWAP3 ADD SWAP2 PUSH2 0x99D SWAP3 PUSH2 0x107A JUMP JUMPDEST ADD DUP2 MLOAD SWAP2 DUP3 DUP8 PUSH1 0x80 DUP5 ADD SWAP3 ADD SWAP2 PUSH2 0x9B3 SWAP3 PUSH2 0x107A JUMP JUMPDEST ADD SUB PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x80 ADD PUSH2 0x61B SWAP1 DUP3 PUSH2 0xF78 JUMP JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x132 JUMPI PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD PUSH2 0x9EA DUP2 PUSH2 0xF5C JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP5 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xABB PUSH1 0x40 MLOAD SWAP2 PUSH2 0xA29 DUP4 PUSH2 0xF5C JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH1 0x1 DUP3 ADD SLOAD AND SWAP2 DUP6 DUP6 ADD SWAP3 DUP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD SLOAD SWAP2 PUSH1 0x60 DUP8 ADD SWAP3 DUP4 MSTORE PUSH2 0xA79 PUSH1 0x5 PUSH1 0xFF PUSH1 0x4 DUP8 ADD SLOAD AND SWAP6 PUSH1 0x80 DUP11 ADD SWAP7 ISZERO ISZERO DUP8 MSTORE ADD PUSH2 0xFD4 JUMP JUMPDEST SWAP5 PUSH1 0xA0 DUP9 ADD SWAP6 DUP7 MSTORE PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 DUP2 DUP11 MSTORE MLOAD SWAP1 DUP10 ADD MSTORE MLOAD AND PUSH1 0x40 DUP8 ADD MSTORE MLOAD PUSH1 0x60 DUP7 ADD MSTORE MLOAD PUSH1 0x80 DUP6 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE MLOAD PUSH1 0xC0 DUP1 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD SWAP1 PUSH2 0x109D JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0xABB PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP5 ADD SLOAD AND SWAP3 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 PUSH1 0x3 DUP2 ADD SLOAD PUSH2 0xB12 PUSH1 0x5 PUSH1 0xFF PUSH1 0x4 DUP6 ADD SLOAD AND SWAP4 ADD PUSH2 0xFD4 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xC0 PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD SWAP1 PUSH2 0x109D JUMP JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x24 PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD DUP3 CALLDATALOAD DUP5 DUP3 GT PUSH2 0x132 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x132 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP5 DUP6 GT PUSH2 0xDF8 JUMPI PUSH1 0x5 SWAP1 DUP6 DUP3 SHL PUSH1 0x40 MLOAD SWAP4 PUSH1 0x20 SWAP8 PUSH2 0xB9D DUP10 DUP5 ADD DUP8 PUSH2 0xF78 JUMP JUMPDEST DUP6 MSTORE DUP7 DUP9 DUP7 ADD SWAP3 DUP3 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x132 JUMPI DUP8 DUP10 SWAP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0xDE9 JUMPI POP POP POP POP PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 PUSH1 0x0 MSTORE PUSH1 0x0 DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP7 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xDC7 JUMPI JUMPDEST ISZERO PUSH2 0xD8B JUMPI PUSH2 0xC10 PUSH2 0x129C JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x4 DUP3 ADD SLOAD AND ISZERO PUSH2 0xD47 JUMPI SLOAD SWAP5 DUP6 ISZERO PUSH2 0xD14 JUMPI POP PUSH1 0x0 SWAP4 DUP2 JUMPDEST DUP5 MLOAD DUP7 LT ISZERO PUSH2 0xC7F JUMPI DUP6 DUP5 SHL DUP6 ADD DUP9 ADD MLOAD SWAP1 DUP2 DUP2 LT ISZERO PUSH2 0xC6C JUMPI PUSH1 0x0 MSTORE DUP8 MSTORE PUSH2 0xC66 PUSH1 0x40 PUSH1 0x0 KECCAK256 JUMPDEST SWAP6 PUSH2 0x12BF JUMP JUMPDEST SWAP5 PUSH2 0xC38 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE DUP8 MSTORE PUSH2 0xC66 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xC60 JUMP JUMPDEST DUP8 SWAP5 POP DUP7 EQ SWAP3 DUP4 PUSH2 0xCCA JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP4 DUP4 MSTORE TIMESTAMP DUP6 DUP5 ADD MSTORE PUSH32 0x1BAD957772D37D622630F431A184D6E6932ABFE1DDF17B738B3E6B0320715919 PUSH1 0x40 CALLER SWAP5 LOG4 PUSH1 0x1 DUP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x4 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xCF5 DUP2 SLOAD PUSH2 0x12BF JUMP JUMPDEST SWAP1 SSTORE CALLER PUSH1 0x0 MSTORE DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xD0C DUP2 SLOAD PUSH2 0x12BF JUMP JUMPDEST SWAP1 SSTORE DUP5 PUSH2 0xC8B JUMP JUMPDEST DUP7 PUSH1 0xD PUSH1 0x64 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH13 0x92DCECC2D8D2C840C4C2E8C6D PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1B DUP2 DUP9 ADD MSTORE PUSH32 0x4261746368206E6F7420666F756E64206F7220696E6163746976650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x15 DUP2 DUP8 ADD MSTORE PUSH21 0x2AB730BABA3437B934BD32B2103B32B934B334B2B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 MSTORE PUSH1 0x0 DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP7 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0xC03 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP3 ADD SWAP1 DUP3 ADD PUSH2 0xBB5 JUMP JUMPDEST DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH2 0xE57 PUSH2 0xF46 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0xE73 JUMPI PUSH2 0x1B1 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x11DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH2 0x1B1 PUSH1 0x4 CALLDATALOAD PUSH2 0xEA4 PUSH2 0xF46 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0xEBF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x115D JUMP JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x132 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xF35 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x132 JUMPI JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x44A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x44A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xFCA JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xFB4 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xFA9 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0xFE8 DUP5 PUSH2 0xF9A JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1057 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1014 JUMPI JUMPDEST POP POP PUSH2 0x1012 SWAP3 POP SUB DUP4 PUSH2 0xF78 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x103F JUMPI POP POP PUSH2 0x1012 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1004 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1027 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1012 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x108D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x107D JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x10B6 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x107A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x132 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x10F7 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0xF78 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x132 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x113F JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x11D6 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x11D6 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1257 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642062617463682063726561746F72000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x12AD JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x12CE JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x677D3F7E29AF26340F59DE9EC5E7AE33A5 0xE 0xBC 0xC MSIZE 0xC3 0xE5 LOG1 0xF 0xF6 0xDE XOR 0x49 0xBB PUSH31 0x64736F6C634300081400332F8788117E7EFF1D82E926EC794901D17C78024A POP 0x27 MULMOD BLOCKHASH ADDRESS GASLIMIT BLOCKHASH 0xA7 CALLER PUSH6 0x6F0D00000000 ","sourceMap":"453:5139:9:-:0;;;;;;1857:1:4;;;2337:42:9;2368:10;2337:42;:::i;:::-;;2389:37;2368:10;2389:37;:::i;:::-;;2436:42;2368:10;2436:42;:::i;:::-;;453:5139;;;;;;;;;;;;;6155:316:0;-1:-1:-1;;;;;453:5139:9;2241:4:0;453:5139:9;;;;;;;;;;2241:4:0;;453:5139:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;735:10:2;6346:40:0;-1:-1:-1;;;;;;;;;;;6346:40:0;;;453:5139:9;6400:11:0;:::o;6248:217::-;6442:12;;:::o;6155:316::-;-1:-1:-1;;;;;453:5139:9;2930:6:0;453:5139:9;;;;;;;;;;2930:6:0;;453:5139:9;564:26;;453:5139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:2;6346:40:0;;;453:5139:9;6400:11:0;:::o;6248:217::-;6442:12;;;:::o;6155:316::-;-1:-1:-1;;;;;453:5139:9;2930:6:0;453:5139:9;;;;;;;;;;2930:6:0;;453:5139:9;641:31;;453:5139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:2;6346:40:0;;;453:5139:9;6400:11:0;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":3910,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_string":{"entryPoint":4290,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":4253,"id":null,"parameterSlots":2,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":4052,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":4218,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3994,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":3960,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_17997":{"entryPoint":3932,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkRole":{"entryPoint":4377,"id":94,"parameterSlots":1,"returnSlots":0},"fun_grantRole":{"entryPoint":4445,"id":257,"parameterSlots":2,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":4764,"id":566,"parameterSlots":0,"returnSlots":0},"fun_revokeRole":{"entryPoint":4571,"id":295,"parameterSlots":2,"returnSlots":1},"increment_uint256":{"entryPoint":4799,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_978a":{"entryPoint":4688,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a714610ef3575080631c43e095146101065780631d4aa61f14610e0d578063248a9ca314610ec45780632f2ff15d14610e8557806336568abe14610e3e57806352bcc90d14610e0d5780635b46e13e14610b4257806374aa149614610abf578063753207c7146109c85780638274d0451461080b57806391d14854146107be578063a217fddf146107a2578063b500365e14610767578063b97d8c4714610626578063be8c9fab14610592578063c3f5a1b414610554578063c4233e5c146101b3578063d547741f14610172578063e7705db6146101375763fc68d3dd1461010657600080fd5b346101325760203660031901126101325760043560005260046020526020604060002054604051908152f35b600080fd5b346101325760003660031901126101325760206040517f0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea098152f35b34610132576040366003190112610132576101b1600435610191610f46565b908060005260006020526101ac600160406000200154611119565b6111db565b005b346101325760803660031901126101325760643567ffffffffffffffff8111610132576101e49036906004016110c2565b3360009081527f30433366eac5a2acde383037df453ad4c87319592fed09ed71e70bbbd312d3fc602052604090205460ff16801561051c575b61022690611250565b61022e61129c565b602435156104e1576044351561049c57600435600052600260205260ff6004604060002001541661046057600560405161026781610f5c565b602435815233602082015242604082015260443560608201526001608082015260a081019283526004356000526002602052604060002090805182556001820160018060a01b036020830151166bffffffffffffffffffffffff60a01b8254161790556040810151600283015560608101516003830155608060048301910151151560ff8019835416911617905501905190815167ffffffffffffffff811161044a576103148254610f9a565b601f8111610402575b50602092601f821160011461039e5792819293600092610393575b50508160011b916000199060031b1c19161790555b6040516024358152604435602082015242604082015233907f0fb669f9a7fefdd0910acbdc2e6a292a89e1a4996205b698f244f33aa823bbe5606060043592a360018055005b015190508380610338565b601f198216938360005260206000209160005b8681106103ea57508360019596106103d1575b505050811b01905561034d565b015160001960f88460031b161c191690558380806103c4565b919260206001819286850151815501940192016103b1565b826000526020600020601f830160051c81019160208410610440575b601f0160051c01905b818110610434575061031d565b60008155600101610427565b909150819061041e565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b8152602060048201526014602482015273426174636820616c72656164792065786973747360601b6044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f4472756720636f756e74206d75737420626520706f73697469766500000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081b595c9adb19481c9bdbdd606a1b6044820152606490fd5b503360009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff1661021d565b34610132576020366003190112610132576004356001600160a01b038116908190036101325760005260056020526020604060002054604051908152f35b346101325760603660031901126101325760043567ffffffffffffffff8111610132576105c560209136906004016110c2565b6105cd610f46565b61061b60546040518093866105eb818401978881519384920161107a565b8201906bffffffffffffffffffffffff199060601b16878201526044356034820152036034810184520182610f78565b519020604051908152f35b346101325760403660031901126101325760043560243567ffffffffffffffff81116101325761065a9036906004016110c2565b3360009081527f30433366eac5a2acde383037df453ad4c87319592fed09ed71e70bbbd312d3fc60209081526040909120549092919060ff168015610749575b6106a390611250565b816000526002835260ff60046040600020015416156107115761070c7f6cc795e272aa17edef887810c33965edb8d8f9f3377573bec2dcf05fc03bd540918360005260028552600460406000200160ff198154169055604051918291868352339683019061109d565b0390a3005b60405162461bcd60e51b815260048101849052601060248201526f4261746368206e6f742061637469766560801b6044820152606490fd5b5060008080528084526040808220338352855290205460ff1661069a565b346101325760003660031901126101325760206040517ff01dfff628bb2030bb23788fe73598a0f61c4e4b7f7ab01ac604be7f33162b488152f35b3461013257600036600319011261013257602060405160008152f35b34610132576040366003190112610132576107d7610f46565b600435600052600060205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b3461013257602060031981813601126101325767ffffffffffffffff6004358181116101325761010080938236030112610132576040519283018381108382111761044a5760405280600401358281116101325761086f90600436918401016110c2565b835260248101358281116101325761088d90600436918401016110c2565b928481019384526044820135838111610132576108b090600436918501016110c2565b916040820192835260608201936064820135855260808301906084830135825260a084019260a4810135845260c4810135828111610132576108f890600436918401016110c2565b9160c0860192835260e4820135908111610132573691016004019061091c916110c2565b938460e082015251965194519551915192519051926040519687968a8089018b819c51928391019161094d9261107a565b8801815191828d8084019201916109639261107a565b01815191828c8084019201916109789261107a565b0192898401526040830152606082015281519182886080840192019161099d9261107a565b018151918287608084019201916109b39261107a565b010360608101825260800161061b9082610f78565b346101325760208060031936011261013257606060a06040516109ea81610f5c565b6000815260008482015260006040820152600083820152600060808201520152600435600052600281526040600020610abb60405191610a2983610f5c565b8054835260018060a01b0390816001820154169185850192835260028201546040860190815260038301549160608701928352610a79600560ff6004870154169560808a01961515875201610fd4565b9460a08801958652604051988998818a5251908901525116604087015251606086015251608085015251151560a08401525160c08084015260e083019061109d565b0390f35b3461013257602036600319011261013257600435600052600260205260406000208054610abb60018060a01b03600184015416926002810154906003810154610b12600560ff6004850154169301610fd4565b9260405196879687526020870152604086015260608501521515608084015260c060a084015260c083019061109d565b346101325760603660031901126101325767ffffffffffffffff602460043560443582358482116101325736602383011215610132578160040135948511610df85760059085821b60405193602097610b9d89840187610f78565b85528688860192820101913683116101325787899201905b838210610de957505050507f0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea0960005260008652604060002033600052865260ff604060002054168015610dc7575b15610d8b57610c1061129c565b8360005260028652604060002060ff60048201541615610d475754948515610d145750600093815b8451861015610c7f5785841b85018801519081811015610c6c576000528752610c6660406000205b956112bf565b94610c38565b906000528752610c666040600020610c60565b87945086149283610cca575b506040519183835242858401527f1bad957772d37d622630f431a184d6e6932abfe1ddf17b738b3e6b032071591960403394a460018055604051908152f35b82600052600385526040600020600160ff19825416179055600485526040600020610cf581546112bf565b90553360005284526040600020610d0c81546112bf565b905584610c8b565b86600d6064926040519262461bcd60e51b845260048401528201526c092dcecc2d8d2c840c4c2e8c6d609b1b6044820152fd5b60405162461bcd60e51b815260048101889052601b818801527f4261746368206e6f7420666f756e64206f7220696e61637469766500000000006044820152606490fd5b60405162461bcd60e51b815260048101879052601581870152742ab730baba3437b934bd32b2103b32b934b334b2b960591b6044820152606490fd5b506000805260008652604060002033600052865260ff60406000205416610c03565b81358152908201908201610bb5565b83634e487b7160e01b60005260416004526000fd5b34610132576020366003190112610132576004356000526003602052602060ff604060002054166040519015158152f35b3461013257604036600319011261013257610e57610f46565b336001600160a01b03821603610e73576101b1906004356111db565b60405163334bd91960e11b8152600490fd5b34610132576040366003190112610132576101b1600435610ea4610f46565b90806000526000602052610ebf600160406000200154611119565b61115d565b346101325760203660031901126101325760043560005260006020526020600160406000200154604051908152f35b34610132576020366003190112610132576004359063ffffffff60e01b821680920361013257602091637965db0b60e01b8114908115610f35575b5015158152f35b6301ffc9a760e01b14905083610f2e565b602435906001600160a01b038216820361013257565b60c0810190811067ffffffffffffffff82111761044a57604052565b90601f8019910116810190811067ffffffffffffffff82111761044a57604052565b90600182811c92168015610fca575b6020831014610fb457565b634e487b7160e01b600052602260045260246000fd5b91607f1691610fa9565b9060405191826000825492610fe884610f9a565b9081845260019485811690816000146110575750600114611014575b505061101292500383610f78565b565b9093915060005260209081600020936000915b81831061103f57505061101293508201013880611004565b85548884018501529485019487945091830191611027565b91505061101294506020925060ff191682840152151560051b8201013880611004565b60005b83811061108d5750506000910152565b818101518382015260200161107d565b906020916110b68151809281855285808601910161107a565b601f01601f1916010190565b81601f820112156101325780359067ffffffffffffffff821161044a57604051926110f7601f8401601f191660200185610f78565b8284526020838301011161013257816000926020809301838601378301015290565b80600052600060205260406000203360005260205260ff604060002054161561113f5750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b9060009180835282602052604083209160018060a01b03169182845260205260ff604084205416156000146111d657808352826020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b9060009180835282602052604083209160018060a01b03169182845260205260ff6040842054166000146111d65780835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b1561125757565b60405162461bcd60e51b815260206004820152601a60248201527f556e617574686f72697a65642062617463682063726561746f720000000000006044820152606490fd5b6002600154146112ad576002600155565b604051633ee5aeb560e01b8152600490fd5b60001981146112ce5760010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122070677d3f7e29af26340f59de9ec5e7ae33a50ebc0c59c3e5a10ff6de1849bb7e64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF3 JUMPI POP DUP1 PUSH4 0x1C43E095 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x1D4AA61F EQ PUSH2 0xE0D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xEC4 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xE85 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0xE3E JUMPI DUP1 PUSH4 0x52BCC90D EQ PUSH2 0xE0D JUMPI DUP1 PUSH4 0x5B46E13E EQ PUSH2 0xB42 JUMPI DUP1 PUSH4 0x74AA1496 EQ PUSH2 0xABF JUMPI DUP1 PUSH4 0x753207C7 EQ PUSH2 0x9C8 JUMPI DUP1 PUSH4 0x8274D045 EQ PUSH2 0x80B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x7BE JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x7A2 JUMPI DUP1 PUSH4 0xB500365E EQ PUSH2 0x767 JUMPI DUP1 PUSH4 0xB97D8C47 EQ PUSH2 0x626 JUMPI DUP1 PUSH4 0xBE8C9FAB EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0xC3F5A1B4 EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0xC4233E5C EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xE7705DB6 EQ PUSH2 0x137 JUMPI PUSH4 0xFC68D3DD EQ PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH2 0x1B1 PUSH1 0x4 CALLDATALOAD PUSH2 0x191 PUSH2 0xF46 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x1AC PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x11DB JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x132 JUMPI PUSH2 0x1E4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x10C2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x30433366EAC5A2ACDE383037DF453AD4C87319592FED09ED71E70BBBD312D3FC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x51C JUMPI JUMPDEST PUSH2 0x226 SWAP1 PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x22E PUSH2 0x129C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x44 CALLDATALOAD ISZERO PUSH2 0x49C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x460 JUMPI PUSH1 0x5 PUSH1 0x40 MLOAD PUSH2 0x267 DUP2 PUSH2 0xF5C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 PUSH1 0x4 DUP4 ADD SWAP2 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE ADD SWAP1 MLOAD SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x44A JUMPI PUSH2 0x314 DUP3 SLOAD PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x402 JUMPI JUMPDEST POP PUSH1 0x20 SWAP3 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x39E JUMPI SWAP3 DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x393 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x24 CALLDATALOAD DUP2 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0xFB669F9A7FEFDD0910ACBDC2E6A292A89E1A4996205B698F244F33AA823BBE5 PUSH1 0x60 PUSH1 0x4 CALLDATALOAD SWAP3 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST ADD MLOAD SWAP1 POP DUP4 DUP1 PUSH2 0x338 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP4 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT PUSH2 0x3EA JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x3D1 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x34D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP4 DUP1 DUP1 PUSH2 0x3C4 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x3B1 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x440 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x434 JUMPI POP PUSH2 0x31D JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x427 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x41E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x426174636820616C726561647920657869737473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4472756720636F756E74206D75737420626520706F7369746976650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A59081B595C9ADB19481C9BDBDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x21D JUMP JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x132 JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x132 JUMPI PUSH2 0x5C5 PUSH1 0x20 SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x10C2 JUMP JUMPDEST PUSH2 0x5CD PUSH2 0xF46 JUMP JUMPDEST PUSH2 0x61B PUSH1 0x54 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP7 PUSH2 0x5EB DUP2 DUP5 ADD SWAP8 DUP9 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x107A JUMP JUMPDEST DUP3 ADD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 PUSH1 0x60 SHL AND DUP8 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x34 DUP3 ADD MSTORE SUB PUSH1 0x34 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xF78 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x132 JUMPI PUSH2 0x65A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x10C2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x30433366EAC5A2ACDE383037DF453AD4C87319592FED09ED71E70BBBD312D3FC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x749 JUMPI JUMPDEST PUSH2 0x6A3 SWAP1 PUSH2 0x1250 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP4 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x711 JUMPI PUSH2 0x70C PUSH32 0x6CC795E272AA17EDEF887810C33965EDB8D8F9F3377573BEC2DCF05FC03BD540 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP6 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP7 DUP4 MSTORE CALLER SWAP7 DUP4 ADD SWAP1 PUSH2 0x109D JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4261746368206E6F7420616374697665 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 DUP1 MSTORE DUP1 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP6 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x69A JUMP JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xF01DFFF628BB2030BB23788FE73598A0F61C4E4B7F7AB01AC604BE7F33162B48 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH2 0x7D7 PUSH2 0xF46 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x20 PUSH1 0x3 NOT DUP2 DUP2 CALLDATASIZE ADD SLT PUSH2 0x132 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x132 JUMPI PUSH2 0x100 DUP1 SWAP4 DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x132 JUMPI PUSH1 0x40 MLOAD SWAP3 DUP4 ADD DUP4 DUP2 LT DUP4 DUP3 GT OR PUSH2 0x44A JUMPI PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 ADD CALLDATALOAD DUP3 DUP2 GT PUSH2 0x132 JUMPI PUSH2 0x86F SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH2 0x10C2 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x24 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT PUSH2 0x132 JUMPI PUSH2 0x88D SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH2 0x10C2 JUMP JUMPDEST SWAP3 DUP5 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0x44 DUP3 ADD CALLDATALOAD DUP4 DUP2 GT PUSH2 0x132 JUMPI PUSH2 0x8B0 SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP6 ADD ADD PUSH2 0x10C2 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x60 DUP3 ADD SWAP4 PUSH1 0x64 DUP3 ADD CALLDATALOAD DUP6 MSTORE PUSH1 0x80 DUP4 ADD SWAP1 PUSH1 0x84 DUP4 ADD CALLDATALOAD DUP3 MSTORE PUSH1 0xA0 DUP5 ADD SWAP3 PUSH1 0xA4 DUP2 ADD CALLDATALOAD DUP5 MSTORE PUSH1 0xC4 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT PUSH2 0x132 JUMPI PUSH2 0x8F8 SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH2 0x10C2 JUMP JUMPDEST SWAP2 PUSH1 0xC0 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0xE4 DUP3 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x132 JUMPI CALLDATASIZE SWAP2 ADD PUSH1 0x4 ADD SWAP1 PUSH2 0x91C SWAP2 PUSH2 0x10C2 JUMP JUMPDEST SWAP4 DUP5 PUSH1 0xE0 DUP3 ADD MSTORE MLOAD SWAP7 MLOAD SWAP5 MLOAD SWAP6 MLOAD SWAP2 MLOAD SWAP3 MLOAD SWAP1 MLOAD SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP11 DUP1 DUP10 ADD DUP12 DUP2 SWAP13 MLOAD SWAP3 DUP4 SWAP2 ADD SWAP2 PUSH2 0x94D SWAP3 PUSH2 0x107A JUMP JUMPDEST DUP9 ADD DUP2 MLOAD SWAP2 DUP3 DUP14 DUP1 DUP5 ADD SWAP3 ADD SWAP2 PUSH2 0x963 SWAP3 PUSH2 0x107A JUMP JUMPDEST ADD DUP2 MLOAD SWAP2 DUP3 DUP13 DUP1 DUP5 ADD SWAP3 ADD SWAP2 PUSH2 0x978 SWAP3 PUSH2 0x107A JUMP JUMPDEST ADD SWAP3 DUP10 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 DUP9 PUSH1 0x80 DUP5 ADD SWAP3 ADD SWAP2 PUSH2 0x99D SWAP3 PUSH2 0x107A JUMP JUMPDEST ADD DUP2 MLOAD SWAP2 DUP3 DUP8 PUSH1 0x80 DUP5 ADD SWAP3 ADD SWAP2 PUSH2 0x9B3 SWAP3 PUSH2 0x107A JUMP JUMPDEST ADD SUB PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x80 ADD PUSH2 0x61B SWAP1 DUP3 PUSH2 0xF78 JUMP JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x132 JUMPI PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD PUSH2 0x9EA DUP2 PUSH2 0xF5C JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP5 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xABB PUSH1 0x40 MLOAD SWAP2 PUSH2 0xA29 DUP4 PUSH2 0xF5C JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH1 0x1 DUP3 ADD SLOAD AND SWAP2 DUP6 DUP6 ADD SWAP3 DUP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD SLOAD SWAP2 PUSH1 0x60 DUP8 ADD SWAP3 DUP4 MSTORE PUSH2 0xA79 PUSH1 0x5 PUSH1 0xFF PUSH1 0x4 DUP8 ADD SLOAD AND SWAP6 PUSH1 0x80 DUP11 ADD SWAP7 ISZERO ISZERO DUP8 MSTORE ADD PUSH2 0xFD4 JUMP JUMPDEST SWAP5 PUSH1 0xA0 DUP9 ADD SWAP6 DUP7 MSTORE PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 DUP2 DUP11 MSTORE MLOAD SWAP1 DUP10 ADD MSTORE MLOAD AND PUSH1 0x40 DUP8 ADD MSTORE MLOAD PUSH1 0x60 DUP7 ADD MSTORE MLOAD PUSH1 0x80 DUP6 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE MLOAD PUSH1 0xC0 DUP1 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD SWAP1 PUSH2 0x109D JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0xABB PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP5 ADD SLOAD AND SWAP3 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 PUSH1 0x3 DUP2 ADD SLOAD PUSH2 0xB12 PUSH1 0x5 PUSH1 0xFF PUSH1 0x4 DUP6 ADD SLOAD AND SWAP4 ADD PUSH2 0xFD4 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xC0 PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD SWAP1 PUSH2 0x109D JUMP JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x24 PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD DUP3 CALLDATALOAD DUP5 DUP3 GT PUSH2 0x132 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x132 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP5 DUP6 GT PUSH2 0xDF8 JUMPI PUSH1 0x5 SWAP1 DUP6 DUP3 SHL PUSH1 0x40 MLOAD SWAP4 PUSH1 0x20 SWAP8 PUSH2 0xB9D DUP10 DUP5 ADD DUP8 PUSH2 0xF78 JUMP JUMPDEST DUP6 MSTORE DUP7 DUP9 DUP7 ADD SWAP3 DUP3 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x132 JUMPI DUP8 DUP10 SWAP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0xDE9 JUMPI POP POP POP POP PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 PUSH1 0x0 MSTORE PUSH1 0x0 DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP7 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xDC7 JUMPI JUMPDEST ISZERO PUSH2 0xD8B JUMPI PUSH2 0xC10 PUSH2 0x129C JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x4 DUP3 ADD SLOAD AND ISZERO PUSH2 0xD47 JUMPI SLOAD SWAP5 DUP6 ISZERO PUSH2 0xD14 JUMPI POP PUSH1 0x0 SWAP4 DUP2 JUMPDEST DUP5 MLOAD DUP7 LT ISZERO PUSH2 0xC7F JUMPI DUP6 DUP5 SHL DUP6 ADD DUP9 ADD MLOAD SWAP1 DUP2 DUP2 LT ISZERO PUSH2 0xC6C JUMPI PUSH1 0x0 MSTORE DUP8 MSTORE PUSH2 0xC66 PUSH1 0x40 PUSH1 0x0 KECCAK256 JUMPDEST SWAP6 PUSH2 0x12BF JUMP JUMPDEST SWAP5 PUSH2 0xC38 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE DUP8 MSTORE PUSH2 0xC66 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xC60 JUMP JUMPDEST DUP8 SWAP5 POP DUP7 EQ SWAP3 DUP4 PUSH2 0xCCA JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP4 DUP4 MSTORE TIMESTAMP DUP6 DUP5 ADD MSTORE PUSH32 0x1BAD957772D37D622630F431A184D6E6932ABFE1DDF17B738B3E6B0320715919 PUSH1 0x40 CALLER SWAP5 LOG4 PUSH1 0x1 DUP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x4 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xCF5 DUP2 SLOAD PUSH2 0x12BF JUMP JUMPDEST SWAP1 SSTORE CALLER PUSH1 0x0 MSTORE DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xD0C DUP2 SLOAD PUSH2 0x12BF JUMP JUMPDEST SWAP1 SSTORE DUP5 PUSH2 0xC8B JUMP JUMPDEST DUP7 PUSH1 0xD PUSH1 0x64 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH13 0x92DCECC2D8D2C840C4C2E8C6D PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1B DUP2 DUP9 ADD MSTORE PUSH32 0x4261746368206E6F7420666F756E64206F7220696E6163746976650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x15 DUP2 DUP8 ADD MSTORE PUSH21 0x2AB730BABA3437B934BD32B2103B32B934B334B2B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 MSTORE PUSH1 0x0 DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP7 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0xC03 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP3 ADD SWAP1 DUP3 ADD PUSH2 0xBB5 JUMP JUMPDEST DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH2 0xE57 PUSH2 0xF46 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0xE73 JUMPI PUSH2 0x1B1 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x11DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH2 0x1B1 PUSH1 0x4 CALLDATALOAD PUSH2 0xEA4 PUSH2 0xF46 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0xEBF PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x115D JUMP JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x132 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xF35 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x132 JUMPI JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x44A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x44A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xFCA JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xFB4 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xFA9 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0xFE8 DUP5 PUSH2 0xF9A JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1057 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1014 JUMPI JUMPDEST POP POP PUSH2 0x1012 SWAP3 POP SUB DUP4 PUSH2 0xF78 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x103F JUMPI POP POP PUSH2 0x1012 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1004 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1027 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1012 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x108D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x107D JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x10B6 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x107A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x132 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x10F7 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0xF78 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x132 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x113F JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x11D6 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x11D6 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1257 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642062617463682063726561746F72000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x12AD JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x12CE JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x677D3F7E29AF26340F59DE9EC5E7AE33A5 0xE 0xBC 0xC MSIZE 0xC3 0xE5 LOG1 0xF 0xF6 0xDE XOR 0x49 0xBB PUSH31 0x64736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"453:5139:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;453:5139:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;453:5139:9;;;;;;;564:26;453:5139;;;;;;;;;-1:-1:-1;;453:5139:9;;;;4723:26:0;453:5139:9;;;;:::i;:::-;;;;;;;;2484:4:0;453:5139:9;;;;3877:22:0;453:5139:9;2484:4:0;:::i;:::-;4723:26;:::i;:::-;453:5139:9;;;;;;;-1:-1:-1;;453:5139:9;;;;;;;;;;;;;;;;;;:::i;:::-;2187:10;453:5139;;;;;;;;;;;;;2159:82;;;;453:5139;2151:138;;;:::i;:::-;2466:103:4;;:::i;:::-;453:5139:9;;2714:25;453:5139;;;;2781:14;453:5139;;;;;;2846:9;453:5139;;;;;;;2846:30;453:5139;;;;;;;;;;:::i;:::-;;;;;2187:10;453:5139;2944:233;;453:5139;3049:15;453:5139;2944:233;;453:5139;;;;2944:233;;453:5139;;;2944:233;;453:5139;2944:233;;;453:5139;;;;;;;2846:9;453:5139;;;;;;;;;;;;;;;;;;;2944:233;;453:5139;;;;;;;;;;;;2944:233;;453:5139;2846:9;453:5139;;;;2944:233;;453:5139;;;;;;;;;2944:233;;453:5139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3049:15;453:5139;;;;2187:10;453:5139;3201:82;453:5139;;;3201:82;;453:5139;;;;;;;;-1:-1:-1;453:5139:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;453:5139:9;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;453:5139:9;;;;;;;;;;;;-1:-1:-1;;;453:5139:9;;;;;;;;;;-1:-1:-1;;;453:5139:9;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;453:5139:9;;;;;;;;;;;;-1:-1:-1;;;453:5139:9;;;;;;;2159:82;-1:-1:-1;2187:10:9;453:5139;;;;;;;;;;;;;2159:82;;453:5139;;;;;;-1:-1:-1;;453:5139:9;;;;;;-1:-1:-1;;;;;453:5139:9;;;;;;;;;;1352:48;453:5139;;;;;;;;;;;;;;;;;;;-1:-1:-1;;453:5139:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;5527:55;;453:5139;;5527:55;;;453:5139;5527:55;;;453:5139;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;5527:55;453:5139;5527:55;;;;;;;:::i;:::-;453:5139;5517:66;;453:5139;;;;;;;;;;;;-1:-1:-1;;453:5139:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;2187:10;453:5139;;;;;;;;;;;;;;;;;;;;2159:82;;;;453:5139;2151:138;;;:::i;:::-;453:5139;;;4206:9;453:5139;;;;;;;4206:30;453:5139;;;;;;4329:49;453:5139;;;;4206:9;453:5139;;;;;;4276:30;453:5139;;;;;;;;;;;;;;;2187:10;453:5139;;;;;:::i;:::-;4329:49;;;453:5139;;;;-1:-1:-1;;;453:5139:9;;;;;;;;;;;;;-1:-1:-1;;;453:5139:9;;;;;;;2159:82;-1:-1:-1;453:5139:9;;;;;;;;;;;2187:10;453:5139;;;;;;;;;2159:82;;453:5139;;;;;;-1:-1:-1;;453:5139:9;;;;;;;641:31;453:5139;;;;;;;;;-1:-1:-1;;453:5139:9;;;;;;;;;;;;;;;;;-1:-1:-1;;453:5139:9;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;5034:10;5058:14;;5086:18;;453:5139;;;;;;5214:24;;453:5139;;;5004:278;;;;;;;453:5139;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;5004:278;453:5139;5004:278;;;;453:5139;5004:278;;;;;:::i;453:5139::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4625:9;453:5139;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;4625:9;453:5139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;453:5139:9;;;;;;;;1187:46;453:5139;;;;;;;;;;;;;;1187:46;;453:5139;;1187:46;;;;453:5139;1187:46;453:5139;1187:46;;453:5139;1187:46;;453:5139;;1187:46;;453:5139;;1187:46;;;:::i;:::-;453:5139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;453:5139:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;564:26;453:5139;;;;;;;;1992:10;453:5139;;;;;;;;;;1969:77;;;;453:5139;;;;2466:103:4;;:::i;:::-;453:5139:9;;;3507:9;453:5139;;;;;;;3546:14;;453:5139;;;;;;3610:30;;;453:5139;;-1:-1:-1;453:5139:9;;2559:27:6;2634:3;453:5139:9;;2616:16:6;;;;;453:5139:9;;;;;;;;;605:5:5;;;;;;453:5139:9;889:135:5;;;2634:3:6;453:5139:9;;889:135:5;605:59;2634:3:6;;:::i;:::-;2601:13;;;605:59:5;889:135;453:5139:9;889:135:5;;;2634:3:6;453:5139:9;;889:135:5;605:59;;2616:16:6;;;;;2016:33;3766:158:9;;;;2596:134:6;453:5139:9;;;;;;;4014:15;453:5139;;;;3947:83;453:5139;1992:10;3947:83;;453:5139;;;;;;;;;3766:158;453:5139;;;;;;;;;;;;;;;;;;;;;;;;3838:34;453:5139;;3838:34;:::i;:::-;453:5139;;1992:10;453:5139;;;;;;;3886:27;453:5139;;3886:27;:::i;:::-;453:5139;;3766:158;;;453:5139;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;453:5139:9;;;;;;;;-1:-1:-1;;;453:5139:9;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;453:5139:9;;;;;;;;;;;;;-1:-1:-1;;;453:5139:9;;;;;;;1969:77;453:5139;;;;;;;;;;1992:10;453:5139;;;;;;;;;;1969:77;;453:5139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;453:5139:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;453:5139:9;;;;;;:::i;:::-;735:10:2;-1:-1:-1;;;;;453:5139:9;;5397:34:0;5393:102;;5505:37;453:5139:9;;;5505:37:0;:::i;5393:102::-;453:5139:9;;-1:-1:-1;;;5454:30:0;;453:5139:9;;5454:30:0;453:5139:9;;;;;;-1:-1:-1;;453:5139:9;;;;4306:25:0;453:5139:9;;;;:::i;:::-;;;;;;;;2484:4:0;453:5139:9;;;;3877:22:0;453:5139:9;2484:4:0;:::i;:::-;4306:25;:::i;453:5139:9:-;;;;;;-1:-1:-1;;453:5139:9;;;;;;;;;;;;;;;;3877:22:0;453:5139:9;;;;;;;;;;;;;-1:-1:-1;;453:5139:9;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2649:47:0;;;:87;;;;453:5139:9;;;;;;;2649:87:0;-1:-1:-1;;;829:40:7;;-1:-1:-1;2649:87:0;;;453:5139:9;;;;-1:-1:-1;;;;;453:5139:9;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;453:5139:9;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;453:5139:9;;;;-1:-1:-1;453:5139:9;;-1:-1:-1;453:5139:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;453:5139:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;453:5139:9;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;453:5139:9;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;453:5139:9;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;453:5139:9;;;;;;;;;;;;;;:::o;3175:103:0:-;453:5139:9;2930:6:0;453:5139:9;2930:6:0;453:5139:9;;;2930:6:0;453:5139:9;735:10:2;2930:6:0;453:5139:9;;;;;2930:6:0;453:5139:9;;;3495:23:0;3491:108;;3175:103;:::o;3491:108::-;453:5139:9;;;;3541:47:0;;;;;;735:10:2;3541:47:0;;;453:5139:9;;;;;3541:47:0;6155:316;;2930:6;453:5139:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6252:23:0;6248:217;453:5139:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6346:40:0;735:10:2;6346:40:0;;;453:5139:9;6400:11:0;:::o;6248:217::-;6442:12;;;:::o;6708:317::-;;2930:6;453:5139:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6802:217:0;453:5139:9;;;;;;;;;;;;;;;;;;;;;;;;;;;6900:40:0;735:10:2;6900:40:0;;;453:5139:9;6954:11:0;:::o;453:5139:9:-;;;;:::o;:::-;;;-1:-1:-1;;;453:5139:9;;;;;;;;;;;;;;;;;;;;2575:307:4;1899:1;2702:7;453:5139:9;2702:18:4;2698:86;;1899:1;2702:7;453:5139:9;2575:307:4:o;2698:86::-;453:5139:9;;-1:-1:-1;;;2743:30:4;;;;;453:5139:9;-1:-1:-1;;453:5139:9;;;;;;;:::o;:::-;;;;;;;;;;;"},"methodIdentifiers":{"BATCH_CREATOR_ROLE()":"b500365e","DEFAULT_ADMIN_ROLE()":"a217fddf","VERIFIER_ROLE()":"e7705db6","batchInfo(bytes32)":"74aa1496","createBatchWithMerkleRoot(bytes32,bytes32,uint256,string)":"c4233e5c","deactivateBatch(bytes32,string)":"b97d8c47","drugVerificationCount(bytes32)":"fc68d3dd","generateBatchHash(string,address,uint256)":"be8c9fab","generateDrugHash((string,string,string,uint256,uint256,uint256,string,string))":"8274d045","getBatchInfo(bytes32)":"753207c7","getDrugVerificationCount(bytes32)":"1c43e095","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","isDrugVerified(bytes32)":"1d4aa61f","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","verifiedDrugs(bytes32)":"52bcc90d","verifierCount(address)":"c3f5a1b4","verifyDrugInBatch(bytes32,bytes32,bytes32[])":"5b46e13e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"batchHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deactivator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"BatchDeactivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"batchHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"drugCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"DrugBatchCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"drugHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"batchHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"DrugVerificationResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BATCH_CREATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERIFIER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"batchInfo\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"drugCount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_batchHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_drugCount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"createBatchWithMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_batchHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_reason\",\"type\":\"string\"}],\"name\":\"deactivateBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"drugVerificationCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_batchName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_manufacturer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"generateBatchHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"drugCode\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"manufacturer\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"batchNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"manufactureDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"regulatoryApproval\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"additionalData\",\"type\":\"string\"}],\"internalType\":\"struct DrugVerification.DrugData\",\"name\":\"_drug\",\"type\":\"tuple\"}],\"name\":\"generateDrugHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_batchHash\",\"type\":\"bytes32\"}],\"name\":\"getBatchInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"drugCount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct DrugVerification.BatchInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_drugHash\",\"type\":\"bytes32\"}],\"name\":\"getDrugVerificationCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_drugHash\",\"type\":\"bytes32\"}],\"name\":\"isDrugVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"verifiedDrugs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"verifierCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_batchHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_drugHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"_proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyDrugInBatch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Enhanced contract for drug verification using Merkle proofs with advanced security\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"DrugVerification\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Implements comprehensive drug authentication and verification system\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DrugVerification.sol\":\"DrugVerification\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/DrugVerification.sol\":{\"keccak256\":\"0x2c397ed83a6c3fbf8589297003c34d761d33a8d2b3139edce0f788f8f46a784d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1044c99c73223a03d5a72ec0f22d66e8318a1d222d589c503dc51d4f860cb93\",\"dweb:/ipfs/QmfDpLb2oAC8QixRspD5tW5wmkA7HqPJQUYN8E9BqtRWrw\"]}},\"version\":1}"}},"contracts/IPFSStorage.sol":{"IPFSStorage":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"key","type":"bytes32"},{"indexed":true,"internalType":"address","name":"deactivator","type":"address"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"IPFSDataDeactivated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"key","type":"bytes32"},{"indexed":false,"internalType":"string","name":"ipfsHash","type":"string"},{"indexed":true,"internalType":"address","name":"uploader","type":"address"},{"indexed":false,"internalType":"string","name":"category","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"IPFSHashStored","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldSize","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newSize","type":"uint256"},{"indexed":false,"internalType":"address","name":"updatedBy","type":"address"}],"name":"MaxFileSizeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MODERATOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPLOADER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"},{"internalType":"string","name":"_reason","type":"string"}],"name":"deactivateIPFSData","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"name":"getActiveIPFSData","outputs":[{"components":[{"internalType":"string","name":"hash","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"address","name":"uploader","type":"address"},{"internalType":"string","name":"metadata","type":"string"},{"internalType":"string","name":"category","type":"string"},{"internalType":"uint256","name":"fileSize","type":"uint256"},{"internalType":"bool","name":"exists","type":"bool"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"string","name":"checksum","type":"string"}],"internalType":"struct IPFSStorage.IPFSData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"name":"getIPFSData","outputs":[{"components":[{"internalType":"string","name":"hash","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"address","name":"uploader","type":"address"},{"internalType":"string","name":"metadata","type":"string"},{"internalType":"string","name":"category","type":"string"},{"internalType":"uint256","name":"fileSize","type":"uint256"},{"internalType":"bool","name":"exists","type":"bool"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"string","name":"checksum","type":"string"}],"internalType":"struct IPFSStorage.IPFSData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"name":"getIPFSHash","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_ipfsHash","type":"string"}],"name":"getKeyByHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalUploads","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getUserUploads","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"hashToKey","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"ipfsData","outputs":[{"internalType":"string","name":"hash","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"address","name":"uploader","type":"address"},{"internalType":"string","name":"metadata","type":"string"},{"internalType":"string","name":"category","type":"string"},{"internalType":"uint256","name":"fileSize","type":"uint256"},{"internalType":"bool","name":"exists","type":"bool"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"string","name":"checksum","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_ipfsHash","type":"string"}],"name":"isHashUsed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxFileSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"},{"internalType":"string","name":"_ipfsHash","type":"string"},{"internalType":"string","name":"_metadata","type":"string"},{"internalType":"string","name":"_category","type":"string"},{"internalType":"uint256","name":"_fileSize","type":"uint256"},{"internalType":"string","name":"_checksum","type":"string"}],"name":"storeIPFSHash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalUploads","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newMaxSize","type":"uint256"}],"name":"updateMaxFileSize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"usedHashes","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userUploads","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"},{"internalType":"string","name":"_checksum","type":"string"}],"name":"verifyChecksum","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"fun_grantRole":{"entryPoint":369,"id":257,"parameterSlots":1,"returnSlots":1},"fun_grantRole_400":{"entryPoint":79,"id":257,"parameterSlots":1,"returnSlots":1},"fun_grantRole_401":{"entryPoint":207,"id":257,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x4A JUMPI PUSH1 0x1 DUP1 SSTORE PUSH4 0x3200000 PUSH1 0x7 SSTORE PUSH3 0x21 CALLER PUSH3 0x4F JUMP JUMPDEST POP PUSH3 0x2D CALLER PUSH3 0xCF JUMP JUMPDEST POP PUSH3 0x39 CALLER PUSH3 0x171 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1AC3 SWAP1 DUP2 PUSH3 0x20F DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0xCB JUMPI DUP2 DUP1 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1CD2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xF2F7FAE0ED04D18B63C8484FB400AEBEA0C541E3D6D47EFC9A0C8C1FA6BCE768 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x922390B27F65D828A1F7695B2EAAE33FD0BE87496792AFDDBA1D25446A8FCB91 SWAP1 PUSH1 0xFF AND PUSH3 0x16C JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1CD2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xF179AAFCC4FF8137FCA1EF3B9EC4D165F87016BA123E7973FBA770BC55E240E3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x71F3D55856E4058ED06EE057D79ADA615F65CDF5F9EE88181B914225088F834F SWAP1 PUSH1 0xFF AND PUSH3 0x16C JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1CD2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x153A JUMPI POP DUP1 PUSH4 0x30D1EFE EQ PUSH2 0x14E1 JUMPI DUP1 PUSH4 0x1376D017 EQ PUSH2 0x14C3 JUMPI DUP1 PUSH4 0x15E318C1 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x1CA62A8F EQ PUSH2 0x148D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x145E JUMPI DUP1 PUSH4 0x2D3C3FCD EQ PUSH2 0x12D8 JUMPI DUP1 PUSH4 0x2ED5EF14 EQ PUSH2 0x125F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1220 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x11D9 JUMPI DUP1 PUSH4 0x3D6F47B7 EQ PUSH2 0x119F JUMPI DUP1 PUSH4 0x3E63DF2B EQ PUSH2 0x83D JUMPI DUP1 PUSH4 0x412BD348 EQ PUSH2 0x789 JUMPI DUP1 PUSH4 0x57DA0A78 EQ PUSH2 0x6A3 JUMPI DUP1 PUSH4 0x5D837211 EQ PUSH2 0x59F JUMPI DUP1 PUSH4 0x61CC0766 EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x6D5A0BCA EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x797669C9 EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0xB394E7A7 EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0xB6123E55 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xBD1F5F31 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xBE666C2C EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x22D JUMPI PUSH4 0xF657367E EQ PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x1D5 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x224 PUSH2 0x16D DUP3 PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x2 DUP5 ADD SLOAD SWAP2 SWAP4 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x1FB PUSH2 0x197 PUSH1 0x3 DUP4 ADD PUSH2 0x17D8 JUMP JUMPDEST SWAP5 PUSH2 0x1ED PUSH2 0x1A7 PUSH1 0x4 DUP6 ADD PUSH2 0x17D8 JUMP JUMPDEST SWAP2 PUSH1 0x5 DUP6 ADD SLOAD SWAP8 PUSH2 0x1BF PUSH1 0x7 PUSH1 0x6 DUP9 ADD SLOAD SWAP8 ADD PUSH2 0x17D8 JUMP JUMPDEST SWAP8 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 DUP14 PUSH2 0x120 SWAP1 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x16CF JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP14 ADD MSTORE PUSH1 0x40 DUP13 ADD MSTORE DUP11 DUP3 SUB PUSH1 0x60 DUP13 ADD MSTORE PUSH2 0x16CF JUMP JUMPDEST SWAP1 DUP9 DUP3 SUB PUSH1 0x80 DUP11 ADD MSTORE PUSH2 0x16CF JUMP JUMPDEST SWAP4 PUSH1 0xA0 DUP8 ADD MSTORE DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x16CF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH2 0x26C PUSH1 0x4 CALLDATALOAD PUSH2 0x24C PUSH2 0x15A3 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x267 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x187E JUMP JUMPDEST PUSH2 0x1940 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x228 JUMPI PUSH1 0xFF PUSH2 0x2D7 PUSH1 0x20 PUSH2 0x2C4 DUP2 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1624 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x167A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH2 0x2FB CALLDATASIZE PUSH2 0x169D JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x2 DUP4 MSTORE PUSH2 0x31A PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x19B5 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP4 DUP2 DUP2 DUP2 ADD SWAP4 PUSH1 0x0 SWAP1 DUP1 SLOAD PUSH2 0x340 DUP2 PUSH2 0x179E JUMP JUMPDEST SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x3E4 JUMPI POP PUSH1 0x1 EQ PUSH2 0x3A6 JUMPI JUMPDEST POP POP POP PUSH2 0x36D SWAP3 POP SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1603 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x39A DUP5 DUP3 DUP2 PUSH2 0x38D DUP2 DUP4 ADD SWAP7 DUP8 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x167A JUMP JUMPDEST DUP2 ADD SUB DUP1 DUP5 MSTORE ADD DUP3 PUSH2 0x1603 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 EQ PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP6 DUP2 KECCAK256 SWAP3 SWAP4 POP SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x3CE JUMPI POP POP POP SWAP2 PUSH2 0x36D SWAP3 DUP3 ADD ADD DUP7 SWAP3 DUP9 DUP1 PUSH2 0x357 JUMP JUMPDEST DUP1 SLOAD DUP8 DUP5 ADD DUP8 ADD MSTORE DUP7 SWAP5 POP SWAP2 DUP6 ADD SWAP2 DUP2 ADD PUSH2 0x3B3 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x36D SWAP5 SWAP3 POP PUSH1 0xFF NOT AND DUP7 MSTORE DUP1 ISZERO ISZERO MUL DUP3 ADD ADD DUP7 SWAP3 DUP9 DUP1 PUSH2 0x357 JUMP JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x228 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x228 JUMPI PUSH2 0x435 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xFF DUP2 MLOAD SWAP3 DUP5 DUP2 DUP2 DUP6 ADD SWAP6 PUSH2 0x44F DUP2 DUP4 DUP10 PUSH2 0x167A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x48A JUMPI PUSH2 0x477 SWAP2 DUP4 SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x167A JUMP JUMPDEST DUP2 ADD PUSH1 0x5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x12185CDA081B9BDD08199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH2 0x4F5 PUSH2 0x15A3 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x71F3D55856E4058ED06EE057D79ADA615F65CDF5F9EE88181B914225088F834F DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x922390B27F65D828A1F7695B2EAAE33FD0BE87496792AFDDBA1D25446A8FCB91 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x5BB PUSH2 0x1A45 JUMP JUMPDEST POP DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x5D9 PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x19B5 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x5F9 PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x224 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x691 PUSH1 0x7 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x61B DUP5 PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x624 DUP2 PUSH2 0x17D8 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x64F PUSH1 0x3 DUP3 ADD PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x660 PUSH1 0x4 DUP3 ADD PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0x6 DUP3 ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE ADD PUSH2 0x17D8 JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x16F4 JUMP JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x228 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 DUP1 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x757 JUMPI DUP1 ISZERO PUSH2 0x71E JUMPI PUSH32 0xF1240668DC971ED549F4C39F8A2689F95C9D4A57931543C8AE5D3BAF6CBF052 SWAP2 PUSH1 0x60 SWAP2 PUSH1 0x7 SLOAD SWAP2 DUP2 PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE CALLER PUSH1 0x40 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C69642066696C652073697A65 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x41646D696E206F6E6C79 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x228 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x7AB PUSH2 0x158D JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP4 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP3 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x829 JUMPI DUP7 DUP7 PUSH2 0x7E9 DUP3 DUP9 SUB DUP4 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x812 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x803 JUMP JUMPDEST DUP4 SLOAD DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x7D3 JUMP JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x228 JUMPI PUSH2 0x86D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x44 DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x228 JUMPI PUSH2 0x88D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x64 SWAP2 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x228 JUMPI PUSH2 0x8AE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1624 JUMP JUMPDEST SWAP3 PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x228 JUMPI PUSH2 0x8CE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1624 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xF2F7FAE0ED04D18B63C8484FB400AEBEA0C541E3D6D47EFC9A0C8C1FA6BCE768 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 SWAP1 PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1167 JUMPI JUMPDEST ISZERO PUSH2 0x112E JUMPI PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x111C JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE DUP6 MLOAD ISZERO PUSH2 0x10DB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x10A5 JUMPI PUSH1 0xFF PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP2 PUSH2 0x959 DUP12 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x167A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND PUSH2 0x106B JUMPI PUSH1 0x7 SLOAD PUSH1 0x84 CALLDATALOAD GT PUSH2 0x102A JUMPI DUP3 MLOAD ISZERO PUSH2 0xFF5 JUMPI POP POP PUSH1 0x40 MLOAD SWAP2 PUSH2 0x98A DUP4 PUSH2 0x15E7 JUMP JUMPDEST DUP5 DUP4 MSTORE TIMESTAMP PUSH1 0x20 DUP5 ADD MSTORE CALLER PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE DUP3 PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xCC0 JUMPI DUP2 SWAP1 PUSH2 0x9F0 DUP6 SLOAD PUSH2 0x179E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xFA5 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xF39 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xF2E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xCC0 JUMPI DUP2 SWAP1 PUSH2 0xA7B PUSH1 0x3 DUP7 ADD SLOAD PUSH2 0x179E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xEDB JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xE69 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xE5E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP4 ADD SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xCC0 JUMPI PUSH2 0xAD6 PUSH1 0x4 DUP6 ADD SLOAD PUSH2 0x179E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xE17 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xDA3 JUMPI PUSH2 0x100 SWAP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0xD98 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP5 ADD SSTORE JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP5 ADD SSTORE PUSH1 0x6 DUP4 ADD PUSH1 0xC0 DUP3 ADD MLOAD ISZERO ISZERO DUP2 SLOAD PUSH1 0xFF PUSH2 0xFF00 PUSH1 0xE0 DUP7 ADD MLOAD ISZERO ISZERO PUSH1 0x8 SHL AND SWAP3 AND SWAP1 PUSH2 0xFFFF NOT AND OR OR SWAP1 SSTORE ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xCC0 JUMPI PUSH2 0xB68 PUSH1 0x7 DUP5 ADD SLOAD PUSH2 0x179E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xD51 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xCE1 JUMPI PUSH1 0x7 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0xCD6 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP2 ADD SSTORE JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0xCC0 JUMPI PUSH2 0xBD3 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x15B9 JUMP JUMPDEST SWAP2 SWAP1 DUP1 SLOAD SWAP3 PUSH1 0x3 SHL PUSH1 0x0 NOT SWAP4 DUP5 PUSH1 0x4 CALLDATALOAD DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP6 MLOAD PUSH2 0xC01 DUP2 DUP4 DUP6 DUP11 ADD PUSH2 0x167A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP4 MLOAD PUSH2 0xC29 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x167A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x5 DUP3 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 CALLDATALOAD SWAP4 SUB ADD SWAP1 KECCAK256 SSTORE PUSH1 0x6 SLOAD SWAP2 DUP3 EQ PUSH2 0xCAA JUMPI PUSH1 0x1 PUSH2 0xC73 SWAP3 ADD PUSH1 0x6 SSTORE PUSH2 0xC65 PUSH1 0x40 MLOAD SWAP4 PUSH1 0x60 DUP6 MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x16CF JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x16CF JUMP JUMPDEST TIMESTAMP PUSH1 0x40 DUP4 ADD MSTORE PUSH32 0xD521424C771641D8B8F36A97C36851D3A7BE90259AF6E1BB16D1ECA049859D9D CALLER SWAP3 DUP1 PUSH1 0x4 CALLDATALOAD SWAP4 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0xB8D JUMP JUMPDEST SWAP1 PUSH1 0x7 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0xD39 JUMPI POP SWAP2 DUP4 SWAP2 PUSH1 0x1 SWAP4 PUSH1 0x7 SWAP6 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xD20 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP2 ADD SSTORE PUSH2 0xBA3 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0xD12 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x7 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xD91 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xD85 JUMPI POP POP PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xD6F JUMP JUMPDEST POP DUP1 PUSH2 0xD6F JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0xAFD JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0xDFF JUMPI POP SWAP2 DUP4 SWAP2 PUSH1 0x1 SWAP4 PUSH2 0x100 SWAP7 SWAP6 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xDE6 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP5 ADD SSTORE PUSH2 0xB15 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0xDD6 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xE57 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xE4B JUMPI POP POP PUSH2 0xADF JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xE35 JUMP JUMPDEST POP DUP1 PUSH2 0xE35 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0xA9B JUMP JUMPDEST SWAP3 POP PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xEC0 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xEA7 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0xAB3 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0xE97 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xE7C JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xF27 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xF18 JUMPI POP POP PUSH2 0xA84 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0xF02 JUMP JUMPDEST POP DUP1 PUSH2 0xEFC JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0xA10 JUMP JUMPDEST SWAP3 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xF8A JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xF71 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH2 0xA25 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0xF64 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xF49 JUMP JUMPDEST SWAP1 SWAP2 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xFEE JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xFDF JUMPI POP POP PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0xFC9 JUMP JUMPDEST POP DUP1 PUSH2 0xFC3 JUMP JUMPDEST PUSH17 0x10DA1958DADCDD5B481C995C5D5A5C9959 PUSH1 0x7A SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0x46696C652073697A652065786365656473206C696D6974000000000000000000 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH22 0x12541194C81A185CDA08185B1C9958591E481D5CD959 PUSH1 0x52 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH18 0x4B657920616C726561647920657869737473 PUSH1 0x70 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0x4950465320686173682063616E6E6F7420626520656D70747900000000000000 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH21 0x2AB730BABA3437B934BD32B2103AB83637B0B232B9 PUSH1 0x59 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x90A JUMP JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x11BB PUSH2 0x1A45 JUMP JUMPDEST POP DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x5F9 PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x19B5 JUMP JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH2 0x11F2 PUSH2 0x15A3 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x120E JUMPI PUSH2 0x26C SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x1940 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH2 0x26C PUSH1 0x4 CALLDATALOAD PUSH2 0x123F PUSH2 0x15A3 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x125A PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x187E JUMP JUMPDEST PUSH2 0x18C2 JUMP JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x228 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH2 0x1290 PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x19B5 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH2 0x12AF PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x12C3 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x17D8 JUMP JUMPDEST SWAP1 PUSH2 0x224 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x16CF JUMP JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH2 0x12E6 CALLDATASIZE PUSH2 0x169D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xF179AAFCC4FF8137FCA1EF3B9EC4D165F87016BA123E7973FBA770BC55E240E3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x143C JUMPI JUMPDEST ISZERO PUSH2 0x13FE JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP4 MSTORE PUSH2 0x1347 PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x19B5 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP4 MSTORE PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND ISZERO PUSH2 0x13B9 JUMPI PUSH2 0x13B4 PUSH32 0xD9D525ADEE424ACEF2CFC3C8709DE8503772B6AA77EB1C7B609A79C9B92CF9B9 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP6 MSTORE PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0xFF00 NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP7 DUP4 MSTORE CALLER SWAP7 DUP4 ADD SWAP1 PUSH2 0x16CF JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x49504653206461746120616C726561647920696E616374697665000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2AB730BABA3437B934BD32B21036B7B232B930BA37B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP4 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1326 JUMP JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x228 JUMPI PUSH2 0x477 PUSH1 0x20 PUSH2 0x2C4 DUP2 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1624 JUMP JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH2 0x14FA PUSH2 0x158D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x228 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x152B SWAP2 PUSH2 0x15B9 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x228 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x157C JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x1575 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x228 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x228 JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x15D1 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x120 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xCC0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xCC0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x228 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xCC0 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1658 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x1603 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x228 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x168D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x167D JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x228 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x228 JUMPI PUSH2 0x16CC SWAP2 PUSH1 0x4 ADD PUSH2 0x1624 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x16E8 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x167A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x16CC SWAP2 PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD SWAP1 PUSH2 0x1718 PUSH2 0x120 SWAP3 DUP4 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD SWAP1 PUSH2 0x16CF JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP6 ADD MLOAD AND PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1768 PUSH2 0x1754 PUSH1 0x60 DUP7 ADD MLOAD SWAP5 PUSH1 0x1F NOT SWAP6 DUP7 DUP7 DUP4 SUB ADD PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x16CF JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MLOAD DUP6 DUP6 DUP4 SUB ADD PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x16CF JUMP JUMPDEST SWAP4 PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 PUSH2 0x100 SWAP2 DUP3 DUP6 ADD MSTORE ADD MLOAD SWAP3 DUP3 DUP6 SUB ADD SWAP2 ADD MSTORE PUSH2 0x16CF JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x17CE JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x17B8 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x17AD JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x17EC DUP5 PUSH2 0x179E JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x185B JUMPI POP PUSH1 0x1 EQ PUSH2 0x1818 JUMPI JUMPDEST POP POP PUSH2 0x1816 SWAP3 POP SUB DUP4 PUSH2 0x1603 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1843 JUMPI POP POP PUSH2 0x1816 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1808 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x182B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1816 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1808 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x18A4 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x193B JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x193B JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x19BC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x49504653206461746120646F6573206E6F742065786973740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1A08 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x49504653206461746120697320696E616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1A52 DUP3 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x100 DUP4 DUP3 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE ADD MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE TIMESTAMP DUP13 LOG2 0xAE CALL 0xE5 0xC 0xD2 DUP9 DUP2 DUP7 GASLIMIT 0x4B GAS 0xE9 ADD PUSH30 0x8A4B9806CA1875A0DD1DE7A2942E64736F6C634300081400332F8788117E PUSH31 0xFF1D82E926EC794901D17C78024A50270940304540A733656F0D0000000000 ","sourceMap":"390:5465:10:-:0;;;;;;1857:1:4;390:5465:10;;1343:16;;390:5465;2213:42;2244:10;2213:42;:::i;:::-;;2265:37;2244:10;2265:37;:::i;:::-;;2312:38;2244:10;2312:38;:::i;:::-;;390:5465;;;;;;;;;;;;;6155:316:0;-1:-1:-1;;;;;390:5465:10;2241:4:0;390:5465:10;;;;;;;;;;2241:4:0;;390:5465:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;735:10:2;6346:40:0;-1:-1:-1;;;;;;;;;;;6346:40:0;;;390:5465:10;6400:11:0;:::o;6248:217::-;6442:12;;:::o;6155:316::-;-1:-1:-1;;;;;390:5465:10;2930:6:0;390:5465:10;;;;;;;;;;2930:6:0;;390:5465:10;496:26;;390:5465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:2;6346:40:0;;;390:5465:10;6400:11:0;:::o;6248:217::-;6442:12;;;:::o;6155:316::-;-1:-1:-1;;;;;390:5465:10;2930:6:0;390:5465:10;;;;;;;;;;2930:6:0;;390:5465:10;569:27;;390:5465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:2;6346:40:0;;;390:5465:10;6400:11:0;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":5539,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_25267":{"entryPoint":5517,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_bytes32t_string":{"entryPoint":5789,"id":null,"parameterSlots":1,"returnSlots":2},"abi_decode_string":{"entryPoint":5668,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":5839,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_IPFSData":{"entryPoint":5876,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_struct_struct_IPFSData":{"entryPoint":6725,"id":null,"parameterSlots":0,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":6104,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":5754,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6046,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":5635,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_25271":{"entryPoint":5607,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkRole":{"entryPoint":6270,"id":94,"parameterSlots":1,"returnSlots":0},"fun_grantRole":{"entryPoint":6338,"id":257,"parameterSlots":2,"returnSlots":1},"fun_revokeRole":{"entryPoint":6464,"id":295,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral_a0b1":{"entryPoint":6581,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e7d3":{"entryPoint":6657,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_bytes32_dyn":{"entryPoint":5561,"id":null,"parameterSlots":2,"returnSlots":2}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x153A JUMPI POP DUP1 PUSH4 0x30D1EFE EQ PUSH2 0x14E1 JUMPI DUP1 PUSH4 0x1376D017 EQ PUSH2 0x14C3 JUMPI DUP1 PUSH4 0x15E318C1 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x1CA62A8F EQ PUSH2 0x148D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x145E JUMPI DUP1 PUSH4 0x2D3C3FCD EQ PUSH2 0x12D8 JUMPI DUP1 PUSH4 0x2ED5EF14 EQ PUSH2 0x125F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1220 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x11D9 JUMPI DUP1 PUSH4 0x3D6F47B7 EQ PUSH2 0x119F JUMPI DUP1 PUSH4 0x3E63DF2B EQ PUSH2 0x83D JUMPI DUP1 PUSH4 0x412BD348 EQ PUSH2 0x789 JUMPI DUP1 PUSH4 0x57DA0A78 EQ PUSH2 0x6A3 JUMPI DUP1 PUSH4 0x5D837211 EQ PUSH2 0x59F JUMPI DUP1 PUSH4 0x61CC0766 EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x6D5A0BCA EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x797669C9 EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0xB394E7A7 EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0xB6123E55 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xBD1F5F31 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xBE666C2C EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x22D JUMPI PUSH4 0xF657367E EQ PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x1D5 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x224 PUSH2 0x16D DUP3 PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x2 DUP5 ADD SLOAD SWAP2 SWAP4 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x1FB PUSH2 0x197 PUSH1 0x3 DUP4 ADD PUSH2 0x17D8 JUMP JUMPDEST SWAP5 PUSH2 0x1ED PUSH2 0x1A7 PUSH1 0x4 DUP6 ADD PUSH2 0x17D8 JUMP JUMPDEST SWAP2 PUSH1 0x5 DUP6 ADD SLOAD SWAP8 PUSH2 0x1BF PUSH1 0x7 PUSH1 0x6 DUP9 ADD SLOAD SWAP8 ADD PUSH2 0x17D8 JUMP JUMPDEST SWAP8 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 DUP14 PUSH2 0x120 SWAP1 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x16CF JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP14 ADD MSTORE PUSH1 0x40 DUP13 ADD MSTORE DUP11 DUP3 SUB PUSH1 0x60 DUP13 ADD MSTORE PUSH2 0x16CF JUMP JUMPDEST SWAP1 DUP9 DUP3 SUB PUSH1 0x80 DUP11 ADD MSTORE PUSH2 0x16CF JUMP JUMPDEST SWAP4 PUSH1 0xA0 DUP8 ADD MSTORE DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x16CF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH2 0x26C PUSH1 0x4 CALLDATALOAD PUSH2 0x24C PUSH2 0x15A3 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x267 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x187E JUMP JUMPDEST PUSH2 0x1940 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x228 JUMPI PUSH1 0xFF PUSH2 0x2D7 PUSH1 0x20 PUSH2 0x2C4 DUP2 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1624 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x167A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH2 0x2FB CALLDATASIZE PUSH2 0x169D JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x2 DUP4 MSTORE PUSH2 0x31A PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x19B5 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP4 DUP2 DUP2 DUP2 ADD SWAP4 PUSH1 0x0 SWAP1 DUP1 SLOAD PUSH2 0x340 DUP2 PUSH2 0x179E JUMP JUMPDEST SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x3E4 JUMPI POP PUSH1 0x1 EQ PUSH2 0x3A6 JUMPI JUMPDEST POP POP POP PUSH2 0x36D SWAP3 POP SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1603 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x39A DUP5 DUP3 DUP2 PUSH2 0x38D DUP2 DUP4 ADD SWAP7 DUP8 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x167A JUMP JUMPDEST DUP2 ADD SUB DUP1 DUP5 MSTORE ADD DUP3 PUSH2 0x1603 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 EQ PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP6 DUP2 KECCAK256 SWAP3 SWAP4 POP SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x3CE JUMPI POP POP POP SWAP2 PUSH2 0x36D SWAP3 DUP3 ADD ADD DUP7 SWAP3 DUP9 DUP1 PUSH2 0x357 JUMP JUMPDEST DUP1 SLOAD DUP8 DUP5 ADD DUP8 ADD MSTORE DUP7 SWAP5 POP SWAP2 DUP6 ADD SWAP2 DUP2 ADD PUSH2 0x3B3 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x36D SWAP5 SWAP3 POP PUSH1 0xFF NOT AND DUP7 MSTORE DUP1 ISZERO ISZERO MUL DUP3 ADD ADD DUP7 SWAP3 DUP9 DUP1 PUSH2 0x357 JUMP JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x228 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x228 JUMPI PUSH2 0x435 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xFF DUP2 MLOAD SWAP3 DUP5 DUP2 DUP2 DUP6 ADD SWAP6 PUSH2 0x44F DUP2 DUP4 DUP10 PUSH2 0x167A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x48A JUMPI PUSH2 0x477 SWAP2 DUP4 SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x167A JUMP JUMPDEST DUP2 ADD PUSH1 0x5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x12185CDA081B9BDD08199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH2 0x4F5 PUSH2 0x15A3 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x71F3D55856E4058ED06EE057D79ADA615F65CDF5F9EE88181B914225088F834F DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x922390B27F65D828A1F7695B2EAAE33FD0BE87496792AFDDBA1D25446A8FCB91 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x5BB PUSH2 0x1A45 JUMP JUMPDEST POP DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x5D9 PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x19B5 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x5F9 PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x224 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x691 PUSH1 0x7 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x61B DUP5 PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x624 DUP2 PUSH2 0x17D8 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x64F PUSH1 0x3 DUP3 ADD PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x660 PUSH1 0x4 DUP3 ADD PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0x6 DUP3 ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE ADD PUSH2 0x17D8 JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x16F4 JUMP JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x228 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 DUP1 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x757 JUMPI DUP1 ISZERO PUSH2 0x71E JUMPI PUSH32 0xF1240668DC971ED549F4C39F8A2689F95C9D4A57931543C8AE5D3BAF6CBF052 SWAP2 PUSH1 0x60 SWAP2 PUSH1 0x7 SLOAD SWAP2 DUP2 PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE CALLER PUSH1 0x40 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C69642066696C652073697A65 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x41646D696E206F6E6C79 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x228 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x7AB PUSH2 0x158D JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP4 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP3 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x829 JUMPI DUP7 DUP7 PUSH2 0x7E9 DUP3 DUP9 SUB DUP4 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x812 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x803 JUMP JUMPDEST DUP4 SLOAD DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x7D3 JUMP JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x228 JUMPI PUSH2 0x86D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x44 DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x228 JUMPI PUSH2 0x88D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x64 SWAP2 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x228 JUMPI PUSH2 0x8AE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1624 JUMP JUMPDEST SWAP3 PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x228 JUMPI PUSH2 0x8CE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1624 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xF2F7FAE0ED04D18B63C8484FB400AEBEA0C541E3D6D47EFC9A0C8C1FA6BCE768 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 SWAP1 PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1167 JUMPI JUMPDEST ISZERO PUSH2 0x112E JUMPI PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x111C JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE DUP6 MLOAD ISZERO PUSH2 0x10DB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x10A5 JUMPI PUSH1 0xFF PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP2 PUSH2 0x959 DUP12 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x167A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND PUSH2 0x106B JUMPI PUSH1 0x7 SLOAD PUSH1 0x84 CALLDATALOAD GT PUSH2 0x102A JUMPI DUP3 MLOAD ISZERO PUSH2 0xFF5 JUMPI POP POP PUSH1 0x40 MLOAD SWAP2 PUSH2 0x98A DUP4 PUSH2 0x15E7 JUMP JUMPDEST DUP5 DUP4 MSTORE TIMESTAMP PUSH1 0x20 DUP5 ADD MSTORE CALLER PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE DUP3 PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xCC0 JUMPI DUP2 SWAP1 PUSH2 0x9F0 DUP6 SLOAD PUSH2 0x179E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xFA5 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xF39 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xF2E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xCC0 JUMPI DUP2 SWAP1 PUSH2 0xA7B PUSH1 0x3 DUP7 ADD SLOAD PUSH2 0x179E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xEDB JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xE69 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xE5E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP4 ADD SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xCC0 JUMPI PUSH2 0xAD6 PUSH1 0x4 DUP6 ADD SLOAD PUSH2 0x179E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xE17 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xDA3 JUMPI PUSH2 0x100 SWAP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0xD98 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP5 ADD SSTORE JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP5 ADD SSTORE PUSH1 0x6 DUP4 ADD PUSH1 0xC0 DUP3 ADD MLOAD ISZERO ISZERO DUP2 SLOAD PUSH1 0xFF PUSH2 0xFF00 PUSH1 0xE0 DUP7 ADD MLOAD ISZERO ISZERO PUSH1 0x8 SHL AND SWAP3 AND SWAP1 PUSH2 0xFFFF NOT AND OR OR SWAP1 SSTORE ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xCC0 JUMPI PUSH2 0xB68 PUSH1 0x7 DUP5 ADD SLOAD PUSH2 0x179E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xD51 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xCE1 JUMPI PUSH1 0x7 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0xCD6 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP2 ADD SSTORE JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0xCC0 JUMPI PUSH2 0xBD3 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x15B9 JUMP JUMPDEST SWAP2 SWAP1 DUP1 SLOAD SWAP3 PUSH1 0x3 SHL PUSH1 0x0 NOT SWAP4 DUP5 PUSH1 0x4 CALLDATALOAD DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP6 MLOAD PUSH2 0xC01 DUP2 DUP4 DUP6 DUP11 ADD PUSH2 0x167A JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP4 MLOAD PUSH2 0xC29 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x167A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x5 DUP3 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 CALLDATALOAD SWAP4 SUB ADD SWAP1 KECCAK256 SSTORE PUSH1 0x6 SLOAD SWAP2 DUP3 EQ PUSH2 0xCAA JUMPI PUSH1 0x1 PUSH2 0xC73 SWAP3 ADD PUSH1 0x6 SSTORE PUSH2 0xC65 PUSH1 0x40 MLOAD SWAP4 PUSH1 0x60 DUP6 MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x16CF JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x16CF JUMP JUMPDEST TIMESTAMP PUSH1 0x40 DUP4 ADD MSTORE PUSH32 0xD521424C771641D8B8F36A97C36851D3A7BE90259AF6E1BB16D1ECA049859D9D CALLER SWAP3 DUP1 PUSH1 0x4 CALLDATALOAD SWAP4 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0xB8D JUMP JUMPDEST SWAP1 PUSH1 0x7 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0xD39 JUMPI POP SWAP2 DUP4 SWAP2 PUSH1 0x1 SWAP4 PUSH1 0x7 SWAP6 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xD20 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP2 ADD SSTORE PUSH2 0xBA3 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0xD12 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x7 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xD91 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xD85 JUMPI POP POP PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xD6F JUMP JUMPDEST POP DUP1 PUSH2 0xD6F JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0xAFD JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0xDFF JUMPI POP SWAP2 DUP4 SWAP2 PUSH1 0x1 SWAP4 PUSH2 0x100 SWAP7 SWAP6 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xDE6 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP5 ADD SSTORE PUSH2 0xB15 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0xDD6 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xE57 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xE4B JUMPI POP POP PUSH2 0xADF JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xE35 JUMP JUMPDEST POP DUP1 PUSH2 0xE35 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0xA9B JUMP JUMPDEST SWAP3 POP PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xEC0 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xEA7 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0xAB3 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0xE97 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xE7C JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xF27 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xF18 JUMPI POP POP PUSH2 0xA84 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0xF02 JUMP JUMPDEST POP DUP1 PUSH2 0xEFC JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0xA10 JUMP JUMPDEST SWAP3 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xF8A JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xF71 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH2 0xA25 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0xF64 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xF49 JUMP JUMPDEST SWAP1 SWAP2 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xFEE JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xFDF JUMPI POP POP PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0xFC9 JUMP JUMPDEST POP DUP1 PUSH2 0xFC3 JUMP JUMPDEST PUSH17 0x10DA1958DADCDD5B481C995C5D5A5C9959 PUSH1 0x7A SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0x46696C652073697A652065786365656473206C696D6974000000000000000000 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH22 0x12541194C81A185CDA08185B1C9958591E481D5CD959 PUSH1 0x52 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH18 0x4B657920616C726561647920657869737473 PUSH1 0x70 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0x4950465320686173682063616E6E6F7420626520656D70747900000000000000 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH21 0x2AB730BABA3437B934BD32B2103AB83637B0B232B9 PUSH1 0x59 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x90A JUMP JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x11BB PUSH2 0x1A45 JUMP JUMPDEST POP DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x5F9 PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x19B5 JUMP JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH2 0x11F2 PUSH2 0x15A3 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x120E JUMPI PUSH2 0x26C SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x1940 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH2 0x26C PUSH1 0x4 CALLDATALOAD PUSH2 0x123F PUSH2 0x15A3 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x125A PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x187E JUMP JUMPDEST PUSH2 0x18C2 JUMP JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x228 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH2 0x1290 PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x19B5 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH2 0x12AF PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x12C3 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x17D8 JUMP JUMPDEST SWAP1 PUSH2 0x224 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x16CF JUMP JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH2 0x12E6 CALLDATASIZE PUSH2 0x169D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xF179AAFCC4FF8137FCA1EF3B9EC4D165F87016BA123E7973FBA770BC55E240E3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x143C JUMPI JUMPDEST ISZERO PUSH2 0x13FE JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP4 MSTORE PUSH2 0x1347 PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x19B5 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP4 MSTORE PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND ISZERO PUSH2 0x13B9 JUMPI PUSH2 0x13B4 PUSH32 0xD9D525ADEE424ACEF2CFC3C8709DE8503772B6AA77EB1C7B609A79C9B92CF9B9 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP6 MSTORE PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0xFF00 NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP7 DUP4 MSTORE CALLER SWAP7 DUP4 ADD SWAP1 PUSH2 0x16CF JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x49504653206461746120616C726561647920696E616374697665000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2AB730BABA3437B934BD32B21036B7B232B930BA37B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP4 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1326 JUMP JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x228 JUMPI PUSH2 0x477 PUSH1 0x20 PUSH2 0x2C4 DUP2 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1624 JUMP JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH2 0x14FA PUSH2 0x158D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x228 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x152B SWAP2 PUSH2 0x15B9 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x228 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x228 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x228 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x157C JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x1575 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x228 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x228 JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x15D1 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x120 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xCC0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xCC0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x228 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xCC0 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1658 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x1603 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x228 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x168D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x167D JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x228 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x228 JUMPI PUSH2 0x16CC SWAP2 PUSH1 0x4 ADD PUSH2 0x1624 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x16E8 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x167A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x16CC SWAP2 PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD SWAP1 PUSH2 0x1718 PUSH2 0x120 SWAP3 DUP4 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD SWAP1 PUSH2 0x16CF JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP6 ADD MLOAD AND PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1768 PUSH2 0x1754 PUSH1 0x60 DUP7 ADD MLOAD SWAP5 PUSH1 0x1F NOT SWAP6 DUP7 DUP7 DUP4 SUB ADD PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x16CF JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MLOAD DUP6 DUP6 DUP4 SUB ADD PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x16CF JUMP JUMPDEST SWAP4 PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 PUSH2 0x100 SWAP2 DUP3 DUP6 ADD MSTORE ADD MLOAD SWAP3 DUP3 DUP6 SUB ADD SWAP2 ADD MSTORE PUSH2 0x16CF JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x17CE JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x17B8 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x17AD JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x17EC DUP5 PUSH2 0x179E JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x185B JUMPI POP PUSH1 0x1 EQ PUSH2 0x1818 JUMPI JUMPDEST POP POP PUSH2 0x1816 SWAP3 POP SUB DUP4 PUSH2 0x1603 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1843 JUMPI POP POP PUSH2 0x1816 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1808 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x182B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1816 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1808 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x18A4 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x193B JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x193B JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x19BC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x49504653206461746120646F6573206E6F742065786973740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1A08 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x49504653206461746120697320696E616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1A52 DUP3 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x100 DUP4 DUP3 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE ADD MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE TIMESTAMP DUP13 LOG2 0xAE CALL 0xE5 0xC 0xD2 DUP9 DUP2 DUP7 GASLIMIT 0x4B GAS 0xE9 ADD PUSH30 0x8A4B9806CA1875A0DD1DE7A2942E64736F6C634300081400330000000000 ","sourceMap":"390:5465:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;390:5465:10;;;;;;;;1013:44;390:5465;;;;;;;1013:44;;;:::i;:::-;390:5465;1013:44;;390:5465;1013:44;;;390:5465;1013:44;;390:5465;;-1:-1:-1;;;;;390:5465:10;;;;;1013:44;390:5465;1013:44;;;:::i;:::-;;390:5465;1013:44;390:5465;1013:44;;;:::i;:::-;;;;;390:5465;1013:44;;;;;;390:5465;1013:44;;;:::i;:::-;390:5465;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;390:5465:10;;;;4723:26:0;390:5465:10;;;;:::i;:::-;;;;;;;;2484:4:0;390:5465:10;;;;3877:22:0;390:5465:10;2484:4:0;:::i;:::-;4723:26;:::i;:::-;390:5465:10;;;;;;;-1:-1:-1;;390:5465:10;;;;;5546:12;390:5465;;;;;;;;;;;;;-1:-1:-1;;390:5465:10;;;;;;-1:-1:-1;;;;;390:5465:10;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;5685:8;390:5465;;5677:58;390:5465;5685:21;390:5465;;;5685:21;390:5465;;5677:58;:::i;:::-;390:5465;;5685:8;390:5465;;5779:23;390:5465;;;5779:23;390:5465;;5762:41;;;;;390:5465;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;5762:41;;;;;;;390:5465;;5762:41;;;;;;:::i;:::-;390:5465;5752:52;;390:5465;;;5818:27;;;;390:5465;5818:27;;;390:5465;;;;;;;;;:::i;:::-;;;5818:27;;;;;;;:::i;:::-;390:5465;5808:38;;5752:94;390:5465;;;;;;;;;;;;;;;;-1:-1:-1;390:5465:10;;;;;;;;;;;5762:41;390:5465;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;390:5465:10;;;;;;;;;;;;;5762:41;390:5465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;390:5465:10;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;5304:9;390:5465;;;;;;;;;;;;;;;;-1:-1:-1;;;390:5465:10;;;;;;;;;;;;;-1:-1:-1;;;390:5465:10;;;;;;;;;;;;;-1:-1:-1;;390:5465:10;;;;;;;;;;;;;;;;;-1:-1:-1;;390:5465:10;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;390:5465:10;;;;;;;569:27;390:5465;;;;;;;;;-1:-1:-1;;390:5465:10;;;;;;;496:26;390:5465;;;;;;;;;-1:-1:-1;;390:5465:10;;;;;;;;:::i;:::-;;;;;4853:8;390:5465;;4845:58;390:5465;4853:21;390:5465;;;4853:21;390:5465;;4845:58;:::i;:::-;390:5465;;;4853:8;390:5465;;4913:57;390:5465;4853:21;390:5465;;;4921:23;390:5465;;;;4913:57;:::i;:::-;390:5465;;4853:8;390:5465;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;4853:8;390:5465;;;-1:-1:-1;;;;;390:5465:10;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;4853:21;390:5465;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;4045:10;390:5465;;;;;;;;;;;;;4089:15;;390:5465;;4233:52;390:5465;;;4163:11;390:5465;;;4163:11;390:5465;;;;;;;;;4045:10;390:5465;;;;4233:52;390:5465;;;;-1:-1:-1;;;390:5465:10;;;;;;;;;;;;;-1:-1:-1;;;390:5465:10;;;;;;;;;;-1:-1:-1;;;390:5465:10;;;;;;;;;;;;;-1:-1:-1;;;390:5465:10;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;390:5465:10;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;390:5465:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;390:5465:10;;;;;;-1:-1:-1;;;;;390:5465:10;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;390:5465:10;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;390:5465:10;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;390:5465:10;;;;;;;;;;;:::i;:::-;1879:10;390:5465;;;;;;;;;;;;;;;;1856:77;;;;390:5465;;;;1899:1:4;390:5465:10;;2702:18:4;2698:86;;1899:1;390:5465:10;;;;2630:27;390:5465;;;;;;1899:1:4;390:5465:10;;;2706:21;390:5465;;;2706:21;390:5465;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;2848:11;390:5465;;;2835:24;390:5465;;;;2905:27;390:5465;;;;;;;;;;:::i;:::-;;;;3053:15;390:5465;2990:309;;390:5465;1879:10;390:5465;2990:309;;390:5465;;2990:309;;390:5465;2990:309;390:5465;2990:309;;390:5465;;;;2990:309;;390:5465;;;2990:309;;390:5465;;;2990:309;;390:5465;2990:309;;;390:5465;;;;;1899:1:4;390:5465:10;;;;;;;;;;;-1:-1:-1;;;;;390:5465:10;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2990:309;;390:5465;;;;;1899:1:4;390:5465:10;;;;;;;;2990:309;;390:5465;;;;;;;;;;;;2990:309;;390:5465;;;;-1:-1:-1;;;;;390:5465:10;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2990:309;;390:5465;;;;-1:-1:-1;;;;;390:5465:10;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2990:309;;390:5465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2990:309;;390:5465;;;;;2706:21;390:5465;;;2990:309;;390:5465;;;;;;;;2990:309;;390:5465;;;;;;;;;;;;;;;;2990:309;390:5465;;;;-1:-1:-1;;;;;390:5465:10;;;;;2848:11;390:5465;;;;:::i;:::-;;;;;;;;;;;;;;;;;2848:11;;390:5465;;;;;;;;;;;;;;;;;;;;;;;;;;1879:10;390:5465;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2706:21;390:5465;;;;;;;;;;2706:21;390:5465;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;3053:15;390:5465;;;;3475:71;1879:10;390:5465;;;;3475:71;;;;390:5465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;390:5465:10;;;;;;2848:11;390:5465;;;;;;;;;;-1:-1:-1;;390:5465:10;;;;;;;;;;;;2848:11;390:5465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2848:11;390:5465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;390:5465:10;;;;;;;-1:-1:-1;390:5465:10;;;;;;;;;;;;;;;;;-1:-1:-1;;390:5465:10;;;;;;;;;;;;2990:309;390:5465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;390:5465:10;;;;;;;-1:-1:-1;390:5465:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;390:5465:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;390:5465:10;;;;;-1:-1:-1;390:5465:10;;;;;;;-1:-1:-1;390:5465:10;;;;;;;;;;;;;;;;;-1:-1:-1;;390:5465:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;390:5465:10;;;;;-1:-1:-1;390:5465:10;;;;-1:-1:-1;;;390:5465:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;390:5465:10;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;390:5465:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2698:86:4;390:5465:10;;-1:-1:-1;;;2743:30:4;;390:5465:10;;2743:30:4;390:5465:10;-1:-1:-1;;;390:5465:10;;;;;;;;;;;;;;;;;;;;;;1856:77;-1:-1:-1;1879:10:10;390:5465;;;;;;;;;;;;;1856:77;;390:5465;;;;;;-1:-1:-1;;390:5465:10;;;;;;;;:::i;:::-;;;;;4656:8;390:5465;;4648:58;390:5465;4656:21;390:5465;;;4656:21;390:5465;;4648:58;:::i;390:5465::-;;;;;;-1:-1:-1;;390:5465:10;;;;;;:::i;:::-;735:10:2;-1:-1:-1;;;;;390:5465:10;;5397:34:0;5393:102;;5505:37;390:5465:10;;;5505:37:0;:::i;5393:102::-;390:5465:10;;-1:-1:-1;;;5454:30:0;;390:5465:10;;5454:30:0;390:5465:10;;;;;;-1:-1:-1;;390:5465:10;;;;4306:25:0;390:5465:10;;;;:::i;:::-;;;;;;;;2484:4:0;390:5465:10;;;;3877:22:0;390:5465:10;2484:4:0;:::i;:::-;4306:25;:::i;390:5465:10:-;;;;;;;;;;;;;;;;;;4393:8;390:5465;;4385:58;390:5465;4393:21;390:5465;;;4393:21;390:5465;;4385:58;:::i;:::-;390:5465;;;4393:8;390:5465;;4453:57;390:5465;4393:21;390:5465;;;4461:23;390:5465;;;;4453:57;:::i;:::-;390:5465;;4393:8;390:5465;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;2067:10;390:5465;;;;;;;;;;;;;;;;;;;;2043:78;;;;390:5465;;;;;;;3692:8;390:5465;;3684:58;390:5465;3692:21;390:5465;;;3692:21;390:5465;;3684:58;:::i;:::-;390:5465;;;3692:8;390:5465;;;3692:21;390:5465;;;3760:23;390:5465;;;;;;;;3879:46;390:5465;;;;3692:8;390:5465;;3692:21;390:5465;;;3833:23;390:5465;;;;;;;;;;;;;;;2067:10;390:5465;;;;;:::i;:::-;3879:46;;;390:5465;;;;-1:-1:-1;;;390:5465:10;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;390:5465:10;;;;;;;;;;;;;-1:-1:-1;;;390:5465:10;;;;;;;2043:78;390:5465;;;;;;;;;;2067:10;390:5465;;;;;;;;;;2043:78;;390:5465;;;;;;-1:-1:-1;;390:5465:10;;;;;;;;;;;;;;;;3877:22:0;390:5465:10;;;;;;;;;;;;;-1:-1:-1;;390:5465:10;;;;;;-1:-1:-1;;;;;390:5465:10;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;390:5465:10;;;;;1314:45;390:5465;;;;;;;;;;;;;-1:-1:-1;;390:5465:10;;;;;;:::i;:::-;-1:-1:-1;;;;;390:5465:10;;;;;;;;;;;;;;;;;1063:48;;;;;390:5465;1063:48;;;;:::i;:::-;390:5465;;;;;;;;;;;;;;;;;;-1:-1:-1;;390:5465:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2649:47:0;;;:87;;;;390:5465:10;;;;;;;2649:87:0;-1:-1:-1;;;829:40:7;;-1:-1:-1;2649:87:0;;;390:5465:10;;;;-1:-1:-1;;;;;390:5465:10;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;390:5465:10;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;390:5465:10;;-1:-1:-1;390:5465:10;;;-1:-1:-1;390:5465:10;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;390:5465:10;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;390:5465:10;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;390:5465:10;;;;;;;;;;;-1:-1:-1;;390:5465:10;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;390:5465:10;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;390:5465:10;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;390:5465:10;;;;;;;;;;;-1:-1:-1;;;;;390:5465:10;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;390:5465:10;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;390:5465:10;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;390:5465:10;;;;-1:-1:-1;390:5465:10;;-1:-1:-1;390:5465:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;390:5465:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3175:103:0;390:5465:10;2930:6:0;390:5465:10;2930:6:0;390:5465:10;;;2930:6:0;390:5465:10;735:10:2;2930:6:0;390:5465:10;;;;;2930:6:0;390:5465:10;;;3495:23:0;3491:108;;3175:103;:::o;3491:108::-;390:5465:10;;;;3541:47:0;;;;;;735:10:2;3541:47:0;;;390:5465:10;;;;;3541:47:0;6155:316;;2930:6;390:5465:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6252:23:0;6248:217;390:5465:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6346:40:0;735:10:2;6346:40:0;;;390:5465:10;6400:11:0;:::o;6248:217::-;6442:12;;;:::o;6708:317::-;;2930:6;390:5465:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6802:217:0;390:5465:10;;;;;;;;;;;;;;;;;;;;;;;;;;;6900:40:0;735:10:2;6900:40:0;;;390:5465:10;6954:11:0;:::o;390:5465:10:-;;;;:::o;:::-;;;-1:-1:-1;;;390:5465:10;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;390:5465:10;;;;;;;;;;;;-1:-1:-1;;;390:5465:10;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;390:5465:10;;;;-1:-1:-1;390:5465:10;;;;;;;;;;;;;;-1:-1:-1;390:5465:10;;;;-1:-1:-1;390:5465:10;;;;-1:-1:-1;390:5465:10;;;;;;:::o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MODERATOR_ROLE()":"797669c9","UPLOADER_ROLE()":"61cc0766","deactivateIPFSData(bytes32,string)":"2d3c3fcd","getActiveIPFSData(bytes32)":"5d837211","getIPFSData(bytes32)":"3d6f47b7","getIPFSHash(bytes32)":"2ed5ef14","getKeyByHash(string)":"b394e7a7","getRoleAdmin(bytes32)":"248a9ca3","getTotalUploads()":"be666c2c","getUserUploads(address)":"412bd348","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","hashToKey(string)":"1ca62a8f","ipfsData(bytes32)":"f657367e","isHashUsed(string)":"15e318c1","maxFileSize()":"1376d017","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","storeIPFSHash(bytes32,string,string,string,uint256,string)":"3e63df2b","supportsInterface(bytes4)":"01ffc9a7","totalUploads()":"6d5a0bca","updateMaxFileSize(uint256)":"57da0a78","usedHashes(string)":"bd1f5f31","userUploads(address,uint256)":"030d1efe","verifyChecksum(bytes32,string)":"b6123e55"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deactivator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"IPFSDataDeactivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"uploader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"IPFSHashStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldSize\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSize\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"updatedBy\",\"type\":\"address\"}],\"name\":\"MaxFileSizeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MODERATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPLOADER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_reason\",\"type\":\"string\"}],\"name\":\"deactivateIPFSData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getActiveIPFSData\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"hash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"uploader\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fileSize\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"checksum\",\"type\":\"string\"}],\"internalType\":\"struct IPFSStorage.IPFSData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getIPFSData\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"hash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"uploader\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fileSize\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"checksum\",\"type\":\"string\"}],\"internalType\":\"struct IPFSStorage.IPFSData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getIPFSHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"}],\"name\":\"getKeyByHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalUploads\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserUploads\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"hashToKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"ipfsData\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"hash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"uploader\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fileSize\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"checksum\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"}],\"name\":\"isHashUsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxFileSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_metadata\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_category\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_fileSize\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_checksum\",\"type\":\"string\"}],\"name\":\"storeIPFSHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUploads\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newMaxSize\",\"type\":\"uint256\"}],\"name\":\"updateMaxFileSize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"usedHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userUploads\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_checksum\",\"type\":\"string\"}],\"name\":\"verifyChecksum\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Enhanced utility contract for managing IPFS hashes and metadata with access control\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"IPFSStorage\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Manages decentralized storage references with enhanced security and validation\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IPFSStorage.sol\":\"IPFSStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/IPFSStorage.sol\":{\"keccak256\":\"0xaee2102b2eb253c07f8ece089c659ca3eb67b3a696bcee72a75ab29118c9c16c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f5044e632345cf869448297b84c53c695f673ed134bb4d5788fa1b58f7f2911\",\"dweb:/ipfs/QmRWTFkY8D6XVoJCFE2oTjFbmQXbU7nvFZjMaR2t652Kgy\"]}},\"version\":1}"}},"contracts/MedChain.sol":{"MedChain":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"batchId","type":"uint256"},{"indexed":false,"internalType":"string","name":"drugName","type":"string"},{"indexed":true,"internalType":"address","name":"manufacturer","type":"address"},{"indexed":false,"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"DrugBatchCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"batchId","type":"uint256"},{"indexed":true,"internalType":"address","name":"recaller","type":"address"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"DrugRecalled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":true,"internalType":"address","name":"hospital","type":"address"},{"indexed":true,"internalType":"address","name":"distributor","type":"address"},{"indexed":false,"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"DrugRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"batchId","type":"uint256"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"enum MedChain.DrugStatus","name":"newStatus","type":"uint8"}],"name":"DrugTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"batchId","type":"uint256"},{"indexed":true,"internalType":"address","name":"verifier","type":"address"},{"indexed":false,"internalType":"bool","name":"isValid","type":"bool"}],"name":"DrugVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"reportId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"batchId","type":"uint256"},{"indexed":true,"internalType":"address","name":"reporter","type":"address"}],"name":"ExpiredDrugReported","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"patient","type":"address"},{"indexed":false,"internalType":"string","name":"ipfsHash","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"HealthRecordUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"hospital","type":"address"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"enum MedChain.HospitalType","name":"hospitalType","type":"uint8"}],"name":"HospitalRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"hospital","type":"address"},{"indexed":false,"internalType":"uint256","name":"currentStock","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"threshold","type":"uint256"}],"name":"StockThresholdReached","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DISTRIBUTOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"HOSPITAL_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MANUFACTURER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PATIENT_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RURAL_PRIORITY_MULTIPLIER","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_drugHash","type":"bytes32"}],"name":"addWHOApprovedDrug","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_requestId","type":"uint256"}],"name":"approveRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_hospital","type":"address"}],"name":"calculatePriority","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_drugName","type":"string"},{"internalType":"string","name":"_drugCode","type":"string"},{"internalType":"string","name":"_regulatoryApproval","type":"string"},{"internalType":"bytes32","name":"_merkleRoot","type":"bytes32"},{"internalType":"string","name":"_ipfsHash","type":"string"},{"internalType":"uint256","name":"_quantity","type":"uint256"},{"internalType":"uint256","name":"_expiryDate","type":"uint256"}],"name":"createDrugBatch","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"address","name":"_patient","type":"address"},{"internalType":"uint256","name":"_quantity","type":"uint256"}],"name":"dispenseToPatient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"drugBatches","outputs":[{"internalType":"uint256","name":"batchId","type":"uint256"},{"internalType":"string","name":"drugName","type":"string"},{"internalType":"string","name":"drugCode","type":"string"},{"internalType":"address","name":"manufacturer","type":"address"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"string","name":"ipfsHash","type":"string"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"uint256","name":"originalQuantity","type":"uint256"},{"internalType":"uint256","name":"manufactureDate","type":"uint256"},{"internalType":"uint256","name":"expiryDate","type":"uint256"},{"internalType":"enum MedChain.DrugStatus","name":"status","type":"uint8"},{"internalType":"address","name":"currentHolder","type":"address"},{"internalType":"uint256","name":"transferCount","type":"uint256"},{"internalType":"bool","name":"isRecalled","type":"bool"},{"internalType":"string","name":"regulatoryApproval","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"drugRequests","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"address","name":"hospital","type":"address"},{"internalType":"address","name":"distributor","type":"address"},{"internalType":"uint256","name":"batchId","type":"uint256"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"enum MedChain.RequestStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"priorityScore","type":"uint256"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"string","name":"urgencyLevel","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_hospital","type":"address"},{"internalType":"uint256","name":"_newStock","type":"uint256"}],"name":"emergencyStockOverride","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"expiredReports","outputs":[{"internalType":"uint256","name":"reportId","type":"uint256"},{"internalType":"uint256","name":"batchId","type":"uint256"},{"internalType":"address","name":"reporter","type":"address"},{"internalType":"string","name":"ipfsHash","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"verified","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"}],"name":"getBatchTransferCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentBatchId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentReportId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentRequestId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"}],"name":"getDrugBatch","outputs":[{"components":[{"internalType":"uint256","name":"batchId","type":"uint256"},{"internalType":"string","name":"drugName","type":"string"},{"internalType":"string","name":"drugCode","type":"string"},{"internalType":"address","name":"manufacturer","type":"address"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"string","name":"ipfsHash","type":"string"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"uint256","name":"originalQuantity","type":"uint256"},{"internalType":"uint256","name":"manufactureDate","type":"uint256"},{"internalType":"uint256","name":"expiryDate","type":"uint256"},{"internalType":"enum MedChain.DrugStatus","name":"status","type":"uint8"},{"internalType":"address","name":"currentHolder","type":"address"},{"internalType":"uint256","name":"transferCount","type":"uint256"},{"internalType":"bool","name":"isRecalled","type":"bool"},{"internalType":"string","name":"regulatoryApproval","type":"string"}],"internalType":"struct MedChain.DrugBatch","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_requestId","type":"uint256"}],"name":"getDrugRequest","outputs":[{"components":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"address","name":"hospital","type":"address"},{"internalType":"address","name":"distributor","type":"address"},{"internalType":"uint256","name":"batchId","type":"uint256"},{"internalType":"uint256","name":"quantity","type":"uint256"},{"internalType":"enum MedChain.RequestStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"priorityScore","type":"uint256"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"string","name":"urgencyLevel","type":"string"}],"internalType":"struct MedChain.DrugRequest","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_reportId","type":"uint256"}],"name":"getExpiredReport","outputs":[{"components":[{"internalType":"uint256","name":"reportId","type":"uint256"},{"internalType":"uint256","name":"batchId","type":"uint256"},{"internalType":"address","name":"reporter","type":"address"},{"internalType":"string","name":"ipfsHash","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"verified","type":"bool"}],"internalType":"struct MedChain.ExpiredDrugReport","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_patient","type":"address"}],"name":"getHealthRecord","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_hospital","type":"address"}],"name":"getHospital","outputs":[{"components":[{"internalType":"address","name":"hospitalAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"registrationNumber","type":"string"},{"internalType":"enum MedChain.HospitalType","name":"hospitalType","type":"uint8"},{"internalType":"uint256","name":"stockCount","type":"uint256"},{"internalType":"uint256","name":"stockThreshold","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"bool","name":"isVerified","type":"bool"},{"internalType":"uint256","name":"capacity","type":"uint256"}],"internalType":"struct MedChain.Hospital","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_hospital","type":"address"}],"name":"getHospitalRequests","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_patient","type":"address"}],"name":"getPatientBatches","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"grantDistributorRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"grantHospitalRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"grantManufacturerRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"grantPatientRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"healthRecords","outputs":[{"internalType":"address","name":"patient","type":"address"},{"internalType":"string","name":"ipfsHash","type":"string"},{"internalType":"uint256","name":"lastUpdated","type":"uint256"},{"internalType":"bool","name":"exists","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"hospitalRequests","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"hospitals","outputs":[{"internalType":"address","name":"hospitalAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"registrationNumber","type":"string"},{"internalType":"enum MedChain.HospitalType","name":"hospitalType","type":"uint8"},{"internalType":"uint256","name":"stockCount","type":"uint256"},{"internalType":"uint256","name":"stockThreshold","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"bool","name":"isVerified","type":"bool"},{"internalType":"uint256","name":"capacity","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"}],"name":"isBatchRecalled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"}],"name":"isValidBatch","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_drugHash","type":"bytes32"}],"name":"isWHOApproved","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"patientBatches","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"string","name":"_reason","type":"string"}],"name":"recallDrugBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_hospital","type":"address"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_registrationNumber","type":"string"},{"internalType":"enum MedChain.HospitalType","name":"_hospitalType","type":"uint8"},{"internalType":"uint256","name":"_stockThreshold","type":"uint256"},{"internalType":"uint256","name":"_capacity","type":"uint256"}],"name":"registerHospital","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_requestId","type":"uint256"}],"name":"rejectRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_drugHash","type":"bytes32"}],"name":"removeWHOApprovedDrug","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"string","name":"_evidenceIpfsHash","type":"string"}],"name":"reportExpiredDrug","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_distributor","type":"address"},{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"uint256","name":"_quantity","type":"uint256"},{"internalType":"string","name":"_reason","type":"string"},{"internalType":"string","name":"_urgencyLevel","type":"string"}],"name":"requestDrugs","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"address","name":"_distributor","type":"address"}],"name":"transferToDistributor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"address","name":"_hospital","type":"address"}],"name":"transferToHospital","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_patient","type":"address"},{"internalType":"string","name":"_ipfsHash","type":"string"}],"name":"updateHealthRecord","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_hospital","type":"address"},{"internalType":"uint256","name":"_newThreshold","type":"uint256"}],"name":"updateStockThreshold","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"bytes32","name":"_leaf","type":"bytes32"},{"internalType":"bytes32[]","name":"_proof","type":"bytes32[]"}],"name":"verifyAndLog","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_batchId","type":"uint256"},{"internalType":"bytes32","name":"_leaf","type":"bytes32"},{"internalType":"bytes32[]","name":"_proof","type":"bytes32[]"}],"name":"verifyDrug","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_reportId","type":"uint256"}],"name":"verifyExpiredReport","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"whoApprovedDrugs","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"fun_grantRole":{"entryPoint":202,"id":257,"parameterSlots":1,"returnSlots":1},"fun_grantRole_458":{"entryPoint":74,"id":257,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60806040523462000045576001805560016003556001600455600160055562000028336200004a565b506200003433620000ca565b50604051614e5690816200016d8239f35b600080fd5b6001600160a01b031660008181527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205490919060ff16620000c657818052816020526040822081835260205260408220600160ff19825416179055339160008051602062004fc38339815191528180a4600190565b5090565b6001600160a01b031660008181527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec60205260408120549091907fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217759060ff166200016757808352826020526040832082845260205260408320600160ff1982541617905560008051602062004fc3833981519152339380a4600190565b50509056fe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a714613ed65750806309c3bdb314613e4f5780630c38b75f14613d3c57806311cf8d8514613cc157806315cd184114613c965780632074906814613c3e578063248a9ca314613c0f5780632d7788db14613af55780632f2ff15d14613ab65780632ff2ff0b14613a465780633316777e14613a2d57806336568abe146139e657806339595ee4146139bb5780633f4ba83a14613930578063463b3da014613610578063463e1f15146133135780634d22436f1461320a57806355c4281e146131c05780635c975abb1461319d5780635d45e0841461312557806369a6dda5146130a157806375b238fc146130665780637ee756f21461301c5780637f2df8b014612fd25780638102dbcf14612f865780638456cb5914612f0b57806385115ab114612d445780638987e93614612cf35780638a817e7b14612a4d5780638bba2a0a14612a035780638d55863b1461219357806391d1485414612146578063965288b01461210b57806398e9220a1461208957806399be8c8214612034578063a217fddf14612018578063a69d634f14611ffc578063ac5cb97d14611fd3578063af98814514611f51578063b6e202d7146119ae578063bc7999ad14611986578063bd8f175214611800578063c098cc3214611735578063c177d077146115f4578063c49b09b514611463578063d50f7e7b14611419578063d547741f146113d8578063d5e42f79146111b4578063d7d1bbdb14611098578063d890e0491461106d578063dfe6bbe6146102be578063e17769bf14610ff4578063e181143c14610f9c578063e19d6fd0146109b2578063e229f2cb146106f1578063e720ac8e146106b0578063f093cf80146105dd578063f0bd87cc146105b4578063f276c3231461031d578063f6ba6678146102f45763fdbf6ee5146102be57600080fd5b346102ef5760203660031901126102ef57600435600052600b602052602060ff604060002054166040519015158152f35b600080fd5b346102ef5760003660031901126102ef576020604051600080516020614e018339815191528152f35b346102ef5760203660031901126102ef5760606101c060405161033f81613fb6565b60008152826020820152826040820152600083820152600060808201528260a0820152600060c0820152600060e08201526000610100820152600061012082015260006101408201526000610160820152600061018082015260006101a08201520152600435801515806105a9575b6103b790614774565b60005260066020526105a560406000206104a0600d604051926103d984613fb6565b805484526103e960018201613ff3565b60208501526103fa60028201613ff3565b604085015260038101546001600160a01b031660608501526004810154608085015261042860058201613ff3565b60a0850152600681015460c0850152600781015460e085015260088101546101008501526009810154610120850152600a81015461046d60ff8216610140870161474a565b60081c6001600160a01b0316610160850152600b810154610180850152600c81015460ff1615156101a085015201613ff3565b6101c082015260405191829160208352805160208401526101c06105236104f16104db60208501516101e06040890152610200880190614099565b6040850151878203601f19016060890152614099565b60018060a01b036060850151166080870152608084015160a087015260a0840151601f198783030160c0880152614099565b9160c081015160e086015260e081015161010086015261010081015161012086015261012081015161014086015261056561014082015161016087019061425f565b60018060a01b03610160820151166101808601526101808101516101a08601526101a08101511515828601520151601f19848303016101e0850152614099565b0390f35b5060035481106103ae565b346102ef5760003660031901126102ef576020604051600080516020614dc18339815191528152f35b346102ef5760203660031901126102ef576001600160a01b03806105ff6140d9565b16600052600760205260406000209081541661061d60018301613ff3565b9161062a60028201613ff3565b60ff8060038401541692600481015460058201549061068761067c600760068601549501549661066e6040519b8c9b8c5260208c61012091829101528c0190614099565b908a820360408c0152614099565b96606089019061426c565b608087015260a0860152818116151560c086015260081c16151560e08401526101008301520390f35b346102ef5760003660031901126102ef5760035460001981019081116106db57602090604051908152f35b634e487b7160e01b600052601160045260246000fd5b346102ef5760403660031901126102ef5760043561070d6140ef565b3360009081527f6b476db4b19b8e11ac475b323c35b9d0f52831cf1d8cf1455692d57ffbccaaac602090815260409091205461074b9060ff16614646565b821515806109a7575b61075d90614774565b610765614756565b60019260028454146109955760028455600080516020614dc18339815191526000526000825260406000209260018060a01b03808216948560005284526107b360ff604060002054166147b3565b82600052600684523390600360406000200154160361094457816000526006835260ff600a6040600020015416600581101561092e576107f390156147ff565b816000526006835260ff600c60406000200154166108e95781600052600683526009604060002001544210156108a45760008281526006845260409020600a81018054610100600160a81b031988166001600160a81b03199091161760089390931b610100600160a81b031692909217909155600b01610873815461473b565b90557f1183a7beb644d5e5d07752e6223cf93b80b08a9201f60c52aaa3d23aa32252c1604051928584523393a48055005b60405162461bcd60e51b815260048101849052601d60248201527f43616e6e6f74207472616e7366657220657870697265642062617463680000006044820152606490fd5b60405162461bcd60e51b815260048101849052601e60248201527f43616e6e6f74207472616e7366657220726563616c6c656420626174636800006044820152606490fd5b634e487b7160e01b600052602160045260246000fd5b60405162461bcd60e51b8152600481018490526024808201527f4f6e6c79206261746368206d616e7566616374757265722063616e207472616e60448201526339b332b960e11b6064820152608490fd5b604051633ee5aeb560e01b8152600490fd5b506003548310610754565b346102ef5760a03660031901126102ef576109cb6140d9565b6064356001600160401b0381116102ef576109ea90369060040161418f565b906084356001600160401b0381116102ef57610a0a90369060040161418f565b336000908152600080516020614de18339815191526020526040902054909190610a369060ff166148e3565b6001600160a01b03811660009081527f37775adb12013835ce20d78b1c52193dd1da3dc792bc1ec9a2d7427221516c8a6020526040902054610a7a9060ff166147b3565b336000526007602052610a9760ff6006604060002001541661489e565b610aa460443515156146a3565b825115610f5e57815115610f205760045491610abf8361473b565b600455336000526007602052604060002060405190610add82613f7e565b80546001600160a01b03168252610af660018201613ff3565b6020830152610b0760028201613ff3565b6040830152600760ff60038301541691610b256060850193846149ce565b60048101546080850152600581015460a085015260ff6006820154818116151560c087015260081c16151560e085015201546101008301525190600282101561092e5760a091600103610f18570151808060011b04600214811517156106db5760011b935b60405194610b9786613f9a565b84865233602087015260018060a01b038416604087015260243560608701526044356080870152600060a08701524260c087015260e08601526101008501526101208401528160005260086020526040600020835181556001810160018060a01b03602086015116906001600160601b0360a01b9182825416179055600282019060018060a01b036040870151169082541617905560608401516003820155608084015160048201556005810160a0850151600481101561092e5760ff8019835416911617905560c0840151600682015560e084015160078201556101008401518051906001600160401b038211610e3c57610c966008840154613f29565b601f8111610ed1575b50602090601f8311600114610e5d5791806101209492600994600092610e52575b50508160011b916000199060031b1c19161760088201555b019301519283516001600160401b038111610e3c57610cf78254613f29565b601f8111610df4575b50806020958690601f8311600114610d9057600092610d85575b50508160011b916000199060031b1c19161790555b33600052600c8352610d45826040600020614994565b60405190604435825260018060a01b031690827f5ab53553aadac42f69e7f599923c6df5aa5264ba08b69e5b61b9b2cf4517a042853393a4604051908152f35b015190508680610d1a565b60008581528881209350601f198516905b818110610ddd5750908460019594939210610dc4575b505050811b019055610d2f565b015160001960f88460031b161c19169055868080610db7565b929389600181928786015181550195019301610da1565b826000526020600020601f830160051c81019160208410610e32575b601f0160051c01905b818110610e265750610d00565b60008155600101610e19565b9091508190610e10565b634e487b7160e01b600052604160045260246000fd5b015190508880610cc0565b90601f198316916008850160005260206000209260005b818110610eb95750926001928592600996610120989610610ea0575b505050811b016008820155610cd8565b015160001960f88460031b161c19169055888080610e90565b92936020600181928786015181550195019301610e74565b600884016000526020600020601f840160051c810160208510610f11575b601f830160051c82018110610f05575050610c9f565b60008155600101610eef565b5080610eef565b015193610b8a565b60405162461bcd60e51b8152602060048201526016602482015275155c99d95b98de481b195d995b081c995c5d5a5c995960521b6044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275526561736f6e2063616e6e6f7420626520656d70747960501b6044820152606490fd5b346102ef5760403660031901126102ef57610fb56140d9565b6001600160a01b03166000908152600d60205260409020805460243591908210156102ef57602091610fe691614279565b90546040519160031b1c8152f35b346102ef5760203660031901126102ef57336000908152600080516020614da18339815191526020526040902054600435906110329060ff166145f0565b80151580611062575b61104490614af2565b6000908152600a60205260409020600501805460ff19166001179055005b50600554811061103b565b346102ef5760203660031901126102ef57602061109061108b6140d9565b614c66565b604051908152f35b346102ef576020806003193601126102ef5760043590600080516020614dc18339815191526000526000815260406000203360005281526110e060ff60406000205416614842565b811515806111a9575b6110f290614a65565b81600052600881523360018060a01b03600260406000200154160361115757816000526008815260ff6005604060002001541691600483101561092e5761113b60089315614aa6565b600052526005604060002001600160ff19825416179055600080f35b6084906040519062461bcd60e51b82526004820152602560248201527f4f6e6c792061737369676e6564206469737472696275746f722063616e20617060448201526470726f766560d81b6064820152fd5b5060045482106110e9565b346102ef5760403660031901126102ef576004356111d06140ef565b3360009081527f37775adb12013835ce20d78b1c52193dd1da3dc792bc1ec9a2d7427221516c8a6020908152604090912054919290916112129060ff16614842565b801515806113cd575b61122490614774565b600080516020614e018339815191526000526000825260406000209260018060a01b038082169485600052845260ff60406000205416156113885782600052600684523390600a6040600020015460081c160361134557816000526006835260ff600a604060002001541690600582101561092e576112a76001600693146147ff565b84600052600784526112c260ff83604060002001541661489e565b600083815282855260409020600a810180546001600160a81b03191660089390931b610100600160a81b03169290921760021790915501548360005260078352600460406000200180549182018092116106db57557f1183a7beb644d5e5d07752e6223cf93b80b08a9201f60c52aaa3d23aa32252c160405192600284523393a4005b6064836040519062461bcd60e51b825280600483015260248201527f4f6e6c792063757272656e7420686f6c6465722063616e207472616e736665726044820152fd5b60405162461bcd60e51b815260048101859052601860248201527f496e76616c696420686f73706974616c206164647265737300000000000000006044820152606490fd5b50600354811061121b565b346102ef5760403660031901126102ef576114176004356113f76140ef565b908060005260006020526114126001604060002001546142a7565b61457b565b005b346102ef5760403660031901126102ef576114326140d9565b6001600160a01b03166000908152600c60205260409020805460243591908210156102ef57602091610fe691614279565b346102ef576020806003193601126102ef5761147d6140d9565b9060405161148a81613f7e565b600081528181016060905260408101606090526060810160009052608081016000905260a081016000905260c081016000905260e081016000905261010080910160009052600160a01b6001900380931660005260078252604060002090604051926114f584613f7e565b82548516845261150760018401613ff3565b8482019081529161151a60028501613ff3565b9260408601938452600385015460ff1694606087019561153a90876149ce565b60048101546080880190815260058201549060a0890191825260068301549360c08a019360ff86161515855260e08b019560081c60ff16151586526007015496868b019788526040519b8c9b828d525116908b01525196610120978860408c01526101408b016115a991614099565b90518a8203601f190160608c01526115c19190614099565b975160808a016115d09161426c565b5160a08901525160c088015251151560e08701525115159085015251908301520390f35b346102ef5760203660031901126102ef576004356000526006602052604060002080546001820161162490613ff3565b9161163160028201613ff3565b6003820154600483015491926001600160a01b039091169161165560058301613ff3565b926006830154936007840154600885015490600986015492600a87015494600b88015496600c89015460ff1698600d0161168e90613ff3565b9a6040519d8e9d8e528d6101e090816020820152016116ac91614099565b8d810360408f01526116bd91614099565b9160608d015260808c01528a810360a08c01526116d991614099565b9660c08a015260e0890152610100880152610120870152610140860160ff8216906117039161425f565b60081c6001600160a01b031661016086015261018085015215156101a08401528281036101c08401526105a591614099565b346102ef5760203660031901126102ef576004356000526008602052604060002080546105a560018060a01b03926117f1846001830154169460028301541691600381015460048201546117d560ff6005850154166006850154926007860154946117ae60096117a760088a01613ff3565b9801613ff3565b986040519c8d9c8d5260208d015260408c015260608b015260808a015260a0890190614252565b60c087015260e086015261014080610100870152850190614099565b90838203610120850152614099565b346102ef576020806003193601126102ef576001600160a01b036118226140d9565b168033148015611956575b8015611914575b156118c357806000526009825260ff600360406000200154161561187e57600052600981526118696001604060002001613ff3565b906105a5604051928284938452830190614099565b60405162461bcd60e51b815260048101839052601c60248201527f4865616c7468207265636f726420646f6573206e6f74206578697374000000006044820152606490fd5b60405162461bcd60e51b8152600481018390526024808201527f556e617574686f72697a65642061636365737320746f206865616c746820726560448201526318dbdc9960e21b6064820152608490fd5b507fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177560005260008252604060002033600052825260ff60406000205416611834565b50600080516020614e0183398151915260005260008252604060002033600052825260ff6040600020541661182d565b346102ef5760203660031901126102ef5760206119a4600435614b32565b6040519015158152f35b346102ef5760c03660031901126102ef576119c76140d9565b6024356001600160401b0381116102ef576119e690369060040161418f565b6044356001600160401b0381116102ef57611a0590369060040161418f565b600260643510156102ef57336000908152600080516020614da18339815191526020526040902054611a399060ff166145f0565b6001600160a01b03831660009081526007602052604090206006015460ff16611f0c57815115611ec757805115611e825760a43515611e325760405190611a7f82613f7e565b6001600160a01b0384168252602082018390526040820152611aa6606435606083016149ce565b6000608082015260843560a0820152600160c0820152600160e082015260a43561010082015260018060a01b038316600052600760205260406000209160018060a01b038251166001600160601b0360a01b84541617835560208201518051906001600160401b038211610e3c578190611b236001870154613f29565b601f8111611ddf575b50602090601f8311600114611d6d57600092611d62575b50508160011b916000199060031b1c19161760018401555b60408201518051906001600160401b038211610e3c578190611b806002870154613f29565b601f8111611d0f575b50602090601f8311600114611c9d57600092611c92575b50508160011b916000199060031b1c19161760028401555b60608201519260038101600285101561092e57610100611c73946007927fdc9c7ce67c6478b15cb0dbf6f1ed597031431d25746171ccc85589f6584622529760ff801983541691161790556080810151600485015560a0810151600585015560068401611c3760c08301511515829060ff801983541691151516179055565b60e0820151815461ff00191690151560081b61ff00161790550151910155611c5e8461438b565b50604051918291604083526040830190614099565b93611c836020830160643561426c565b6001600160a01b0316930390a2005b015190508680611ba0565b9250600286016000526020600020906000935b601f1984168510611cf4576001945083601f19811610611cdb575b505050811b016002840155611bb8565b015160001960f88460031b161c19169055868080611ccb565b81810151835560209485019460019093019290910190611cb0565b909150600286016000526020600020601f840160051c810160208510611d5b575b90849392915b601f830160051c82018110611d4c575050611b89565b60008155859450600101611d36565b5080611d30565b015190508680611b43565b9250600186016000526020600020906000935b601f1984168510611dc4576001945083601f19811610611dab575b505050811b016001840155611b5b565b015160001960f88460031b161c19169055868080611d9b565b81810151835560209485019460019093019290910190611d80565b909150600186016000526020600020601f840160051c810160208510611e2b575b90849392915b601f830160051c82018110611e1c575050611b2c565b60008155859450600101611e06565b5080611e00565b60405162461bcd60e51b815260206004820152602260248201527f486f73706974616c206361706163697479206d75737420626520706f73697469604482015261766560f01b6064820152608490fd5b60405162461bcd60e51b815260206004820152601c60248201527f526567697374726174696f6e206e756d626572207265717569726564000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f486f73706974616c206e616d652063616e6e6f7420626520656d7074790000006044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f486f73706974616c20616c7265616479207265676973746572656400000000006044820152606490fd5b346102ef5760403660031901126102ef57611f6a6140d9565b336000908152600080516020614da18339815191526020526040902054611f939060ff166145f0565b6001600160a01b0316600081815260076020526040902060060154611fba9060ff1661489e565b6000526007602052602435600460406000200155600080f35b346102ef5760003660031901126102ef576020604051600080516020614d818339815191528152f35b346102ef5760003660031901126102ef57602060405160028152f35b346102ef5760003660031901126102ef57602060405160008152f35b346102ef5760203660031901126102ef57336000908152600080516020614da1833981519152602052604090205461206e9060ff166145f0565b6004356000908152600b60205260409020805460ff19169055005b346102ef5760403660031901126102ef576120a26140d9565b336000908152600080516020614da183398151915260205260409020546120cb9060ff166145f0565b6001600160a01b03166000818152600760205260409020600601546120f29060ff1661489e565b6000526007602052602435600560406000200155600080f35b346102ef5760003660031901126102ef5760206040517feefb95e842a3287179d933b4460be539a1d5af11aa8b325bb45c5c8dc92de4ed8152f35b346102ef5760403660031901126102ef5761215f6140ef565b600435600052600060205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b346102ef5760e03660031901126102ef576004356001600160401b0381116102ef576121c390369060040161418f565b6024356001600160401b0381116102ef576121e290369060040161418f565b906044356001600160401b0381116102ef5761220290369060040161418f565b906084356001600160401b0381116102ef5761222290369060040161418f565b3360009081527f6b476db4b19b8e11ac475b323c35b9d0f52831cf1d8cf1455692d57ffbccaaac60205260409020549092906122609060ff16614646565b612268614756565b61227560a43515156146a3565b4260c43511156129b45781511561296f5783511561292a57612299835115156146ef565b8051156128e557600354926122ad8461473b565b600355604051946122bd86613fb6565b8486528360208701526040860152336060860152606435608086015260a085015260a43560c085015260a43560e08501524261010085015260c435610120850152600061014085015233610160850152600061018085015260006101a08501526101c084015281600052600660205260406000208351815560208401518051906001600160401b038211610e3c57819061235a6001850154613f29565b601f8111612892575b50602090601f831160011461282057600092612815575b50508160011b916000199060031b1c19161760018201555b60408401518051906001600160401b038211610e3c5781906123b76002850154613f29565b601f81116127c2575b50602090601f831160011461275057600092612745575b50508160011b916000199060031b1c19161760028201555b6003810160018060a01b036060860151166001600160601b0360a01b8254161790556080840151600482015560a08401518051906001600160401b038211610e3c5781906124406005850154613f29565b601f81116126f2575b50602090601f831160011461268057600092612675575b50508160011b916000199060031b1c19161760058201555b60c0840151600682015560e0840151600782015561010084015160088201556101208401516009820155600a810161014085015191600583101561092e5781546101608701516001600160a81b031990911660ff9485161760089190911b610100600160a81b031617909155610180850151600b8201556101a0850151600c8201805491151590931660ff1991909116179091556101c090600d019301519283516001600160401b038111610e3c576125318254613f29565b601f811161262d575b50806020958690601f83116001146125c9576000926125be575b50508160011b916000199060031b1c19161790555b817fe81d190ae43a7eaaf3db1d1ad7e4d9d84b8c08c3ef7c78d479e556efb4802fc86125a060405193606085526060850190614099565b926064358682015260a43560408201528033940390a3604051908152f35b015190508680612554565b60008581528881209350601f198516905b81811061261657509084600195949392106125fd575b505050811b019055612569565b015160001960f88460031b161c191690558680806125f0565b9293896001819287860151815501950193016125da565b826000526020600020601f830160051c8101916020841061266b575b601f0160051c01905b81811061265f575061253a565b60008155600101612652565b9091508190612649565b015190508680612460565b9250600584016000526020600020906000935b601f19841685106126d7576001945083601f198116106126be575b505050811b016005820155612478565b015160001960f88460031b161c191690558680806126ae565b81810151835560209485019460019093019290910190612693565b909150600584016000526020600020601f840160051c81016020851061273e575b90849392915b601f830160051c8201811061272f575050612449565b60008155859450600101612719565b5080612713565b0151905086806123d7565b9250600284016000526020600020906000935b601f19841685106127a7576001945083601f1981161061278e575b505050811b0160028201556123ef565b015160001960f88460031b161c1916905586808061277e565b81810151835560209485019460019093019290910190612763565b909150600284016000526020600020601f840160051c81016020851061280e575b90849392915b601f830160051c820181106127ff5750506123c0565b600081558594506001016127e9565b50806127e3565b01519050868061237a565b9250600184016000526020600020906000935b601f1984168510612877576001945083601f1981161061285e575b505050811b016001820155612392565b015160001960f88460031b161c1916905586808061284e565b81810151835560209485019460019093019290910190612833565b909150600184016000526020600020601f840160051c8101602085106128de575b90849392915b601f830160051c820181106128cf575050612363565b600081558594506001016128b9565b50806128b3565b60405162461bcd60e51b815260206004820152601c60248201527f526567756c61746f727920617070726f76616c207265717569726564000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f4472756720636f64652063616e6e6f7420626520656d707479000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f44727567206e616d652063616e6e6f7420626520656d707479000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152602160248201527f4578706972792064617465206d75737420626520696e207468652066757475726044820152606560f81b6064820152608490fd5b346102ef5760203660031901126102ef57611417612a1f6140d9565b336000908152600080516020614da18339815191526020526040902054612a489060ff166145f0565b61448b565b346102ef5760403660031901126102ef57612a666140d9565b6001600160401b036024358181116102ef57612a8690369060040161418f565b336000908152600080516020614de1833981519152602090815260409091205491929091612ab69060ff166148e3565b600080516020614d818339815191526000526000825260406000209360018060a01b0380911694856000528352612af460ff6040600020541661493b565b612b00845115156146ef565b604051916080830183811082821117610e3c5760405285835283830185815260408401914283526060850193600190818652896000526009885260406000209651166001600160601b0360a01b87541617865580860192518051928311610e3c57612b6b8454613f29565b601f8111612caa575b508790601f8411600114612c1657938380600395612c009b9995612bec99957f5c2b5d6645d201d29b6da912156d4b230ad8c622967aa75bd74d5e86308236d89e9c99600094612c0b575b50501b9160001990871b1c19161790555b51600284015551151591019060ff801983541691151516179055565b604051928392604084526040840190614099565b9042908301520390a2005b015192508f80612bbf565b90601f9392931983169185600052896000209260005b818110612c95575093612bec97937f5c2b5d6645d201d29b6da912156d4b230ad8c622967aa75bd74d5e86308236d89c9a97936003979383612c009e9c9810612c7d575b505050811b019055612bd0565b015160001983891b60f8161c191690558d8080612c70565b82840151855593860193928b01928b01612c2c565b8460005288600020601f850160051c8101918a8610612ce9575b601f0160051c019083905b828110612cdd575050612b74565b60008155018390612ccf565b9091508190612cc4565b346102ef5760203660031901126102ef5760043580151580612d39575b612d1990614774565b6000526006602052602060ff600c60406000200154166040519015158152f35b506003548110612d10565b346102ef5760203660031901126102ef576004356060610120604051612d6981613f9a565b60008152600060208201526000604082015260008382015260006080820152600060a0820152600060c0820152600060e082015282610100820152015280151580612f00575b612db890614a65565b60005260086020526040600020604051612dd181613f9a565b8154815260018201546001600160a01b0390811660208301526002830154166040820152600382015460608201526004808301546080830152600583015460ff16929083101561092e576009612e56916105a59460a0850152600681015460c0850152600781015460e0850152612e4a60088201613ff3565b61010085015201613ff3565b610120820152604051918291602083528051602084015260018060a01b03602082015116604084015260018060a01b03604082015116606084015260608101516080840152608081015160a0840152612eb760a082015160c0850190614252565b60c081015160e084015260e0810151610100840152610100810151610120612eec610140928383880152610160870190614099565b92015190601f198584030190850152614099565b506004548110612daf565b346102ef5760003660031901126102ef57336000908152600080516020614da18339815191526020526040902054612f459060ff166145f0565b612f4d614756565b600160ff1960025416176002557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b346102ef5760203660031901126102ef5760043580151580612fc7575b612fac90614774565b60005260066020526020600b60406000200154604051908152f35b506003548110612fa3565b346102ef5760203660031901126102ef57611417612fee6140d9565b336000908152600080516020614da183398151915260205260409020546130179060ff166145f0565b614402565b346102ef5760203660031901126102ef576114176130386140d9565b336000908152600080516020614da183398151915260205260409020546130619060ff166145f0565b61438b565b346102ef5760003660031901126102ef5760206040517fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217758152f35b346102ef576020806003193601126102ef576001600160a01b036130c36140d9565b16600052600d8152604060002090604051908181845491828152019360005281600020916000905b82821061310e576105a58561310281890382613fd2565b60405191829182614217565b8354865294850194600193840193909101906130eb565b346102ef576020806003193601126102ef576001600160a01b036131476140d9565b16600052600c8152604060002090604051908181845491828152019360005281600020916000905b828210613186576105a58561310281890382613fd2565b83548652948501946001938401939091019061316f565b346102ef5760003660031901126102ef57602060ff600254166040519015158152f35b346102ef5760203660031901126102ef576114176131dc6140d9565b336000908152600080516020614da183398151915260205260409020546132059060ff166145f0565b6142eb565b346102ef57613218366141e5565b336000908152600080516020614da18339815191526020908152604090912054909291906132489060ff166145f0565b81151580613308575b61325a90614774565b816000526006835260ff600c60406000200154166132ca576132c57feb44898320c8a9cdeba7cce944505307316634cf2ec97635311d70dd46aaaae6918360005260068552600c604060002001600160ff198254161790556040519182918683523396830190614099565b0390a3005b60405162461bcd60e51b815260048101849052601660248201527510985d18da08185b1c9958591e481c9958d85b1b195960521b6044820152606490fd5b506003548210613251565b346102ef5760603660031901126102ef5760043561332f6140ef565b336000908152600080516020614de183398151915260209081526040909120549192909160ff90604435906133659083166148e3565b82151580613605575b61337790614774565b600080516020614d818339815191526000526000845260406000209460018060a01b03809116958660005285526133b4836040600020541661493b565b83600052600691828652600a6040600020015482339160081c16036135c2578460005282865283600a6040600020015416600581101561092e5760026133fa91146147ff565b8460005282865282604060002001548111613585578460005282865282604060002001613428828254614987565b90558460005282865260406000208381015415613571575b50336000526007865261345c6004604060002001918254614987565b905585600052600d8552613474846040600020614994565b3360005260078552610100600760406000206040519361349385613f7e565b81541684526134a460018201613ff3565b888501526134b460028201613ff3565b60408501526134cc86600383015416606086016149ce565b6004810154958660808601526005820154958660a0870152820154818116151560c087015260081c16151560e085015201549101528082111561353a575b50507f1183a7beb644d5e5d07752e6223cf93b80b08a9201f60c52aaa3d23aa32252c160405192600384523393a4005b604051918252838201527f41e9729cd843b40e15655cc985182426e5c96894afc3283a7f5d012d43ec8c3560403392a2838061350a565b600a01805460ff1916600317905587613440565b60405162461bcd60e51b8152600481018790526015602482015274496e73756666696369656e74207175616e7469747960581b6044820152606490fd5b6064866040519062461bcd60e51b825280600483015260248201527f4f6e6c792063757272656e7420686f6c6465722063616e2064697370656e73656044820152fd5b50600354831061336e565b346102ef5761361e366141e5565b336000908152600080516020614de183398151915260209081526040909120549092919061364e9060ff166148e3565b81151580613925575b61366090614774565b816000526006835260018060a01b033381600a6040600020015460081c16036138e05781511561389057600554916136978361473b565b600555604051916136a783613f63565b83835285830191858352604084019133835260608501918252608085019242845260a08601946000865287600052600a8a52604060002096518755519160019283880155600287019151166001600160601b0360a01b825416179055600385019151908151916001600160401b038311610e3c576137258454613f29565b601f8111613847575b508990601f84116001146137d7579280613781989795938193600598966000946137cc575b50501b916000199060031b1c19161790555b51600484015551151591019060ff801983541691151516179055565b8160005260068352600a604060002001600460ff19825416179055604051913390827f19e8779a5de1deea64844b3c74c7909a3e9d5774a736170cf5add7d652d3cfc2600080a48152f35b015192508d80613753565b90601f93929319831691856000528b6000209260005b8d82821061383357505091600597959391856137819b9a9896941061381a575b505050811b019055613765565b015160001960f88460031b161c191690558b808061380d565b8385015186559487019493840193016137ed565b846000528a600020601f850160051c8101918c8610613886575b601f0160051c019083905b82811061387a57505061372e565b6000815501839061386c565b9091508190613861565b60405162461bcd60e51b815260048101859052602260248201527f45766964656e6365204950465320686173682063616e6e6f7420626520656d70604482015261747960f01b6064820152608490fd5b60405162461bcd60e51b815260048101859052601e60248201527f4f6e6c792063757272656e7420686f6c6465722063616e207265706f727400006044820152606490fd5b506003548210613657565b346102ef5760003660031901126102ef57336000908152600080516020614da1833981519152602052604090205461396a9060ff166145f0565b60025460ff8116156139a95760ff19166002557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b604051638dfc202b60e01b8152600490fd5b346102ef5760003660031901126102ef5760055460001981019081116106db57602090604051908152f35b346102ef5760403660031901126102ef576139ff6140ef565b336001600160a01b03821603613a1b576114179060043561457b565b60405163334bd91960e11b8152600490fd5b346102ef5760206119a4613a4036614105565b916149da565b346102ef576020613a74613a5936614105565b90829392151580613aab575b613a6e90614774565b836149da565b604051901515918282527f06c064a68a91e386a0f86fbeea16fd0052a00310bf1fd86927f30d29c9c881c6843393a3604051908152f35b506003548410613a65565b346102ef5760403660031901126102ef57611417600435613ad56140ef565b90806000526000602052613af06001604060002001546142a7565b614514565b346102ef576020806003193601126102ef5760043590600080516020614dc1833981519152600052600081526040600020336000528152613b3d60ff60406000205416614842565b81151580613c04575b613b4f90614a65565b81600052600881523360018060a01b036002604060002001541603613bb457816000526008815260ff6005604060002001541691600483101561092e57613b9860089315614aa6565b600052526005604060002001600260ff19825416179055600080f35b6084906040519062461bcd60e51b825260048201526024808201527f4f6e6c792061737369676e6564206469737472696275746f722063616e2072656044820152631a9958dd60e21b6064820152fd5b506004548210613b46565b346102ef5760203660031901126102ef5760043560005260006020526020600160406000200154604051908152f35b346102ef5760203660031901126102ef57336000908152600080516020614da18339815191526020526040902054613c789060ff166145f0565b6004356000908152600b60205260409020805460ff19166001179055005b346102ef5760003660031901126102ef5760045460001981019081116106db57602090604051908152f35b346102ef5760203660031901126102ef576001600160a01b0380613ce36140d9565b166000526009602052604060002090815416613d0160018301613ff3565b9160ff6003600283015492015416613d2b6040519485948552608060208601526080850190614099565b916040840152151560608301520390f35b346102ef576020806003193601126102ef57600435600060a0604051613d6181613f63565b8281528285820152826040820152606080820152826080820152015280151580613e44575b613d8f90614af2565b600052600a8152604060002060405190613da882613f63565b80548252600181015483830190815260028201546001600160a01b0390811660408501908152613e3191613dde60038601613ff3565b916060870192835260ff600560048801549760808a019889520154169460a088019515158652604051988998818a525190890152516040880152511660608601525160c0608086015260e0850190614099565b915160a084015251151560c08301520390f35b506005548110613d86565b346102ef5760203660031901126102ef57600435600052600a6020526040600020805460018201549160018060a01b03600282015416613ec5613e9460038401613ff3565b60ff60056004860154950154169260405196879687526020870152604086015260c0606086015260c0850190614099565b916080840152151560a08301520390f35b346102ef5760203660031901126102ef576004359063ffffffff60e01b82168092036102ef57602091637965db0b60e01b8114908115613f18575b5015158152f35b6301ffc9a760e01b14905083613f11565b90600182811c92168015613f59575b6020831014613f4357565b634e487b7160e01b600052602260045260246000fd5b91607f1691613f38565b60c081019081106001600160401b03821117610e3c57604052565b61012081019081106001600160401b03821117610e3c57604052565b61014081019081106001600160401b03821117610e3c57604052565b6101e081019081106001600160401b03821117610e3c57604052565b90601f801991011681019081106001600160401b03821117610e3c57604052565b906040519182600082549261400784613f29565b9081845260019485811690816000146140765750600114614033575b505061403192500383613fd2565b565b9093915060005260209081600020936000915b81831061405e57505061403193508201013880614023565b85548884018501529485019487945091830191614046565b91505061403194506020925060ff191682840152151560051b8201013880614023565b919082519283825260005b8481106140c5575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016140a4565b600435906001600160a01b03821682036102ef57565b602435906001600160a01b03821682036102ef57565b60606003198201126102ef576004359160243591604435906001600160401b03908183116102ef57806023840112156102ef578260040135918211610e3c578160051b6040519360209361415b85840187613fd2565b85526024848601928201019283116102ef57602401905b828210614180575050505090565b81358152908301908301614172565b81601f820112156102ef578035906001600160401b038211610e3c57604051926141c3601f8401601f191660200185613fd2565b828452602083830101116102ef57816000926020809301838601378301015290565b9060406003198301126102ef5760043591602435906001600160401b0382116102ef576142149160040161418f565b90565b6020908160408183019282815285518094520193019160005b82811061423e575050505090565b835185529381019392810192600101614230565b90600482101561092e5752565b90600582101561092e5752565b90600282101561092e5752565b80548210156142915760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b80600052600060205260406000203360005260205260ff60406000205416156142cd5750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b6001600160a01b031660008181527f6b476db4b19b8e11ac475b323c35b9d0f52831cf1d8cf1455692d57ffbccaaac60205260408120549091907feefb95e842a3287179d933b4460be539a1d5af11aa8b325bb45c5c8dc92de4ed9060ff1661438657808352826020526040832082845260205260408320600160ff19825416179055600080516020614d61833981519152339380a4600190565b505090565b6001600160a01b03166000818152600080516020614de18339815191526020526040812054909190600080516020614e018339815191529060ff1661438657808352826020526040832082845260205260408320600160ff19825416179055600080516020614d61833981519152339380a4600190565b6001600160a01b031660008181527f01269c68c28a67305f4a2d47532888d6c961251cfcb06c9cdb6066d32b24b3206020526040812054909190600080516020614d818339815191529060ff1661438657808352826020526040832082845260205260408320600160ff19825416179055600080516020614d61833981519152339380a4600190565b6001600160a01b031660008181527f37775adb12013835ce20d78b1c52193dd1da3dc792bc1ec9a2d7427221516c8a6020526040812054909190600080516020614dc18339815191529060ff1661438657808352826020526040832082845260205260408320600160ff19825416179055600080516020614d61833981519152339380a4600190565b9060009180835282602052604083209160018060a01b03169182845260205260ff6040842054161560001461438657808352826020526040832082845260205260408320600160ff19825416179055600080516020614d61833981519152339380a4600190565b9060009180835282602052604083209160018060a01b03169182845260205260ff6040842054166000146143865780835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b156145f757565b60405162461bcd60e51b815260206004820152602160248201527f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f6044820152603760f91b6064820152608490fd5b1561464d57565b60405162461bcd60e51b815260206004820152602860248201527f4f6e6c79206d616e7566616374757265722063616e2063616c6c207468697320604482015267333ab731ba34b7b760c11b6064820152608490fd5b156146aa57565b60405162461bcd60e51b815260206004820152601f60248201527f5175616e74697479206d7573742062652067726561746572207468616e2030006044820152606490fd5b156146f657565b60405162461bcd60e51b815260206004820152601960248201527f4950465320686173682063616e6e6f7420626520656d707479000000000000006044820152606490fd5b60001981146106db5760010190565b600582101561092e5752565b60ff6002541661476257565b60405163d93c066560e01b8152600490fd5b1561477b57565b60405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a590818985d18da08125160821b6044820152606490fd5b156147ba57565b60405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206469737472696275746f72206164647265737300000000006044820152606490fd5b1561480657565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c69642062617463682073746174757360601b6044820152606490fd5b1561484957565b60405162461bcd60e51b815260206004820152602760248201527f4f6e6c79206469737472696275746f722063616e2063616c6c207468697320666044820152663ab731ba34b7b760c91b6064820152608490fd5b156148a557565b60405162461bcd60e51b8152602060048201526016602482015275486f73706974616c206973206e6f742061637469766560501b6044820152606490fd5b156148ea57565b60405162461bcd60e51b8152602060048201526024808201527f4f6e6c7920686f73706974616c2063616e2063616c6c20746869732066756e636044820152633a34b7b760e11b6064820152608490fd5b1561494257565b60405162461bcd60e51b815260206004820152601760248201527f496e76616c69642070617469656e7420616464726573730000000000000000006044820152606490fd5b919082039182116106db57565b805468010000000000000000811015610e3c576149b691600182018155614279565b819291549060031b91821b91600019901b1916179055565b600282101561092e5752565b9290919280151580614a5a575b6149f090614774565b60009081526020916006835260409260048484200154949183925b8751841015614a4f57828460051b8901015190818110600014614a3f5785528252614a398585205b9361473b565b92614a0b565b9085528252614a39858520614a33565b945095505050501490565b5060035481106149e7565b15614a6c57565b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c995c5d595cdd08125160721b6044820152606490fd5b15614aad57565b60405162461bcd60e51b815260206004820152601960248201527f5265717565737420616c72656164792070726f636573736564000000000000006044820152606490fd5b15614af957565b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c995c1bdc9d081251607a1b6044820152606490fd5b80158015614c5a575b614c545760005260066020526040600020604051614b5881613fb6565b81548152614b6860018301613ff3565b6020820152614b7960028301613ff3565b604082015260038201546001600160a01b0390811660608301526004830154608083015291614baa60058201613ff3565b60a083015260068101549160c08101928352600782015460e082015260088201546101008201526009820154936101208201948552600a830154614bf560ff8216610140850161474a565b60081c16610160820152600b8201546101808201526101c0614c2b600d60ff600c86015416946101a08501951515865201613ff3565b91015251159182614c49575b5081614c41575090565b905051151590565b514210915038614c37565b50600090565b50600354811015614b3b565b6001600160a01b0390811660009081526007602052604080822090519092614c8d82613f7e565b8354168152614c9e60018401613ff3565b6020820152614caf60028401613ff3565b604082015260ff60038401541690614ccb6060820192836149ce565b60048401546080820152610100600760058601549560a0840196875260ff6006820154818116151560c087015260081c16151560e08501520154910152516002811015614d4c57600114614d1e57505190565b9051908160011b9180830460021490151715614d38575090565b634e487b7160e01b81526011600452602490fd5b634e487b7160e01b82526021600452602482fdfe2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ecfbd454f36a7e1a388bd6fc3ab10d434aa4578f811acbbcf33afb1c697486313c90e68b589b8f105469304896d2d9920902ec0b7538b2f0839e2092c13ed272ecc8f5b4140cca307cd927e59cbeea8291bffeee228fc677f0fa059aef7b4dd8d5a2646970667358221220029685e3f6b9caa53997a68f7a44093e554f6af62aae6fef0af658018b9afbbc64736f6c634300081400332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x45 JUMPI PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x4 SSTORE PUSH1 0x1 PUSH1 0x5 SSTORE PUSH3 0x28 CALLER PUSH3 0x4A JUMP JUMPDEST POP PUSH3 0x34 CALLER PUSH3 0xCA JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4E56 SWAP1 DUP2 PUSH3 0x16D DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0xC6 JUMPI DUP2 DUP1 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4FC3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 SWAP1 PUSH1 0xFF AND PUSH3 0x167 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4FC3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x3ED6 JUMPI POP DUP1 PUSH4 0x9C3BDB3 EQ PUSH2 0x3E4F JUMPI DUP1 PUSH4 0xC38B75F EQ PUSH2 0x3D3C JUMPI DUP1 PUSH4 0x11CF8D85 EQ PUSH2 0x3CC1 JUMPI DUP1 PUSH4 0x15CD1841 EQ PUSH2 0x3C96 JUMPI DUP1 PUSH4 0x20749068 EQ PUSH2 0x3C3E JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x3C0F JUMPI DUP1 PUSH4 0x2D7788DB EQ PUSH2 0x3AF5 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x3AB6 JUMPI DUP1 PUSH4 0x2FF2FF0B EQ PUSH2 0x3A46 JUMPI DUP1 PUSH4 0x3316777E EQ PUSH2 0x3A2D JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x39E6 JUMPI DUP1 PUSH4 0x39595EE4 EQ PUSH2 0x39BB JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3930 JUMPI DUP1 PUSH4 0x463B3DA0 EQ PUSH2 0x3610 JUMPI DUP1 PUSH4 0x463E1F15 EQ PUSH2 0x3313 JUMPI DUP1 PUSH4 0x4D22436F EQ PUSH2 0x320A JUMPI DUP1 PUSH4 0x55C4281E EQ PUSH2 0x31C0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x319D JUMPI DUP1 PUSH4 0x5D45E084 EQ PUSH2 0x3125 JUMPI DUP1 PUSH4 0x69A6DDA5 EQ PUSH2 0x30A1 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x3066 JUMPI DUP1 PUSH4 0x7EE756F2 EQ PUSH2 0x301C JUMPI DUP1 PUSH4 0x7F2DF8B0 EQ PUSH2 0x2FD2 JUMPI DUP1 PUSH4 0x8102DBCF EQ PUSH2 0x2F86 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2F0B JUMPI DUP1 PUSH4 0x85115AB1 EQ PUSH2 0x2D44 JUMPI DUP1 PUSH4 0x8987E936 EQ PUSH2 0x2CF3 JUMPI DUP1 PUSH4 0x8A817E7B EQ PUSH2 0x2A4D JUMPI DUP1 PUSH4 0x8BBA2A0A EQ PUSH2 0x2A03 JUMPI DUP1 PUSH4 0x8D55863B EQ PUSH2 0x2193 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2146 JUMPI DUP1 PUSH4 0x965288B0 EQ PUSH2 0x210B JUMPI DUP1 PUSH4 0x98E9220A EQ PUSH2 0x2089 JUMPI DUP1 PUSH4 0x99BE8C82 EQ PUSH2 0x2034 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2018 JUMPI DUP1 PUSH4 0xA69D634F EQ PUSH2 0x1FFC JUMPI DUP1 PUSH4 0xAC5CB97D EQ PUSH2 0x1FD3 JUMPI DUP1 PUSH4 0xAF988145 EQ PUSH2 0x1F51 JUMPI DUP1 PUSH4 0xB6E202D7 EQ PUSH2 0x19AE JUMPI DUP1 PUSH4 0xBC7999AD EQ PUSH2 0x1986 JUMPI DUP1 PUSH4 0xBD8F1752 EQ PUSH2 0x1800 JUMPI DUP1 PUSH4 0xC098CC32 EQ PUSH2 0x1735 JUMPI DUP1 PUSH4 0xC177D077 EQ PUSH2 0x15F4 JUMPI DUP1 PUSH4 0xC49B09B5 EQ PUSH2 0x1463 JUMPI DUP1 PUSH4 0xD50F7E7B EQ PUSH2 0x1419 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x13D8 JUMPI DUP1 PUSH4 0xD5E42F79 EQ PUSH2 0x11B4 JUMPI DUP1 PUSH4 0xD7D1BBDB EQ PUSH2 0x1098 JUMPI DUP1 PUSH4 0xD890E049 EQ PUSH2 0x106D JUMPI DUP1 PUSH4 0xDFE6BBE6 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xE17769BF EQ PUSH2 0xFF4 JUMPI DUP1 PUSH4 0xE181143C EQ PUSH2 0xF9C JUMPI DUP1 PUSH4 0xE19D6FD0 EQ PUSH2 0x9B2 JUMPI DUP1 PUSH4 0xE229F2CB EQ PUSH2 0x6F1 JUMPI DUP1 PUSH4 0xE720AC8E EQ PUSH2 0x6B0 JUMPI DUP1 PUSH4 0xF093CF80 EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0xF0BD87CC EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0xF276C323 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xF6BA6678 EQ PUSH2 0x2F4 JUMPI PUSH4 0xFDBF6EE5 EQ PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4E01 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x60 PUSH2 0x1C0 PUSH1 0x40 MLOAD PUSH2 0x33F DUP2 PUSH2 0x3FB6 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x180 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1A0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x5A9 JUMPI JUMPDEST PUSH2 0x3B7 SWAP1 PUSH2 0x4774 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x5A5 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x4A0 PUSH1 0xD PUSH1 0x40 MLOAD SWAP3 PUSH2 0x3D9 DUP5 PUSH2 0x3FB6 JUMP JUMPDEST DUP1 SLOAD DUP5 MSTORE PUSH2 0x3E9 PUSH1 0x1 DUP3 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x3FA PUSH1 0x2 DUP3 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x428 PUSH1 0x5 DUP3 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP6 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x46D PUSH1 0xFF DUP3 AND PUSH2 0x140 DUP8 ADD PUSH2 0x474A JUMP JUMPDEST PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x180 DUP6 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1A0 DUP6 ADD MSTORE ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE DUP1 MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1C0 PUSH2 0x523 PUSH2 0x4F1 PUSH2 0x4DB PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x1E0 PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0x200 DUP9 ADD SWAP1 PUSH2 0x4099 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD DUP8 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0x60 DUP10 ADD MSTORE PUSH2 0x4099 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP6 ADD MLOAD AND PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP8 DUP4 SUB ADD PUSH1 0xC0 DUP9 ADD MSTORE PUSH2 0x4099 JUMP JUMPDEST SWAP2 PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x565 PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x160 DUP8 ADD SWAP1 PUSH2 0x425F JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x160 DUP3 ADD MLOAD AND PUSH2 0x180 DUP7 ADD MSTORE PUSH2 0x180 DUP2 ADD MLOAD PUSH2 0x1A0 DUP7 ADD MSTORE PUSH2 0x1A0 DUP2 ADD MLOAD ISZERO ISZERO DUP3 DUP7 ADD MSTORE ADD MLOAD PUSH1 0x1F NOT DUP5 DUP4 SUB ADD PUSH2 0x1E0 DUP6 ADD MSTORE PUSH2 0x4099 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x3AE JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DC1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x5FF PUSH2 0x40D9 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD AND PUSH2 0x61D PUSH1 0x1 DUP4 ADD PUSH2 0x3FF3 JUMP JUMPDEST SWAP2 PUSH2 0x62A PUSH1 0x2 DUP3 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0xFF DUP1 PUSH1 0x3 DUP5 ADD SLOAD AND SWAP3 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x5 DUP3 ADD SLOAD SWAP1 PUSH2 0x687 PUSH2 0x67C PUSH1 0x7 PUSH1 0x6 DUP7 ADD SLOAD SWAP6 ADD SLOAD SWAP7 PUSH2 0x66E PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP12 DUP13 MSTORE PUSH1 0x20 DUP13 PUSH2 0x120 SWAP2 DUP3 SWAP2 ADD MSTORE DUP13 ADD SWAP1 PUSH2 0x4099 JUMP JUMPDEST SWAP1 DUP11 DUP3 SUB PUSH1 0x40 DUP13 ADD MSTORE PUSH2 0x4099 JUMP JUMPDEST SWAP7 PUSH1 0x60 DUP10 ADD SWAP1 PUSH2 0x426C JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD MSTORE DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x3 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x6DB JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x70D PUSH2 0x40EF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x6B476DB4B19B8E11AC475B323C35B9D0F52831CF1D8CF1455692D57FFBCCAAAC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x74B SWAP1 PUSH1 0xFF AND PUSH2 0x4646 JUMP JUMPDEST DUP3 ISZERO ISZERO DUP1 PUSH2 0x9A7 JUMPI JUMPDEST PUSH2 0x75D SWAP1 PUSH2 0x4774 JUMP JUMPDEST PUSH2 0x765 PUSH2 0x4756 JUMP JUMPDEST PUSH1 0x1 SWAP3 PUSH1 0x2 DUP5 SLOAD EQ PUSH2 0x995 JUMPI PUSH1 0x2 DUP5 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DC1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP5 DUP6 PUSH1 0x0 MSTORE DUP5 MSTORE PUSH2 0x7B3 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x47B3 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x6 DUP5 MSTORE CALLER SWAP1 PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SUB PUSH2 0x944 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0xFF PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x92E JUMPI PUSH2 0x7F3 SWAP1 ISZERO PUSH2 0x47FF JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0xFF PUSH1 0xC PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x8E9 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x8A4 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 DUP5 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA DUP2 ADD DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR PUSH1 0x8 SWAP4 SWAP1 SWAP4 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0xB ADD PUSH2 0x873 DUP2 SLOAD PUSH2 0x473B JUMP JUMPDEST SWAP1 SSTORE PUSH32 0x1183A7BEB644D5E5D07752E6223CF93B80B08A9201F60C52AAA3D23AA32252C1 PUSH1 0x40 MLOAD SWAP3 DUP6 DUP5 MSTORE CALLER SWAP4 LOG4 DUP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E736665722065787069726564206261746368000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220726563616C6C65642062617463680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206261746368206D616E7566616374757265722063616E207472616E PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x39B332B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP4 LT PUSH2 0x754 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x9CB PUSH2 0x40D9 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2EF JUMPI PUSH2 0x9EA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x418F JUMP JUMPDEST SWAP1 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2EF JUMPI PUSH2 0xA0A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x418F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DE1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xA36 SWAP1 PUSH1 0xFF AND PUSH2 0x48E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x37775ADB12013835CE20D78B1C52193DD1DA3DC792BC1EC9A2D7427221516C8A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA7A SWAP1 PUSH1 0xFF AND PUSH2 0x47B3 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0xA97 PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x489E JUMP JUMPDEST PUSH2 0xAA4 PUSH1 0x44 CALLDATALOAD ISZERO ISZERO PUSH2 0x46A3 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xF5E JUMPI DUP2 MLOAD ISZERO PUSH2 0xF20 JUMPI PUSH1 0x4 SLOAD SWAP2 PUSH2 0xABF DUP4 PUSH2 0x473B JUMP JUMPDEST PUSH1 0x4 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xADD DUP3 PUSH2 0x3F7E JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH2 0xAF6 PUSH1 0x1 DUP3 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xB07 PUSH1 0x2 DUP3 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x7 PUSH1 0xFF PUSH1 0x3 DUP4 ADD SLOAD AND SWAP2 PUSH2 0xB25 PUSH1 0x60 DUP6 ADD SWAP4 DUP5 PUSH2 0x49CE JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0x6 DUP3 ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE ADD SLOAD PUSH2 0x100 DUP4 ADD MSTORE MLOAD SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x92E JUMPI PUSH1 0xA0 SWAP2 PUSH1 0x1 SUB PUSH2 0xF18 JUMPI ADD MLOAD DUP1 DUP1 PUSH1 0x1 SHL DIV PUSH1 0x2 EQ DUP2 ISZERO OR ISZERO PUSH2 0x6DB JUMPI PUSH1 0x1 SHL SWAP4 JUMPDEST PUSH1 0x40 MLOAD SWAP5 PUSH2 0xB97 DUP7 PUSH2 0x3F9A JUMP JUMPDEST DUP5 DUP7 MSTORE CALLER PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP8 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 MLOAD DUP2 SSTORE PUSH1 0x1 DUP2 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP7 ADD MLOAD AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP2 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x2 DUP3 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP8 ADD MLOAD AND SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x5 DUP2 ADD PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x92E JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 DUP5 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x100 DUP5 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE3C JUMPI PUSH2 0xC96 PUSH1 0x8 DUP5 ADD SLOAD PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xED1 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xE5D JUMPI SWAP2 DUP1 PUSH2 0x120 SWAP5 SWAP3 PUSH1 0x9 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0xE52 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x8 DUP3 ADD SSTORE JUMPDEST ADD SWAP4 ADD MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xE3C JUMPI PUSH2 0xCF7 DUP3 SLOAD PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xDF4 JUMPI JUMPDEST POP DUP1 PUSH1 0x20 SWAP6 DUP7 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xD90 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xD85 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0xC DUP4 MSTORE PUSH2 0xD45 DUP3 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x4994 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x44 CALLDATALOAD DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 PUSH32 0x5AB53553AADAC42F69E7F599923C6DF5AA5264BA08B69E5B61B9B2CF4517A042 DUP6 CALLER SWAP4 LOG4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0xD1A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE DUP9 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xDDD JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0xDC4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xD2F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0xDB7 JUMP JUMPDEST SWAP3 SWAP4 DUP10 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xDA1 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0xE32 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xE26 JUMPI POP PUSH2 0xD00 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xE19 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0xCC0 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH1 0x8 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xEB9 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0x9 SWAP7 PUSH2 0x120 SWAP9 SWAP7 LT PUSH2 0xEA0 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x8 DUP3 ADD SSTORE PUSH2 0xCD8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0xE90 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x8 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xF11 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xF05 JUMPI POP POP PUSH2 0xC9F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xEEF JUMP JUMPDEST POP DUP1 PUSH2 0xEEF JUMP JUMPDEST ADD MLOAD SWAP4 PUSH2 0xB8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x155C99D95B98DE481B195D995B081C995C5D5A5C9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x526561736F6E2063616E6E6F7420626520656D707479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0xFB5 PUSH2 0x40D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x2EF JUMPI PUSH1 0x20 SWAP2 PUSH2 0xFE6 SWAP2 PUSH2 0x4279 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x1032 SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x1062 JUMPI JUMPDEST PUSH2 0x1044 SWAP1 PUSH2 0x4AF2 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST POP PUSH1 0x5 SLOAD DUP2 LT PUSH2 0x103B JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x20 PUSH2 0x1090 PUSH2 0x108B PUSH2 0x40D9 JUMP JUMPDEST PUSH2 0x4C66 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DC1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP2 MSTORE PUSH2 0x10E0 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x4842 JUMP JUMPDEST DUP2 ISZERO ISZERO DUP1 PUSH2 0x11A9 JUMPI JUMPDEST PUSH2 0x10F2 SWAP1 PUSH2 0x4A65 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x8 DUP2 MSTORE CALLER PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SUB PUSH2 0x1157 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP2 PUSH1 0x4 DUP4 LT ISZERO PUSH2 0x92E JUMPI PUSH2 0x113B PUSH1 0x8 SWAP4 ISZERO PUSH2 0x4AA6 JUMP JUMPDEST PUSH1 0x0 MSTORE MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061737369676E6564206469737472696275746F722063616E206170 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x70726F7665 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x4 SLOAD DUP3 LT PUSH2 0x10E9 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x11D0 PUSH2 0x40EF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x37775ADB12013835CE20D78B1C52193DD1DA3DC792BC1EC9A2D7427221516C8A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1212 SWAP1 PUSH1 0xFF AND PUSH2 0x4842 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x13CD JUMPI JUMPDEST PUSH2 0x1224 SWAP1 PUSH2 0x4774 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4E01 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP5 DUP6 PUSH1 0x0 MSTORE DUP5 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1388 JUMPI DUP3 PUSH1 0x0 MSTORE PUSH1 0x6 DUP5 MSTORE CALLER SWAP1 PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND SUB PUSH2 0x1345 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0xFF PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x92E JUMPI PUSH2 0x12A7 PUSH1 0x1 PUSH1 0x6 SWAP4 EQ PUSH2 0x47FF JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH2 0x12C2 PUSH1 0xFF DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x489E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE DUP3 DUP6 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x8 SWAP4 SWAP1 SWAP4 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x2 OR SWAP1 SWAP2 SSTORE ADD SLOAD DUP4 PUSH1 0x0 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD SWAP2 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x6DB JUMPI SSTORE PUSH32 0x1183A7BEB644D5E5D07752E6223CF93B80B08A9201F60C52AAA3D23AA32252C1 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x2 DUP5 MSTORE CALLER SWAP4 LOG4 STOP JUMPDEST PUSH1 0x64 DUP4 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063757272656E7420686F6C6465722063616E207472616E73666572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420686F73706974616C20616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x121B JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x1417 PUSH1 0x4 CALLDATALOAD PUSH2 0x13F7 PUSH2 0x40EF JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x1412 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x42A7 JUMP JUMPDEST PUSH2 0x457B JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x1432 PUSH2 0x40D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x2EF JUMPI PUSH1 0x20 SWAP2 PUSH2 0xFE6 SWAP2 PUSH2 0x4279 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x147D PUSH2 0x40D9 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x148A DUP2 PUSH2 0x3F7E JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE DUP2 DUP2 ADD PUSH1 0x60 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x60 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD PUSH1 0x0 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD PUSH1 0x0 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD PUSH1 0x0 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD PUSH1 0x0 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD PUSH1 0x0 SWAP1 MSTORE PUSH2 0x100 DUP1 SWAP2 ADD PUSH1 0x0 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB DUP1 SWAP4 AND PUSH1 0x0 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x14F5 DUP5 PUSH2 0x3F7E JUMP JUMPDEST DUP3 SLOAD DUP6 AND DUP5 MSTORE PUSH2 0x1507 PUSH1 0x1 DUP5 ADD PUSH2 0x3FF3 JUMP JUMPDEST DUP5 DUP3 ADD SWAP1 DUP2 MSTORE SWAP2 PUSH2 0x151A PUSH1 0x2 DUP6 ADD PUSH2 0x3FF3 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP7 ADD SWAP4 DUP5 MSTORE PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0xFF AND SWAP5 PUSH1 0x60 DUP8 ADD SWAP6 PUSH2 0x153A SWAP1 DUP8 PUSH2 0x49CE JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 DUP3 ADD SLOAD SWAP1 PUSH1 0xA0 DUP10 ADD SWAP2 DUP3 MSTORE PUSH1 0x6 DUP4 ADD SLOAD SWAP4 PUSH1 0xC0 DUP11 ADD SWAP4 PUSH1 0xFF DUP7 AND ISZERO ISZERO DUP6 MSTORE PUSH1 0xE0 DUP12 ADD SWAP6 PUSH1 0x8 SHR PUSH1 0xFF AND ISZERO ISZERO DUP7 MSTORE PUSH1 0x7 ADD SLOAD SWAP7 DUP7 DUP12 ADD SWAP8 DUP9 MSTORE PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP12 DUP3 DUP14 MSTORE MLOAD AND SWAP1 DUP12 ADD MSTORE MLOAD SWAP7 PUSH2 0x120 SWAP8 DUP9 PUSH1 0x40 DUP13 ADD MSTORE PUSH2 0x140 DUP12 ADD PUSH2 0x15A9 SWAP2 PUSH2 0x4099 JUMP JUMPDEST SWAP1 MLOAD DUP11 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0x60 DUP13 ADD MSTORE PUSH2 0x15C1 SWAP2 SWAP1 PUSH2 0x4099 JUMP JUMPDEST SWAP8 MLOAD PUSH1 0x80 DUP11 ADD PUSH2 0x15D0 SWAP2 PUSH2 0x426C JUMP JUMPDEST MLOAD PUSH1 0xA0 DUP10 ADD MSTORE MLOAD PUSH1 0xC0 DUP9 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xE0 DUP8 ADD MSTORE MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE MLOAD SWAP1 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD PUSH2 0x1624 SWAP1 PUSH2 0x3FF3 JUMP JUMPDEST SWAP2 PUSH2 0x1631 PUSH1 0x2 DUP3 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH2 0x1655 PUSH1 0x5 DUP4 ADD PUSH2 0x3FF3 JUMP JUMPDEST SWAP3 PUSH1 0x6 DUP4 ADD SLOAD SWAP4 PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0x8 DUP6 ADD SLOAD SWAP1 PUSH1 0x9 DUP7 ADD SLOAD SWAP3 PUSH1 0xA DUP8 ADD SLOAD SWAP5 PUSH1 0xB DUP9 ADD SLOAD SWAP7 PUSH1 0xC DUP10 ADD SLOAD PUSH1 0xFF AND SWAP9 PUSH1 0xD ADD PUSH2 0x168E SWAP1 PUSH2 0x3FF3 JUMP JUMPDEST SWAP11 PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP14 DUP15 MSTORE DUP14 PUSH2 0x1E0 SWAP1 DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH2 0x16AC SWAP2 PUSH2 0x4099 JUMP JUMPDEST DUP14 DUP2 SUB PUSH1 0x40 DUP16 ADD MSTORE PUSH2 0x16BD SWAP2 PUSH2 0x4099 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0x80 DUP13 ADD MSTORE DUP11 DUP2 SUB PUSH1 0xA0 DUP13 ADD MSTORE PUSH2 0x16D9 SWAP2 PUSH2 0x4099 JUMP JUMPDEST SWAP7 PUSH1 0xC0 DUP11 ADD MSTORE PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 DUP9 ADD MSTORE PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x140 DUP7 ADD PUSH1 0xFF DUP3 AND SWAP1 PUSH2 0x1703 SWAP2 PUSH2 0x425F JUMP JUMPDEST PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x160 DUP7 ADD MSTORE PUSH2 0x180 DUP6 ADD MSTORE ISZERO ISZERO PUSH2 0x1A0 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH2 0x1C0 DUP5 ADD MSTORE PUSH2 0x5A5 SWAP2 PUSH2 0x4099 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x5A5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x17F1 DUP5 PUSH1 0x1 DUP4 ADD SLOAD AND SWAP5 PUSH1 0x2 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD PUSH2 0x17D5 PUSH1 0xFF PUSH1 0x5 DUP6 ADD SLOAD AND PUSH1 0x6 DUP6 ADD SLOAD SWAP3 PUSH1 0x7 DUP7 ADD SLOAD SWAP5 PUSH2 0x17AE PUSH1 0x9 PUSH2 0x17A7 PUSH1 0x8 DUP11 ADD PUSH2 0x3FF3 JUMP JUMPDEST SWAP9 ADD PUSH2 0x3FF3 JUMP JUMPDEST SWAP9 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 DUP14 MSTORE PUSH1 0x20 DUP14 ADD MSTORE PUSH1 0x40 DUP13 ADD MSTORE PUSH1 0x60 DUP12 ADD MSTORE PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0xA0 DUP10 ADD SWAP1 PUSH2 0x4252 JUMP JUMPDEST PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x140 DUP1 PUSH2 0x100 DUP8 ADD MSTORE DUP6 ADD SWAP1 PUSH2 0x4099 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x4099 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1822 PUSH2 0x40D9 JUMP JUMPDEST AND DUP1 CALLER EQ DUP1 ISZERO PUSH2 0x1956 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x1914 JUMPI JUMPDEST ISZERO PUSH2 0x18C3 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 DUP3 MSTORE PUSH1 0xFF PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x187E JUMPI PUSH1 0x0 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH2 0x1869 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x3FF3 JUMP JUMPDEST SWAP1 PUSH2 0x5A5 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x4099 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4865616C7468207265636F726420646F6573206E6F7420657869737400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642061636365737320746F206865616C7468207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x18DBDC99 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1834 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4E01 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x182D JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x20 PUSH2 0x19A4 PUSH1 0x4 CALLDATALOAD PUSH2 0x4B32 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x19C7 PUSH2 0x40D9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2EF JUMPI PUSH2 0x19E6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x418F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2EF JUMPI PUSH2 0x1A05 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x418F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x64 CALLDATALOAD LT ISZERO PUSH2 0x2EF JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1A39 SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND PUSH2 0x1F0C JUMPI DUP2 MLOAD ISZERO PUSH2 0x1EC7 JUMPI DUP1 MLOAD ISZERO PUSH2 0x1E82 JUMPI PUSH1 0xA4 CALLDATALOAD ISZERO PUSH2 0x1E32 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1A7F DUP3 PUSH2 0x3F7E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1AA6 PUSH1 0x64 CALLDATALOAD PUSH1 0x60 DUP4 ADD PUSH2 0x49CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP5 SLOAD AND OR DUP4 SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE3C JUMPI DUP2 SWAP1 PUSH2 0x1B23 PUSH1 0x1 DUP8 ADD SLOAD PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1DDF JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1D6D JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1D62 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP5 ADD SSTORE JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE3C JUMPI DUP2 SWAP1 PUSH2 0x1B80 PUSH1 0x2 DUP8 ADD SLOAD PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1D0F JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1C9D JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1C92 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP5 ADD SSTORE JUMPDEST PUSH1 0x60 DUP3 ADD MLOAD SWAP3 PUSH1 0x3 DUP2 ADD PUSH1 0x2 DUP6 LT ISZERO PUSH2 0x92E JUMPI PUSH2 0x100 PUSH2 0x1C73 SWAP5 PUSH1 0x7 SWAP3 PUSH32 0xDC9C7CE67C6478B15CB0DBF6F1ED597031431D25746171CCC85589F658462252 SWAP8 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP6 ADD SSTORE PUSH1 0x6 DUP5 ADD PUSH2 0x1C37 PUSH1 0xC0 DUP4 ADD MLOAD ISZERO ISZERO DUP3 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MLOAD DUP2 SLOAD PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x8 SHL PUSH2 0xFF00 AND OR SWAP1 SSTORE ADD MLOAD SWAP2 ADD SSTORE PUSH2 0x1C5E DUP5 PUSH2 0x438B JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x40 DUP4 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x4099 JUMP JUMPDEST SWAP4 PUSH2 0x1C83 PUSH1 0x20 DUP4 ADD PUSH1 0x64 CALLDATALOAD PUSH2 0x426C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 SUB SWAP1 LOG2 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x1BA0 JUMP JUMPDEST SWAP3 POP PUSH1 0x2 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1CF4 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1CDB JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP5 ADD SSTORE PUSH2 0x1BB8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0x1CCB JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1CB0 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x2 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x1D5B JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1D4C JUMPI POP POP PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x1D36 JUMP JUMPDEST POP DUP1 PUSH2 0x1D30 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x1B43 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1DC4 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1DAB JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP5 ADD SSTORE PUSH2 0x1B5B JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0x1D9B JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1D80 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x1E2B JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1E1C JUMPI POP POP PUSH2 0x1B2C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x1E06 JUMP JUMPDEST POP DUP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x486F73706974616C206361706163697479206D75737420626520706F73697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7665 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567697374726174696F6E206E756D62657220726571756972656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x486F73706974616C206E616D652063616E6E6F7420626520656D707479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x486F73706974616C20616C726561647920726567697374657265640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x1F6A PUSH2 0x40D9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1F93 SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x1FBA SWAP1 PUSH1 0xFF AND PUSH2 0x489E JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4D81 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x2 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x206E SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x20A2 PUSH2 0x40D9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x20CB SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x20F2 SWAP1 PUSH1 0xFF AND PUSH2 0x489E JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xEEFB95E842A3287179D933B4460BE539A1D5AF11AA8B325BB45C5C8DC92DE4ED DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x215F PUSH2 0x40EF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2EF JUMPI PUSH2 0x21C3 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x418F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2EF JUMPI PUSH2 0x21E2 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x418F JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2EF JUMPI PUSH2 0x2202 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x418F JUMP JUMPDEST SWAP1 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2EF JUMPI PUSH2 0x2222 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x418F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x6B476DB4B19B8E11AC475B323C35B9D0F52831CF1D8CF1455692D57FFBCCAAAC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 SWAP1 PUSH2 0x2260 SWAP1 PUSH1 0xFF AND PUSH2 0x4646 JUMP JUMPDEST PUSH2 0x2268 PUSH2 0x4756 JUMP JUMPDEST PUSH2 0x2275 PUSH1 0xA4 CALLDATALOAD ISZERO ISZERO PUSH2 0x46A3 JUMP JUMPDEST TIMESTAMP PUSH1 0xC4 CALLDATALOAD GT ISZERO PUSH2 0x29B4 JUMPI DUP2 MLOAD ISZERO PUSH2 0x296F JUMPI DUP4 MLOAD ISZERO PUSH2 0x292A JUMPI PUSH2 0x2299 DUP4 MLOAD ISZERO ISZERO PUSH2 0x46EF JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x28E5 JUMPI PUSH1 0x3 SLOAD SWAP3 PUSH2 0x22AD DUP5 PUSH2 0x473B JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP5 PUSH2 0x22BD DUP7 PUSH2 0x3FB6 JUMP JUMPDEST DUP5 DUP7 MSTORE DUP4 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE CALLER PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xE0 DUP6 ADD MSTORE TIMESTAMP PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH2 0x120 DUP6 ADD MSTORE PUSH1 0x0 PUSH2 0x140 DUP6 ADD MSTORE CALLER PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0x0 PUSH2 0x180 DUP6 ADD MSTORE PUSH1 0x0 PUSH2 0x1A0 DUP6 ADD MSTORE PUSH2 0x1C0 DUP5 ADD MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 MLOAD DUP2 SSTORE PUSH1 0x20 DUP5 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE3C JUMPI DUP2 SWAP1 PUSH2 0x235A PUSH1 0x1 DUP6 ADD SLOAD PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2892 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2820 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2815 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP3 ADD SSTORE JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE3C JUMPI DUP2 SWAP1 PUSH2 0x23B7 PUSH1 0x2 DUP6 ADD SLOAD PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x27C2 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2750 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2745 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP3 ADD SSTORE JUMPDEST PUSH1 0x3 DUP2 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP7 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP5 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE3C JUMPI DUP2 SWAP1 PUSH2 0x2440 PUSH1 0x5 DUP6 ADD SLOAD PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x26F2 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2680 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2675 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x5 DUP3 ADD SSTORE JUMPDEST PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 DUP5 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x100 DUP5 ADD MLOAD PUSH1 0x8 DUP3 ADD SSTORE PUSH2 0x120 DUP5 ADD MLOAD PUSH1 0x9 DUP3 ADD SSTORE PUSH1 0xA DUP2 ADD PUSH2 0x140 DUP6 ADD MLOAD SWAP2 PUSH1 0x5 DUP4 LT ISZERO PUSH2 0x92E JUMPI DUP2 SLOAD PUSH2 0x160 DUP8 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND PUSH1 0xFF SWAP5 DUP6 AND OR PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE PUSH2 0x180 DUP6 ADD MLOAD PUSH1 0xB DUP3 ADD SSTORE PUSH2 0x1A0 DUP6 ADD MLOAD PUSH1 0xC DUP3 ADD DUP1 SLOAD SWAP2 ISZERO ISZERO SWAP1 SWAP4 AND PUSH1 0xFF NOT SWAP2 SWAP1 SWAP2 AND OR SWAP1 SWAP2 SSTORE PUSH2 0x1C0 SWAP1 PUSH1 0xD ADD SWAP4 ADD MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xE3C JUMPI PUSH2 0x2531 DUP3 SLOAD PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x262D JUMPI JUMPDEST POP DUP1 PUSH1 0x20 SWAP6 DUP7 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x25C9 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x25BE JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST DUP2 PUSH32 0xE81D190AE43A7EAAF3DB1D1AD7E4D9D84B8C08C3EF7C78D479E556EFB4802FC8 PUSH2 0x25A0 PUSH1 0x40 MLOAD SWAP4 PUSH1 0x60 DUP6 MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x4099 JUMP JUMPDEST SWAP3 PUSH1 0x64 CALLDATALOAD DUP7 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x2554 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE DUP9 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x2616 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x25FD JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x2569 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0x25F0 JUMP JUMPDEST SWAP3 SWAP4 DUP10 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x25DA JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x266B JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x265F JUMPI POP PUSH2 0x253A JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2652 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2649 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x2460 JUMP JUMPDEST SWAP3 POP PUSH1 0x5 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x26D7 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x26BE JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x5 DUP3 ADD SSTORE PUSH2 0x2478 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0x26AE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2693 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x5 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x273E JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x272F JUMPI POP POP PUSH2 0x2449 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x2719 JUMP JUMPDEST POP DUP1 PUSH2 0x2713 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x23D7 JUMP JUMPDEST SWAP3 POP PUSH1 0x2 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x27A7 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x278E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP3 ADD SSTORE PUSH2 0x23EF JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0x277E JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2763 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x2 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x280E JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x27FF JUMPI POP POP PUSH2 0x23C0 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x27E9 JUMP JUMPDEST POP DUP1 PUSH2 0x27E3 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x237A JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x2877 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x285E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP3 ADD SSTORE PUSH2 0x2392 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0x284E JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2833 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x28DE JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x28CF JUMPI POP POP PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x28B9 JUMP JUMPDEST POP DUP1 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567756C61746F727920617070726F76616C20726571756972656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4472756720636F64652063616E6E6F7420626520656D70747900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44727567206E616D652063616E6E6F7420626520656D70747900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578706972792064617465206D75737420626520696E20746865206675747572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x1417 PUSH2 0x2A1F PUSH2 0x40D9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2A48 SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST PUSH2 0x448B JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x2A66 PUSH2 0x40D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2EF JUMPI PUSH2 0x2A86 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x418F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DE1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x2AB6 SWAP1 PUSH1 0xFF AND PUSH2 0x48E3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4D81 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP5 DUP6 PUSH1 0x0 MSTORE DUP4 MSTORE PUSH2 0x2AF4 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x493B JUMP JUMPDEST PUSH2 0x2B00 DUP5 MLOAD ISZERO ISZERO PUSH2 0x46EF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH1 0x80 DUP4 ADD DUP4 DUP2 LT DUP3 DUP3 GT OR PUSH2 0xE3C JUMPI PUSH1 0x40 MSTORE DUP6 DUP4 MSTORE DUP4 DUP4 ADD DUP6 DUP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 TIMESTAMP DUP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP4 PUSH1 0x1 SWAP1 DUP2 DUP7 MSTORE DUP10 PUSH1 0x0 MSTORE PUSH1 0x9 DUP9 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP7 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP8 SLOAD AND OR DUP7 SSTORE DUP1 DUP7 ADD SWAP3 MLOAD DUP1 MLOAD SWAP3 DUP4 GT PUSH2 0xE3C JUMPI PUSH2 0x2B6B DUP5 SLOAD PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2CAA JUMPI JUMPDEST POP DUP8 SWAP1 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x2C16 JUMPI SWAP4 DUP4 DUP1 PUSH1 0x3 SWAP6 PUSH2 0x2C00 SWAP12 SWAP10 SWAP6 PUSH2 0x2BEC SWAP10 SWAP6 PUSH32 0x5C2B5D6645D201D29B6DA912156D4B230AD8C622967AA75BD74D5E86308236D8 SWAP15 SWAP13 SWAP10 PUSH1 0x0 SWAP5 PUSH2 0x2C0B JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 DUP8 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x4099 JUMP JUMPDEST SWAP1 TIMESTAMP SWAP1 DUP4 ADD MSTORE SUB SWAP1 LOG2 STOP JUMPDEST ADD MLOAD SWAP3 POP DUP16 DUP1 PUSH2 0x2BBF JUMP JUMPDEST SWAP1 PUSH1 0x1F SWAP4 SWAP3 SWAP4 NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2C95 JUMPI POP SWAP4 PUSH2 0x2BEC SWAP8 SWAP4 PUSH32 0x5C2B5D6645D201D29B6DA912156D4B230AD8C622967AA75BD74D5E86308236D8 SWAP13 SWAP11 SWAP8 SWAP4 PUSH1 0x3 SWAP8 SWAP4 DUP4 PUSH2 0x2C00 SWAP15 SWAP13 SWAP9 LT PUSH2 0x2C7D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x2BD0 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP10 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0x2C70 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE SWAP4 DUP7 ADD SWAP4 SWAP3 DUP12 ADD SWAP3 DUP12 ADD PUSH2 0x2C2C JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP11 DUP7 LT PUSH2 0x2CE9 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP4 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x2CDD JUMPI POP POP PUSH2 0x2B74 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP4 SWAP1 PUSH2 0x2CCF JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2CC4 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x2D39 JUMPI JUMPDEST PUSH2 0x2D19 SWAP1 PUSH2 0x4774 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0xC PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x2D10 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x60 PUSH2 0x120 PUSH1 0x40 MLOAD PUSH2 0x2D69 DUP2 PUSH2 0x3F9A JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE ADD MSTORE DUP1 ISZERO ISZERO DUP1 PUSH2 0x2F00 JUMPI JUMPDEST PUSH2 0x2DB8 SWAP1 PUSH2 0x4A65 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x2DD1 DUP2 PUSH2 0x3F9A JUMP JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP1 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xFF AND SWAP3 SWAP1 DUP4 LT ISZERO PUSH2 0x92E JUMPI PUSH1 0x9 PUSH2 0x2E56 SWAP2 PUSH2 0x5A5 SWAP5 PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x2E4A PUSH1 0x8 DUP3 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH2 0x100 DUP6 ADD MSTORE ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE DUP1 MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x2EB7 PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xC0 DUP6 ADD SWAP1 PUSH2 0x4252 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x120 PUSH2 0x2EEC PUSH2 0x140 SWAP3 DUP4 DUP4 DUP9 ADD MSTORE PUSH2 0x160 DUP8 ADD SWAP1 PUSH2 0x4099 JUMP JUMPDEST SWAP3 ADD MLOAD SWAP1 PUSH1 0x1F NOT DUP6 DUP5 SUB ADD SWAP1 DUP6 ADD MSTORE PUSH2 0x4099 JUMP JUMPDEST POP PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x2DAF JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2F45 SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST PUSH2 0x2F4D PUSH2 0x4756 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x2FC7 JUMPI JUMPDEST PUSH2 0x2FAC SWAP1 PUSH2 0x4774 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xB PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x2FA3 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x1417 PUSH2 0x2FEE PUSH2 0x40D9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3017 SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST PUSH2 0x4402 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x1417 PUSH2 0x3038 PUSH2 0x40D9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3061 SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST PUSH2 0x438B JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x30C3 PUSH2 0x40D9 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP2 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x310E JUMPI PUSH2 0x5A5 DUP6 PUSH2 0x3102 DUP2 DUP10 SUB DUP3 PUSH2 0x3FD2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x4217 JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x30EB JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3147 PUSH2 0x40D9 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP2 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3186 JUMPI PUSH2 0x5A5 DUP6 PUSH2 0x3102 DUP2 DUP10 SUB DUP3 PUSH2 0x3FD2 JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x316F JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x1417 PUSH2 0x31DC PUSH2 0x40D9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3205 SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST PUSH2 0x42EB JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH2 0x3218 CALLDATASIZE PUSH2 0x41E5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3248 SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST DUP2 ISZERO ISZERO DUP1 PUSH2 0x3308 JUMPI JUMPDEST PUSH2 0x325A SWAP1 PUSH2 0x4774 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0xFF PUSH1 0xC PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x32CA JUMPI PUSH2 0x32C5 PUSH32 0xEB44898320C8A9CDEBA7CCE944505307316634CF2EC97635311D70DD46AAAAE6 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x6 DUP6 MSTORE PUSH1 0xC PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP7 DUP4 MSTORE CALLER SWAP7 DUP4 ADD SWAP1 PUSH2 0x4099 JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x10985D18DA08185B1C9958591E481C9958D85B1B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x3251 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x332F PUSH2 0x40EF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DE1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x3365 SWAP1 DUP4 AND PUSH2 0x48E3 JUMP JUMPDEST DUP3 ISZERO ISZERO DUP1 PUSH2 0x3605 JUMPI JUMPDEST PUSH2 0x3377 SWAP1 PUSH2 0x4774 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4D81 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x0 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP6 DUP7 PUSH1 0x0 MSTORE DUP6 MSTORE PUSH2 0x33B4 DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x493B JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x6 SWAP2 DUP3 DUP7 MSTORE PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD DUP3 CALLER SWAP2 PUSH1 0x8 SHR AND SUB PUSH2 0x35C2 JUMPI DUP5 PUSH1 0x0 MSTORE DUP3 DUP7 MSTORE DUP4 PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x92E JUMPI PUSH1 0x2 PUSH2 0x33FA SWAP2 EQ PUSH2 0x47FF JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE DUP3 DUP7 MSTORE DUP3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 GT PUSH2 0x3585 JUMPI DUP5 PUSH1 0x0 MSTORE DUP3 DUP7 MSTORE DUP3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x3428 DUP3 DUP3 SLOAD PUSH2 0x4987 JUMP JUMPDEST SWAP1 SSTORE DUP5 PUSH1 0x0 MSTORE DUP3 DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 DUP2 ADD SLOAD ISZERO PUSH2 0x3571 JUMPI JUMPDEST POP CALLER PUSH1 0x0 MSTORE PUSH1 0x7 DUP7 MSTORE PUSH2 0x345C PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP2 DUP3 SLOAD PUSH2 0x4987 JUMP JUMPDEST SWAP1 SSTORE DUP6 PUSH1 0x0 MSTORE PUSH1 0xD DUP6 MSTORE PUSH2 0x3474 DUP5 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x4994 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x7 DUP6 MSTORE PUSH2 0x100 PUSH1 0x7 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x3493 DUP6 PUSH2 0x3F7E JUMP JUMPDEST DUP2 SLOAD AND DUP5 MSTORE PUSH2 0x34A4 PUSH1 0x1 DUP3 ADD PUSH2 0x3FF3 JUMP JUMPDEST DUP9 DUP6 ADD MSTORE PUSH2 0x34B4 PUSH1 0x2 DUP3 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x34CC DUP7 PUSH1 0x3 DUP4 ADD SLOAD AND PUSH1 0x60 DUP7 ADD PUSH2 0x49CE JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD SWAP6 DUP7 PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD SWAP6 DUP7 PUSH1 0xA0 DUP8 ADD MSTORE DUP3 ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE DUP1 DUP3 GT ISZERO PUSH2 0x353A JUMPI JUMPDEST POP POP PUSH32 0x1183A7BEB644D5E5D07752E6223CF93B80B08A9201F60C52AAA3D23AA32252C1 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x3 DUP5 MSTORE CALLER SWAP4 LOG4 STOP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE DUP4 DUP3 ADD MSTORE PUSH32 0x41E9729CD843B40E15655CC985182426E5C96894AFC3283A7F5D012D43EC8C35 PUSH1 0x40 CALLER SWAP3 LOG2 DUP4 DUP1 PUSH2 0x350A JUMP JUMPDEST PUSH1 0xA ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 OR SWAP1 SSTORE DUP8 PUSH2 0x3440 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E73756666696369656E74207175616E74697479 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP7 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063757272656E7420686F6C6465722063616E2064697370656E7365 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP4 LT PUSH2 0x336E JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH2 0x361E CALLDATASIZE PUSH2 0x41E5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DE1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP3 SWAP2 SWAP1 PUSH2 0x364E SWAP1 PUSH1 0xFF AND PUSH2 0x48E3 JUMP JUMPDEST DUP2 ISZERO ISZERO DUP1 PUSH2 0x3925 JUMPI JUMPDEST PUSH2 0x3660 SWAP1 PUSH2 0x4774 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER DUP2 PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND SUB PUSH2 0x38E0 JUMPI DUP2 MLOAD ISZERO PUSH2 0x3890 JUMPI PUSH1 0x5 SLOAD SWAP2 PUSH2 0x3697 DUP4 PUSH2 0x473B JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH2 0x36A7 DUP4 PUSH2 0x3F63 JUMP JUMPDEST DUP4 DUP4 MSTORE DUP6 DUP4 ADD SWAP2 DUP6 DUP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP6 ADD SWAP3 TIMESTAMP DUP5 MSTORE PUSH1 0xA0 DUP7 ADD SWAP5 PUSH1 0x0 DUP7 MSTORE DUP8 PUSH1 0x0 MSTORE PUSH1 0xA DUP11 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP7 MLOAD DUP8 SSTORE MLOAD SWAP2 PUSH1 0x1 SWAP3 DUP4 DUP9 ADD SSTORE PUSH1 0x2 DUP8 ADD SWAP2 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x3 DUP6 ADD SWAP2 MLOAD SWAP1 DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0xE3C JUMPI PUSH2 0x3725 DUP5 SLOAD PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3847 JUMPI JUMPDEST POP DUP10 SWAP1 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x37D7 JUMPI SWAP3 DUP1 PUSH2 0x3781 SWAP9 SWAP8 SWAP6 SWAP4 DUP2 SWAP4 PUSH1 0x5 SWAP9 SWAP7 PUSH1 0x0 SWAP5 PUSH2 0x37CC JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD PUSH1 0x4 DUP5 ADD SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x4 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 CALLER SWAP1 DUP3 PUSH32 0x19E8779A5DE1DEEA64844B3C74C7909A3E9D5774A736170CF5ADD7D652D3CFC2 PUSH1 0x0 DUP1 LOG4 DUP2 MSTORE RETURN JUMPDEST ADD MLOAD SWAP3 POP DUP14 DUP1 PUSH2 0x3753 JUMP JUMPDEST SWAP1 PUSH1 0x1F SWAP4 SWAP3 SWAP4 NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP12 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP14 DUP3 DUP3 LT PUSH2 0x3833 JUMPI POP POP SWAP2 PUSH1 0x5 SWAP8 SWAP6 SWAP4 SWAP2 DUP6 PUSH2 0x3781 SWAP12 SWAP11 SWAP9 SWAP7 SWAP5 LT PUSH2 0x381A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x3765 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0x380D JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE SWAP5 DUP8 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x37ED JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE DUP11 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP13 DUP7 LT PUSH2 0x3886 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP4 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x387A JUMPI POP POP PUSH2 0x372E JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP4 SWAP1 PUSH2 0x386C JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x3861 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45766964656E6365204950465320686173682063616E6E6F7420626520656D70 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7479 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063757272656E7420686F6C6465722063616E207265706F72740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x3657 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x396A SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x39A9 JUMPI PUSH1 0xFF NOT AND PUSH1 0x2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x5 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x6DB JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x39FF PUSH2 0x40EF JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x3A1B JUMPI PUSH2 0x1417 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x457B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 PUSH2 0x19A4 PUSH2 0x3A40 CALLDATASIZE PUSH2 0x4105 JUMP JUMPDEST SWAP2 PUSH2 0x49DA JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 PUSH2 0x3A74 PUSH2 0x3A59 CALLDATASIZE PUSH2 0x4105 JUMP JUMPDEST SWAP1 DUP3 SWAP4 SWAP3 ISZERO ISZERO DUP1 PUSH2 0x3AAB JUMPI JUMPDEST PUSH2 0x3A6E SWAP1 PUSH2 0x4774 JUMP JUMPDEST DUP4 PUSH2 0x49DA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO SWAP2 DUP3 DUP3 MSTORE PUSH32 0x6C064A68A91E386A0F86FBEEA16FD0052A00310BF1FD86927F30D29C9C881C6 DUP5 CALLER SWAP4 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x3 SLOAD DUP5 LT PUSH2 0x3A65 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x1417 PUSH1 0x4 CALLDATALOAD PUSH2 0x3AD5 PUSH2 0x40EF JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x3AF0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x42A7 JUMP JUMPDEST PUSH2 0x4514 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DC1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP2 MSTORE PUSH2 0x3B3D PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x4842 JUMP JUMPDEST DUP2 ISZERO ISZERO DUP1 PUSH2 0x3C04 JUMPI JUMPDEST PUSH2 0x3B4F SWAP1 PUSH2 0x4A65 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x8 DUP2 MSTORE CALLER PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SUB PUSH2 0x3BB4 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP2 PUSH1 0x4 DUP4 LT ISZERO PUSH2 0x92E JUMPI PUSH2 0x3B98 PUSH1 0x8 SWAP4 ISZERO PUSH2 0x4AA6 JUMP JUMPDEST PUSH1 0x0 MSTORE MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x2 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061737369676E6564206469737472696275746F722063616E207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1A9958DD PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x4 SLOAD DUP3 LT PUSH2 0x3B46 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3C78 SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x6DB JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x3CE3 PUSH2 0x40D9 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD AND PUSH2 0x3D01 PUSH1 0x1 DUP4 ADD PUSH2 0x3FF3 JUMP JUMPDEST SWAP2 PUSH1 0xFF PUSH1 0x3 PUSH1 0x2 DUP4 ADD SLOAD SWAP3 ADD SLOAD AND PUSH2 0x3D2B PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP6 MSTORE PUSH1 0x80 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD SWAP1 PUSH2 0x4099 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 PUSH1 0xA0 PUSH1 0x40 MLOAD PUSH2 0x3D61 DUP2 PUSH2 0x3F63 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 DUP6 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE DUP1 ISZERO ISZERO DUP1 PUSH2 0x3E44 JUMPI JUMPDEST PUSH2 0x3D8F SWAP1 PUSH2 0x4AF2 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3DA8 DUP3 PUSH2 0x3F63 JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD DUP4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x40 DUP6 ADD SWAP1 DUP2 MSTORE PUSH2 0x3E31 SWAP2 PUSH2 0x3DDE PUSH1 0x3 DUP7 ADD PUSH2 0x3FF3 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP8 ADD SWAP3 DUP4 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x4 DUP9 ADD SLOAD SWAP8 PUSH1 0x80 DUP11 ADD SWAP9 DUP10 MSTORE ADD SLOAD AND SWAP5 PUSH1 0xA0 DUP9 ADD SWAP6 ISZERO ISZERO DUP7 MSTORE PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 DUP2 DUP11 MSTORE MLOAD SWAP1 DUP10 ADD MSTORE MLOAD PUSH1 0x40 DUP9 ADD MSTORE MLOAD AND PUSH1 0x60 DUP7 ADD MSTORE MLOAD PUSH1 0xC0 PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD SWAP1 PUSH2 0x4099 JUMP JUMPDEST SWAP2 MLOAD PUSH1 0xA0 DUP5 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x5 SLOAD DUP2 LT PUSH2 0x3D86 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 DUP3 ADD SLOAD AND PUSH2 0x3EC5 PUSH2 0x3E94 PUSH1 0x3 DUP5 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x5 PUSH1 0x4 DUP7 ADD SLOAD SWAP6 ADD SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0xC0 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD SWAP1 PUSH2 0x4099 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x2EF JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x3F18 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x3F11 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x3F59 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x3F43 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x3F38 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xE3C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x120 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xE3C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xE3C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x1E0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xE3C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xE3C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x4007 DUP5 PUSH2 0x3F29 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x4076 JUMPI POP PUSH1 0x1 EQ PUSH2 0x4033 JUMPI JUMPDEST POP POP PUSH2 0x4031 SWAP3 POP SUB DUP4 PUSH2 0x3FD2 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x405E JUMPI POP POP PUSH2 0x4031 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x4023 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x4046 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4031 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x4023 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x40C5 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x40A4 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2EF JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2EF JUMPI JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP4 GT PUSH2 0x2EF JUMPI DUP1 PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x2EF JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0xE3C JUMPI DUP2 PUSH1 0x5 SHL PUSH1 0x40 MLOAD SWAP4 PUSH1 0x20 SWAP4 PUSH2 0x415B DUP6 DUP5 ADD DUP8 PUSH2 0x3FD2 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x24 DUP5 DUP7 ADD SWAP3 DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x2EF JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x4180 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x4172 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2EF JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE3C JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x41C3 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x3FD2 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x2EF JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2EF JUMPI PUSH2 0x4214 SWAP2 PUSH1 0x4 ADD PUSH2 0x418F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x423E JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x4230 JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x92E JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x92E JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x92E JUMPI MSTORE JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x4291 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x42CD JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x6B476DB4B19B8E11AC475B323C35B9D0F52831CF1D8CF1455692D57FFBCCAAAC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xEEFB95E842A3287179D933B4460BE539A1D5AF11AA8B325BB45C5C8DC92DE4ED SWAP1 PUSH1 0xFF AND PUSH2 0x4386 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4D61 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DE1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4E01 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x4386 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4D61 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x1269C68C28A67305F4A2D47532888D6C961251CFCB06C9CDB6066D32B24B320 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4D81 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x4386 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4D61 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x37775ADB12013835CE20D78B1C52193DD1DA3DC792BC1EC9A2D7427221516C8A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DC1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x4386 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4D61 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x4386 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4D61 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x4386 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x45F7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E2063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x464D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206D616E7566616374757265722063616E2063616C6C207468697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x333AB731BA34B7B7 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x46AA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175616E74697479206D7573742062652067726561746572207468616E203000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x46F6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4950465320686173682063616E6E6F7420626520656D70747900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x6DB JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x92E JUMPI MSTORE JUMP JUMPDEST PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH2 0x4762 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x477B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x125B9D985B1A590818985D18DA081251 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x47BA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206469737472696275746F7220616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4806 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420626174636820737461747573 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4849 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206469737472696275746F722063616E2063616C6C20746869732066 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x3AB731BA34B7B7 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x48A5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x486F73706974616C206973206E6F7420616374697665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x48EA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920686F73706974616C2063616E2063616C6C20746869732066756E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x3A34B7B7 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4942 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070617469656E742061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x6DB JUMPI JUMP JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0xE3C JUMPI PUSH2 0x49B6 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x4279 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x92E JUMPI MSTORE JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP3 DUP1 ISZERO ISZERO DUP1 PUSH2 0x4A5A JUMPI JUMPDEST PUSH2 0x49F0 SWAP1 PUSH2 0x4774 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x6 DUP4 MSTORE PUSH1 0x40 SWAP3 PUSH1 0x4 DUP5 DUP5 KECCAK256 ADD SLOAD SWAP5 SWAP2 DUP4 SWAP3 JUMPDEST DUP8 MLOAD DUP5 LT ISZERO PUSH2 0x4A4F JUMPI DUP3 DUP5 PUSH1 0x5 SHL DUP10 ADD ADD MLOAD SWAP1 DUP2 DUP2 LT PUSH1 0x0 EQ PUSH2 0x4A3F JUMPI DUP6 MSTORE DUP3 MSTORE PUSH2 0x4A39 DUP6 DUP6 KECCAK256 JUMPDEST SWAP4 PUSH2 0x473B JUMP JUMPDEST SWAP3 PUSH2 0x4A0B JUMP JUMPDEST SWAP1 DUP6 MSTORE DUP3 MSTORE PUSH2 0x4A39 DUP6 DUP6 KECCAK256 PUSH2 0x4A33 JUMP JUMPDEST SWAP5 POP SWAP6 POP POP POP POP EQ SWAP1 JUMP JUMPDEST POP PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x49E7 JUMP JUMPDEST ISZERO PUSH2 0x4A6C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C995C5D595CDD081251 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4AAD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265717565737420616C72656164792070726F63657373656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4AF9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081C995C1BDC9D081251 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH2 0x4C5A JUMPI JUMPDEST PUSH2 0x4C54 JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x4B58 DUP2 PUSH2 0x3FB6 JUMP JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH2 0x4B68 PUSH1 0x1 DUP4 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x4B79 PUSH1 0x2 DUP4 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP2 PUSH2 0x4BAA PUSH1 0x5 DUP3 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD SWAP2 PUSH1 0xC0 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP3 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP3 ADD SLOAD SWAP4 PUSH2 0x120 DUP3 ADD SWAP5 DUP6 MSTORE PUSH1 0xA DUP4 ADD SLOAD PUSH2 0x4BF5 PUSH1 0xFF DUP3 AND PUSH2 0x140 DUP6 ADD PUSH2 0x474A JUMP JUMPDEST PUSH1 0x8 SHR AND PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0xB DUP3 ADD SLOAD PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x1C0 PUSH2 0x4C2B PUSH1 0xD PUSH1 0xFF PUSH1 0xC DUP7 ADD SLOAD AND SWAP5 PUSH2 0x1A0 DUP6 ADD SWAP6 ISZERO ISZERO DUP7 MSTORE ADD PUSH2 0x3FF3 JUMP JUMPDEST SWAP2 ADD MSTORE MLOAD ISZERO SWAP2 DUP3 PUSH2 0x4C49 JUMPI JUMPDEST POP DUP2 PUSH2 0x4C41 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST MLOAD TIMESTAMP LT SWAP2 POP CODESIZE PUSH2 0x4C37 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x4B3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD SWAP1 SWAP3 PUSH2 0x4C8D DUP3 PUSH2 0x3F7E JUMP JUMPDEST DUP4 SLOAD AND DUP2 MSTORE PUSH2 0x4C9E PUSH1 0x1 DUP5 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x4CAF PUSH1 0x2 DUP5 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x3 DUP5 ADD SLOAD AND SWAP1 PUSH2 0x4CCB PUSH1 0x60 DUP3 ADD SWAP3 DUP4 PUSH2 0x49CE JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x100 PUSH1 0x7 PUSH1 0x5 DUP7 ADD SLOAD SWAP6 PUSH1 0xA0 DUP5 ADD SWAP7 DUP8 MSTORE PUSH1 0xFF PUSH1 0x6 DUP3 ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE MLOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x4D4C JUMPI PUSH1 0x1 EQ PUSH2 0x4D1E JUMPI POP MLOAD SWAP1 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 PUSH1 0x1 SHL SWAP2 DUP1 DUP4 DIV PUSH1 0x2 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x4D38 JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT INVALID 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D72606200 STATICCALL 0xC4 0x2B PUSH30 0xC86B75901D61ECFAB2A4A1A6EDED478B97A428094891ABED7D7FFB7A348E SHR PUSH11 0x2869081A26547B49160DD RETURNDATASIZE 0xF7 0x2D SAR PUSH22 0xA570EB9B698292ECFBD454F36A7E1A388BD6FC3AB10D NUMBER 0x4A LOG4 JUMPI DUP16 DUP2 BYTE 0xCB 0xBC RETURN GASPRICE 0xFB SHR PUSH10 0x7486313C90E68B589B8F LT SLOAD PUSH10 0x304896D2D9920902EC0B PUSH22 0x38B2F0839E2092C13ED272ECC8F5B4140CCA307CD927 0xE5 SWAP13 0xBE 0xEA DUP3 SWAP2 0xBF INVALID 0xEE 0x22 DUP16 0xC6 PUSH24 0xF0FA059AEF7B4DD8D5A2646970667358221220029685E3F6 0xB9 0xCA 0xA5 CODECOPY SWAP8 0xA6 DUP16 PUSH27 0x44093E554F6AF62AAE6FEF0AF658018B9AFBBC64736F6C63430008 EQ STOP CALLER 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D00000000 ","sourceMap":"507:21397:11:-:0;;;;;;1857:1:4;507:21397:11;;1857:1:4;3034::11;507:21397;1857:1:4;3073::11;507:21397;1857:1:4;3111::11;507:21397;5795:42;5826:10;5795:42;:::i;:::-;;5847:34;5826:10;5847:34;:::i;:::-;;507:21397;;;;;;;;;;;;;6155:316:0;-1:-1:-1;;;;;507:21397:11;2241:4:0;507:21397:11;;;;;;;;;;2241:4:0;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;735:10:2;6346:40:0;-1:-1:-1;;;;;;;;;;;6346:40:0;;;507:21397:11;6400:11:0;:::o;6248:217::-;6442:12;;:::o;6155:316::-;-1:-1:-1;;;;;507:21397:11;2930:6:0;507:21397:11;;;;;;;;;;2930:6:0;;507:21397:11;941:23;;507:21397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:2;6346:40:0;;;507:21397:11;6400:11:0;:::o;6248:217::-;6442:12;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":16623,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_71664":{"entryPoint":16601,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_string":{"entryPoint":16783,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_bytes32t_array_bytes32_dyn":{"entryPoint":16645,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_uint256t_string":{"entryPoint":16869,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_array_uint256_dyn":{"entryPoint":16919,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_enum_DrugStatus":{"entryPoint":16991,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_enum_HospitalType":{"entryPoint":17004,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_enum_RequestStatus":{"entryPoint":16978,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":16537,"id":null,"parameterSlots":2,"returnSlots":1},"array_push_from_uint256_to_array_uint256_dyn_storage_ptr":{"entryPoint":18836,"id":null,"parameterSlots":2,"returnSlots":0},"checked_sub_uint256":{"entryPoint":18823,"id":null,"parameterSlots":2,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":16371,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":16169,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":16338,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_71662":{"entryPoint":16227,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_71678":{"entryPoint":16254,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_71689":{"entryPoint":16282,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_71696":{"entryPoint":16310,"id":null,"parameterSlots":1,"returnSlots":0},"fun_calculatePriority":{"entryPoint":19558,"id":4487,"parameterSlots":1,"returnSlots":1},"fun_checkRole":{"entryPoint":17063,"id":94,"parameterSlots":1,"returnSlots":0},"fun_grantRole":{"entryPoint":17684,"id":257,"parameterSlots":2,"returnSlots":1},"fun_grantRole_71682":{"entryPoint":17131,"id":257,"parameterSlots":1,"returnSlots":1},"fun_grantRole_71686":{"entryPoint":17291,"id":257,"parameterSlots":1,"returnSlots":1},"fun_grantRole_71688":{"entryPoint":17410,"id":257,"parameterSlots":1,"returnSlots":1},"fun_grantRole_71695":{"entryPoint":17547,"id":257,"parameterSlots":1,"returnSlots":1},"fun_isValidBatch":{"entryPoint":19250,"id":4425,"parameterSlots":1,"returnSlots":1},"fun_requireNotPaused":{"entryPoint":18262,"id":471,"parameterSlots":0,"returnSlots":0},"fun_revokeRole":{"entryPoint":17787,"id":295,"parameterSlots":2,"returnSlots":1},"increment_uint256":{"entryPoint":18235,"id":null,"parameterSlots":1,"returnSlots":1},"modifier_validBatch":{"entryPoint":18906,"id":3035,"parameterSlots":3,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":18590,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_0256":{"entryPoint":18083,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_1ec5":{"entryPoint":18355,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_2130":{"entryPoint":19186,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_33c4":{"entryPoint":18747,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_535f":{"entryPoint":19110,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_8f1d":{"entryPoint":18498,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9133":{"entryPoint":18159,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9368":{"entryPoint":18431,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_c05b":{"entryPoint":18659,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d79a":{"entryPoint":17990,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e0ef":{"entryPoint":17904,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_eba8":{"entryPoint":18292,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_fe5b":{"entryPoint":19045,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_uint256_dyn":{"entryPoint":17017,"id":null,"parameterSlots":2,"returnSlots":2},"update_storage_value_offsett_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_enum_DrugStatus":{"entryPoint":18250,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_enum_HospitalType":{"entryPoint":18894,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x3ED6 JUMPI POP DUP1 PUSH4 0x9C3BDB3 EQ PUSH2 0x3E4F JUMPI DUP1 PUSH4 0xC38B75F EQ PUSH2 0x3D3C JUMPI DUP1 PUSH4 0x11CF8D85 EQ PUSH2 0x3CC1 JUMPI DUP1 PUSH4 0x15CD1841 EQ PUSH2 0x3C96 JUMPI DUP1 PUSH4 0x20749068 EQ PUSH2 0x3C3E JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x3C0F JUMPI DUP1 PUSH4 0x2D7788DB EQ PUSH2 0x3AF5 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x3AB6 JUMPI DUP1 PUSH4 0x2FF2FF0B EQ PUSH2 0x3A46 JUMPI DUP1 PUSH4 0x3316777E EQ PUSH2 0x3A2D JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x39E6 JUMPI DUP1 PUSH4 0x39595EE4 EQ PUSH2 0x39BB JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3930 JUMPI DUP1 PUSH4 0x463B3DA0 EQ PUSH2 0x3610 JUMPI DUP1 PUSH4 0x463E1F15 EQ PUSH2 0x3313 JUMPI DUP1 PUSH4 0x4D22436F EQ PUSH2 0x320A JUMPI DUP1 PUSH4 0x55C4281E EQ PUSH2 0x31C0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x319D JUMPI DUP1 PUSH4 0x5D45E084 EQ PUSH2 0x3125 JUMPI DUP1 PUSH4 0x69A6DDA5 EQ PUSH2 0x30A1 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x3066 JUMPI DUP1 PUSH4 0x7EE756F2 EQ PUSH2 0x301C JUMPI DUP1 PUSH4 0x7F2DF8B0 EQ PUSH2 0x2FD2 JUMPI DUP1 PUSH4 0x8102DBCF EQ PUSH2 0x2F86 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2F0B JUMPI DUP1 PUSH4 0x85115AB1 EQ PUSH2 0x2D44 JUMPI DUP1 PUSH4 0x8987E936 EQ PUSH2 0x2CF3 JUMPI DUP1 PUSH4 0x8A817E7B EQ PUSH2 0x2A4D JUMPI DUP1 PUSH4 0x8BBA2A0A EQ PUSH2 0x2A03 JUMPI DUP1 PUSH4 0x8D55863B EQ PUSH2 0x2193 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2146 JUMPI DUP1 PUSH4 0x965288B0 EQ PUSH2 0x210B JUMPI DUP1 PUSH4 0x98E9220A EQ PUSH2 0x2089 JUMPI DUP1 PUSH4 0x99BE8C82 EQ PUSH2 0x2034 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2018 JUMPI DUP1 PUSH4 0xA69D634F EQ PUSH2 0x1FFC JUMPI DUP1 PUSH4 0xAC5CB97D EQ PUSH2 0x1FD3 JUMPI DUP1 PUSH4 0xAF988145 EQ PUSH2 0x1F51 JUMPI DUP1 PUSH4 0xB6E202D7 EQ PUSH2 0x19AE JUMPI DUP1 PUSH4 0xBC7999AD EQ PUSH2 0x1986 JUMPI DUP1 PUSH4 0xBD8F1752 EQ PUSH2 0x1800 JUMPI DUP1 PUSH4 0xC098CC32 EQ PUSH2 0x1735 JUMPI DUP1 PUSH4 0xC177D077 EQ PUSH2 0x15F4 JUMPI DUP1 PUSH4 0xC49B09B5 EQ PUSH2 0x1463 JUMPI DUP1 PUSH4 0xD50F7E7B EQ PUSH2 0x1419 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x13D8 JUMPI DUP1 PUSH4 0xD5E42F79 EQ PUSH2 0x11B4 JUMPI DUP1 PUSH4 0xD7D1BBDB EQ PUSH2 0x1098 JUMPI DUP1 PUSH4 0xD890E049 EQ PUSH2 0x106D JUMPI DUP1 PUSH4 0xDFE6BBE6 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xE17769BF EQ PUSH2 0xFF4 JUMPI DUP1 PUSH4 0xE181143C EQ PUSH2 0xF9C JUMPI DUP1 PUSH4 0xE19D6FD0 EQ PUSH2 0x9B2 JUMPI DUP1 PUSH4 0xE229F2CB EQ PUSH2 0x6F1 JUMPI DUP1 PUSH4 0xE720AC8E EQ PUSH2 0x6B0 JUMPI DUP1 PUSH4 0xF093CF80 EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0xF0BD87CC EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0xF276C323 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xF6BA6678 EQ PUSH2 0x2F4 JUMPI PUSH4 0xFDBF6EE5 EQ PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4E01 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x60 PUSH2 0x1C0 PUSH1 0x40 MLOAD PUSH2 0x33F DUP2 PUSH2 0x3FB6 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x180 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1A0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x5A9 JUMPI JUMPDEST PUSH2 0x3B7 SWAP1 PUSH2 0x4774 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x5A5 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x4A0 PUSH1 0xD PUSH1 0x40 MLOAD SWAP3 PUSH2 0x3D9 DUP5 PUSH2 0x3FB6 JUMP JUMPDEST DUP1 SLOAD DUP5 MSTORE PUSH2 0x3E9 PUSH1 0x1 DUP3 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x3FA PUSH1 0x2 DUP3 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x428 PUSH1 0x5 DUP3 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP6 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x46D PUSH1 0xFF DUP3 AND PUSH2 0x140 DUP8 ADD PUSH2 0x474A JUMP JUMPDEST PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0xB DUP2 ADD SLOAD PUSH2 0x180 DUP6 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1A0 DUP6 ADD MSTORE ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE DUP1 MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1C0 PUSH2 0x523 PUSH2 0x4F1 PUSH2 0x4DB PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x1E0 PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0x200 DUP9 ADD SWAP1 PUSH2 0x4099 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD DUP8 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0x60 DUP10 ADD MSTORE PUSH2 0x4099 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP6 ADD MLOAD AND PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP8 DUP4 SUB ADD PUSH1 0xC0 DUP9 ADD MSTORE PUSH2 0x4099 JUMP JUMPDEST SWAP2 PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x565 PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x160 DUP8 ADD SWAP1 PUSH2 0x425F JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x160 DUP3 ADD MLOAD AND PUSH2 0x180 DUP7 ADD MSTORE PUSH2 0x180 DUP2 ADD MLOAD PUSH2 0x1A0 DUP7 ADD MSTORE PUSH2 0x1A0 DUP2 ADD MLOAD ISZERO ISZERO DUP3 DUP7 ADD MSTORE ADD MLOAD PUSH1 0x1F NOT DUP5 DUP4 SUB ADD PUSH2 0x1E0 DUP6 ADD MSTORE PUSH2 0x4099 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x3AE JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DC1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x5FF PUSH2 0x40D9 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD AND PUSH2 0x61D PUSH1 0x1 DUP4 ADD PUSH2 0x3FF3 JUMP JUMPDEST SWAP2 PUSH2 0x62A PUSH1 0x2 DUP3 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0xFF DUP1 PUSH1 0x3 DUP5 ADD SLOAD AND SWAP3 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x5 DUP3 ADD SLOAD SWAP1 PUSH2 0x687 PUSH2 0x67C PUSH1 0x7 PUSH1 0x6 DUP7 ADD SLOAD SWAP6 ADD SLOAD SWAP7 PUSH2 0x66E PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP12 DUP13 MSTORE PUSH1 0x20 DUP13 PUSH2 0x120 SWAP2 DUP3 SWAP2 ADD MSTORE DUP13 ADD SWAP1 PUSH2 0x4099 JUMP JUMPDEST SWAP1 DUP11 DUP3 SUB PUSH1 0x40 DUP13 ADD MSTORE PUSH2 0x4099 JUMP JUMPDEST SWAP7 PUSH1 0x60 DUP10 ADD SWAP1 PUSH2 0x426C JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD MSTORE DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x3 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x6DB JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x70D PUSH2 0x40EF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x6B476DB4B19B8E11AC475B323C35B9D0F52831CF1D8CF1455692D57FFBCCAAAC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x74B SWAP1 PUSH1 0xFF AND PUSH2 0x4646 JUMP JUMPDEST DUP3 ISZERO ISZERO DUP1 PUSH2 0x9A7 JUMPI JUMPDEST PUSH2 0x75D SWAP1 PUSH2 0x4774 JUMP JUMPDEST PUSH2 0x765 PUSH2 0x4756 JUMP JUMPDEST PUSH1 0x1 SWAP3 PUSH1 0x2 DUP5 SLOAD EQ PUSH2 0x995 JUMPI PUSH1 0x2 DUP5 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DC1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP5 DUP6 PUSH1 0x0 MSTORE DUP5 MSTORE PUSH2 0x7B3 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x47B3 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x6 DUP5 MSTORE CALLER SWAP1 PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SUB PUSH2 0x944 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0xFF PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x92E JUMPI PUSH2 0x7F3 SWAP1 ISZERO PUSH2 0x47FF JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0xFF PUSH1 0xC PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x8E9 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x8A4 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 DUP5 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA DUP2 ADD DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR PUSH1 0x8 SWAP4 SWAP1 SWAP4 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0xB ADD PUSH2 0x873 DUP2 SLOAD PUSH2 0x473B JUMP JUMPDEST SWAP1 SSTORE PUSH32 0x1183A7BEB644D5E5D07752E6223CF93B80B08A9201F60C52AAA3D23AA32252C1 PUSH1 0x40 MLOAD SWAP3 DUP6 DUP5 MSTORE CALLER SWAP4 LOG4 DUP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E736665722065787069726564206261746368000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220726563616C6C65642062617463680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206261746368206D616E7566616374757265722063616E207472616E PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x39B332B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP4 LT PUSH2 0x754 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x9CB PUSH2 0x40D9 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2EF JUMPI PUSH2 0x9EA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x418F JUMP JUMPDEST SWAP1 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2EF JUMPI PUSH2 0xA0A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x418F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DE1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xA36 SWAP1 PUSH1 0xFF AND PUSH2 0x48E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x37775ADB12013835CE20D78B1C52193DD1DA3DC792BC1EC9A2D7427221516C8A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA7A SWAP1 PUSH1 0xFF AND PUSH2 0x47B3 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0xA97 PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x489E JUMP JUMPDEST PUSH2 0xAA4 PUSH1 0x44 CALLDATALOAD ISZERO ISZERO PUSH2 0x46A3 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xF5E JUMPI DUP2 MLOAD ISZERO PUSH2 0xF20 JUMPI PUSH1 0x4 SLOAD SWAP2 PUSH2 0xABF DUP4 PUSH2 0x473B JUMP JUMPDEST PUSH1 0x4 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xADD DUP3 PUSH2 0x3F7E JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH2 0xAF6 PUSH1 0x1 DUP3 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xB07 PUSH1 0x2 DUP3 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x7 PUSH1 0xFF PUSH1 0x3 DUP4 ADD SLOAD AND SWAP2 PUSH2 0xB25 PUSH1 0x60 DUP6 ADD SWAP4 DUP5 PUSH2 0x49CE JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0x6 DUP3 ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE ADD SLOAD PUSH2 0x100 DUP4 ADD MSTORE MLOAD SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x92E JUMPI PUSH1 0xA0 SWAP2 PUSH1 0x1 SUB PUSH2 0xF18 JUMPI ADD MLOAD DUP1 DUP1 PUSH1 0x1 SHL DIV PUSH1 0x2 EQ DUP2 ISZERO OR ISZERO PUSH2 0x6DB JUMPI PUSH1 0x1 SHL SWAP4 JUMPDEST PUSH1 0x40 MLOAD SWAP5 PUSH2 0xB97 DUP7 PUSH2 0x3F9A JUMP JUMPDEST DUP5 DUP7 MSTORE CALLER PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP8 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 MLOAD DUP2 SSTORE PUSH1 0x1 DUP2 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP7 ADD MLOAD AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP2 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x2 DUP3 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP8 ADD MLOAD AND SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x5 DUP2 ADD PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x92E JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 DUP5 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x100 DUP5 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE3C JUMPI PUSH2 0xC96 PUSH1 0x8 DUP5 ADD SLOAD PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xED1 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xE5D JUMPI SWAP2 DUP1 PUSH2 0x120 SWAP5 SWAP3 PUSH1 0x9 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0xE52 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x8 DUP3 ADD SSTORE JUMPDEST ADD SWAP4 ADD MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xE3C JUMPI PUSH2 0xCF7 DUP3 SLOAD PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xDF4 JUMPI JUMPDEST POP DUP1 PUSH1 0x20 SWAP6 DUP7 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xD90 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xD85 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0xC DUP4 MSTORE PUSH2 0xD45 DUP3 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x4994 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x44 CALLDATALOAD DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 PUSH32 0x5AB53553AADAC42F69E7F599923C6DF5AA5264BA08B69E5B61B9B2CF4517A042 DUP6 CALLER SWAP4 LOG4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0xD1A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE DUP9 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xDDD JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0xDC4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xD2F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0xDB7 JUMP JUMPDEST SWAP3 SWAP4 DUP10 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xDA1 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0xE32 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xE26 JUMPI POP PUSH2 0xD00 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xE19 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0xCC0 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH1 0x8 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xEB9 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0x9 SWAP7 PUSH2 0x120 SWAP9 SWAP7 LT PUSH2 0xEA0 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x8 DUP3 ADD SSTORE PUSH2 0xCD8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0xE90 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x8 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xF11 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xF05 JUMPI POP POP PUSH2 0xC9F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xEEF JUMP JUMPDEST POP DUP1 PUSH2 0xEEF JUMP JUMPDEST ADD MLOAD SWAP4 PUSH2 0xB8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x155C99D95B98DE481B195D995B081C995C5D5A5C9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x526561736F6E2063616E6E6F7420626520656D707479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0xFB5 PUSH2 0x40D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x2EF JUMPI PUSH1 0x20 SWAP2 PUSH2 0xFE6 SWAP2 PUSH2 0x4279 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x1032 SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x1062 JUMPI JUMPDEST PUSH2 0x1044 SWAP1 PUSH2 0x4AF2 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST POP PUSH1 0x5 SLOAD DUP2 LT PUSH2 0x103B JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x20 PUSH2 0x1090 PUSH2 0x108B PUSH2 0x40D9 JUMP JUMPDEST PUSH2 0x4C66 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DC1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP2 MSTORE PUSH2 0x10E0 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x4842 JUMP JUMPDEST DUP2 ISZERO ISZERO DUP1 PUSH2 0x11A9 JUMPI JUMPDEST PUSH2 0x10F2 SWAP1 PUSH2 0x4A65 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x8 DUP2 MSTORE CALLER PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SUB PUSH2 0x1157 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP2 PUSH1 0x4 DUP4 LT ISZERO PUSH2 0x92E JUMPI PUSH2 0x113B PUSH1 0x8 SWAP4 ISZERO PUSH2 0x4AA6 JUMP JUMPDEST PUSH1 0x0 MSTORE MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061737369676E6564206469737472696275746F722063616E206170 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x70726F7665 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x4 SLOAD DUP3 LT PUSH2 0x10E9 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x11D0 PUSH2 0x40EF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x37775ADB12013835CE20D78B1C52193DD1DA3DC792BC1EC9A2D7427221516C8A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1212 SWAP1 PUSH1 0xFF AND PUSH2 0x4842 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x13CD JUMPI JUMPDEST PUSH2 0x1224 SWAP1 PUSH2 0x4774 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4E01 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP5 DUP6 PUSH1 0x0 MSTORE DUP5 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1388 JUMPI DUP3 PUSH1 0x0 MSTORE PUSH1 0x6 DUP5 MSTORE CALLER SWAP1 PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND SUB PUSH2 0x1345 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0xFF PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x92E JUMPI PUSH2 0x12A7 PUSH1 0x1 PUSH1 0x6 SWAP4 EQ PUSH2 0x47FF JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH2 0x12C2 PUSH1 0xFF DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x489E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE DUP3 DUP6 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x8 SWAP4 SWAP1 SWAP4 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x2 OR SWAP1 SWAP2 SSTORE ADD SLOAD DUP4 PUSH1 0x0 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD SWAP2 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x6DB JUMPI SSTORE PUSH32 0x1183A7BEB644D5E5D07752E6223CF93B80B08A9201F60C52AAA3D23AA32252C1 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x2 DUP5 MSTORE CALLER SWAP4 LOG4 STOP JUMPDEST PUSH1 0x64 DUP4 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063757272656E7420686F6C6465722063616E207472616E73666572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420686F73706974616C20616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x121B JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x1417 PUSH1 0x4 CALLDATALOAD PUSH2 0x13F7 PUSH2 0x40EF JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x1412 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x42A7 JUMP JUMPDEST PUSH2 0x457B JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x1432 PUSH2 0x40D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x2EF JUMPI PUSH1 0x20 SWAP2 PUSH2 0xFE6 SWAP2 PUSH2 0x4279 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x147D PUSH2 0x40D9 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x148A DUP2 PUSH2 0x3F7E JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE DUP2 DUP2 ADD PUSH1 0x60 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x60 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD PUSH1 0x0 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD PUSH1 0x0 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD PUSH1 0x0 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD PUSH1 0x0 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD PUSH1 0x0 SWAP1 MSTORE PUSH2 0x100 DUP1 SWAP2 ADD PUSH1 0x0 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB DUP1 SWAP4 AND PUSH1 0x0 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x14F5 DUP5 PUSH2 0x3F7E JUMP JUMPDEST DUP3 SLOAD DUP6 AND DUP5 MSTORE PUSH2 0x1507 PUSH1 0x1 DUP5 ADD PUSH2 0x3FF3 JUMP JUMPDEST DUP5 DUP3 ADD SWAP1 DUP2 MSTORE SWAP2 PUSH2 0x151A PUSH1 0x2 DUP6 ADD PUSH2 0x3FF3 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP7 ADD SWAP4 DUP5 MSTORE PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0xFF AND SWAP5 PUSH1 0x60 DUP8 ADD SWAP6 PUSH2 0x153A SWAP1 DUP8 PUSH2 0x49CE JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 DUP3 ADD SLOAD SWAP1 PUSH1 0xA0 DUP10 ADD SWAP2 DUP3 MSTORE PUSH1 0x6 DUP4 ADD SLOAD SWAP4 PUSH1 0xC0 DUP11 ADD SWAP4 PUSH1 0xFF DUP7 AND ISZERO ISZERO DUP6 MSTORE PUSH1 0xE0 DUP12 ADD SWAP6 PUSH1 0x8 SHR PUSH1 0xFF AND ISZERO ISZERO DUP7 MSTORE PUSH1 0x7 ADD SLOAD SWAP7 DUP7 DUP12 ADD SWAP8 DUP9 MSTORE PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP12 DUP3 DUP14 MSTORE MLOAD AND SWAP1 DUP12 ADD MSTORE MLOAD SWAP7 PUSH2 0x120 SWAP8 DUP9 PUSH1 0x40 DUP13 ADD MSTORE PUSH2 0x140 DUP12 ADD PUSH2 0x15A9 SWAP2 PUSH2 0x4099 JUMP JUMPDEST SWAP1 MLOAD DUP11 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0x60 DUP13 ADD MSTORE PUSH2 0x15C1 SWAP2 SWAP1 PUSH2 0x4099 JUMP JUMPDEST SWAP8 MLOAD PUSH1 0x80 DUP11 ADD PUSH2 0x15D0 SWAP2 PUSH2 0x426C JUMP JUMPDEST MLOAD PUSH1 0xA0 DUP10 ADD MSTORE MLOAD PUSH1 0xC0 DUP9 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xE0 DUP8 ADD MSTORE MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE MLOAD SWAP1 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD PUSH2 0x1624 SWAP1 PUSH2 0x3FF3 JUMP JUMPDEST SWAP2 PUSH2 0x1631 PUSH1 0x2 DUP3 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH2 0x1655 PUSH1 0x5 DUP4 ADD PUSH2 0x3FF3 JUMP JUMPDEST SWAP3 PUSH1 0x6 DUP4 ADD SLOAD SWAP4 PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0x8 DUP6 ADD SLOAD SWAP1 PUSH1 0x9 DUP7 ADD SLOAD SWAP3 PUSH1 0xA DUP8 ADD SLOAD SWAP5 PUSH1 0xB DUP9 ADD SLOAD SWAP7 PUSH1 0xC DUP10 ADD SLOAD PUSH1 0xFF AND SWAP9 PUSH1 0xD ADD PUSH2 0x168E SWAP1 PUSH2 0x3FF3 JUMP JUMPDEST SWAP11 PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP14 DUP15 MSTORE DUP14 PUSH2 0x1E0 SWAP1 DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH2 0x16AC SWAP2 PUSH2 0x4099 JUMP JUMPDEST DUP14 DUP2 SUB PUSH1 0x40 DUP16 ADD MSTORE PUSH2 0x16BD SWAP2 PUSH2 0x4099 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0x80 DUP13 ADD MSTORE DUP11 DUP2 SUB PUSH1 0xA0 DUP13 ADD MSTORE PUSH2 0x16D9 SWAP2 PUSH2 0x4099 JUMP JUMPDEST SWAP7 PUSH1 0xC0 DUP11 ADD MSTORE PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 DUP9 ADD MSTORE PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x140 DUP7 ADD PUSH1 0xFF DUP3 AND SWAP1 PUSH2 0x1703 SWAP2 PUSH2 0x425F JUMP JUMPDEST PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x160 DUP7 ADD MSTORE PUSH2 0x180 DUP6 ADD MSTORE ISZERO ISZERO PUSH2 0x1A0 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH2 0x1C0 DUP5 ADD MSTORE PUSH2 0x5A5 SWAP2 PUSH2 0x4099 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x5A5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 PUSH2 0x17F1 DUP5 PUSH1 0x1 DUP4 ADD SLOAD AND SWAP5 PUSH1 0x2 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD PUSH2 0x17D5 PUSH1 0xFF PUSH1 0x5 DUP6 ADD SLOAD AND PUSH1 0x6 DUP6 ADD SLOAD SWAP3 PUSH1 0x7 DUP7 ADD SLOAD SWAP5 PUSH2 0x17AE PUSH1 0x9 PUSH2 0x17A7 PUSH1 0x8 DUP11 ADD PUSH2 0x3FF3 JUMP JUMPDEST SWAP9 ADD PUSH2 0x3FF3 JUMP JUMPDEST SWAP9 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 DUP14 MSTORE PUSH1 0x20 DUP14 ADD MSTORE PUSH1 0x40 DUP13 ADD MSTORE PUSH1 0x60 DUP12 ADD MSTORE PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0xA0 DUP10 ADD SWAP1 PUSH2 0x4252 JUMP JUMPDEST PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x140 DUP1 PUSH2 0x100 DUP8 ADD MSTORE DUP6 ADD SWAP1 PUSH2 0x4099 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x4099 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1822 PUSH2 0x40D9 JUMP JUMPDEST AND DUP1 CALLER EQ DUP1 ISZERO PUSH2 0x1956 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x1914 JUMPI JUMPDEST ISZERO PUSH2 0x18C3 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 DUP3 MSTORE PUSH1 0xFF PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x187E JUMPI PUSH1 0x0 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH2 0x1869 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x3FF3 JUMP JUMPDEST SWAP1 PUSH2 0x5A5 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x4099 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4865616C7468207265636F726420646F6573206E6F7420657869737400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642061636365737320746F206865616C7468207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x18DBDC99 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1834 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4E01 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x182D JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x20 PUSH2 0x19A4 PUSH1 0x4 CALLDATALOAD PUSH2 0x4B32 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x19C7 PUSH2 0x40D9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2EF JUMPI PUSH2 0x19E6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x418F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2EF JUMPI PUSH2 0x1A05 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x418F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x64 CALLDATALOAD LT ISZERO PUSH2 0x2EF JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1A39 SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND PUSH2 0x1F0C JUMPI DUP2 MLOAD ISZERO PUSH2 0x1EC7 JUMPI DUP1 MLOAD ISZERO PUSH2 0x1E82 JUMPI PUSH1 0xA4 CALLDATALOAD ISZERO PUSH2 0x1E32 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1A7F DUP3 PUSH2 0x3F7E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1AA6 PUSH1 0x64 CALLDATALOAD PUSH1 0x60 DUP4 ADD PUSH2 0x49CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP5 SLOAD AND OR DUP4 SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE3C JUMPI DUP2 SWAP1 PUSH2 0x1B23 PUSH1 0x1 DUP8 ADD SLOAD PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1DDF JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1D6D JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1D62 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP5 ADD SSTORE JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE3C JUMPI DUP2 SWAP1 PUSH2 0x1B80 PUSH1 0x2 DUP8 ADD SLOAD PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1D0F JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1C9D JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1C92 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP5 ADD SSTORE JUMPDEST PUSH1 0x60 DUP3 ADD MLOAD SWAP3 PUSH1 0x3 DUP2 ADD PUSH1 0x2 DUP6 LT ISZERO PUSH2 0x92E JUMPI PUSH2 0x100 PUSH2 0x1C73 SWAP5 PUSH1 0x7 SWAP3 PUSH32 0xDC9C7CE67C6478B15CB0DBF6F1ED597031431D25746171CCC85589F658462252 SWAP8 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP6 ADD SSTORE PUSH1 0x6 DUP5 ADD PUSH2 0x1C37 PUSH1 0xC0 DUP4 ADD MLOAD ISZERO ISZERO DUP3 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MLOAD DUP2 SLOAD PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x8 SHL PUSH2 0xFF00 AND OR SWAP1 SSTORE ADD MLOAD SWAP2 ADD SSTORE PUSH2 0x1C5E DUP5 PUSH2 0x438B JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x40 DUP4 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x4099 JUMP JUMPDEST SWAP4 PUSH2 0x1C83 PUSH1 0x20 DUP4 ADD PUSH1 0x64 CALLDATALOAD PUSH2 0x426C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 SUB SWAP1 LOG2 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x1BA0 JUMP JUMPDEST SWAP3 POP PUSH1 0x2 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1CF4 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1CDB JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP5 ADD SSTORE PUSH2 0x1BB8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0x1CCB JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1CB0 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x2 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x1D5B JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1D4C JUMPI POP POP PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x1D36 JUMP JUMPDEST POP DUP1 PUSH2 0x1D30 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x1B43 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1DC4 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1DAB JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP5 ADD SSTORE PUSH2 0x1B5B JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0x1D9B JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1D80 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x1E2B JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1E1C JUMPI POP POP PUSH2 0x1B2C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x1E06 JUMP JUMPDEST POP DUP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x486F73706974616C206361706163697479206D75737420626520706F73697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7665 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567697374726174696F6E206E756D62657220726571756972656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x486F73706974616C206E616D652063616E6E6F7420626520656D707479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x486F73706974616C20616C726561647920726567697374657265640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x1F6A PUSH2 0x40D9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1F93 SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x1FBA SWAP1 PUSH1 0xFF AND PUSH2 0x489E JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4D81 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x2 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x206E SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x20A2 PUSH2 0x40D9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x20CB SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x20F2 SWAP1 PUSH1 0xFF AND PUSH2 0x489E JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xEEFB95E842A3287179D933B4460BE539A1D5AF11AA8B325BB45C5C8DC92DE4ED DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x215F PUSH2 0x40EF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2EF JUMPI PUSH2 0x21C3 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x418F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2EF JUMPI PUSH2 0x21E2 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x418F JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2EF JUMPI PUSH2 0x2202 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x418F JUMP JUMPDEST SWAP1 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2EF JUMPI PUSH2 0x2222 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x418F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x6B476DB4B19B8E11AC475B323C35B9D0F52831CF1D8CF1455692D57FFBCCAAAC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 SWAP1 PUSH2 0x2260 SWAP1 PUSH1 0xFF AND PUSH2 0x4646 JUMP JUMPDEST PUSH2 0x2268 PUSH2 0x4756 JUMP JUMPDEST PUSH2 0x2275 PUSH1 0xA4 CALLDATALOAD ISZERO ISZERO PUSH2 0x46A3 JUMP JUMPDEST TIMESTAMP PUSH1 0xC4 CALLDATALOAD GT ISZERO PUSH2 0x29B4 JUMPI DUP2 MLOAD ISZERO PUSH2 0x296F JUMPI DUP4 MLOAD ISZERO PUSH2 0x292A JUMPI PUSH2 0x2299 DUP4 MLOAD ISZERO ISZERO PUSH2 0x46EF JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x28E5 JUMPI PUSH1 0x3 SLOAD SWAP3 PUSH2 0x22AD DUP5 PUSH2 0x473B JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP5 PUSH2 0x22BD DUP7 PUSH2 0x3FB6 JUMP JUMPDEST DUP5 DUP7 MSTORE DUP4 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE CALLER PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xE0 DUP6 ADD MSTORE TIMESTAMP PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH2 0x120 DUP6 ADD MSTORE PUSH1 0x0 PUSH2 0x140 DUP6 ADD MSTORE CALLER PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0x0 PUSH2 0x180 DUP6 ADD MSTORE PUSH1 0x0 PUSH2 0x1A0 DUP6 ADD MSTORE PUSH2 0x1C0 DUP5 ADD MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 MLOAD DUP2 SSTORE PUSH1 0x20 DUP5 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE3C JUMPI DUP2 SWAP1 PUSH2 0x235A PUSH1 0x1 DUP6 ADD SLOAD PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2892 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2820 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2815 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP3 ADD SSTORE JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE3C JUMPI DUP2 SWAP1 PUSH2 0x23B7 PUSH1 0x2 DUP6 ADD SLOAD PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x27C2 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2750 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2745 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP3 ADD SSTORE JUMPDEST PUSH1 0x3 DUP2 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP7 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP5 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE3C JUMPI DUP2 SWAP1 PUSH2 0x2440 PUSH1 0x5 DUP6 ADD SLOAD PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x26F2 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2680 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2675 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x5 DUP3 ADD SSTORE JUMPDEST PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 DUP5 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x100 DUP5 ADD MLOAD PUSH1 0x8 DUP3 ADD SSTORE PUSH2 0x120 DUP5 ADD MLOAD PUSH1 0x9 DUP3 ADD SSTORE PUSH1 0xA DUP2 ADD PUSH2 0x140 DUP6 ADD MLOAD SWAP2 PUSH1 0x5 DUP4 LT ISZERO PUSH2 0x92E JUMPI DUP2 SLOAD PUSH2 0x160 DUP8 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND PUSH1 0xFF SWAP5 DUP6 AND OR PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE PUSH2 0x180 DUP6 ADD MLOAD PUSH1 0xB DUP3 ADD SSTORE PUSH2 0x1A0 DUP6 ADD MLOAD PUSH1 0xC DUP3 ADD DUP1 SLOAD SWAP2 ISZERO ISZERO SWAP1 SWAP4 AND PUSH1 0xFF NOT SWAP2 SWAP1 SWAP2 AND OR SWAP1 SWAP2 SSTORE PUSH2 0x1C0 SWAP1 PUSH1 0xD ADD SWAP4 ADD MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xE3C JUMPI PUSH2 0x2531 DUP3 SLOAD PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x262D JUMPI JUMPDEST POP DUP1 PUSH1 0x20 SWAP6 DUP7 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x25C9 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x25BE JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST DUP2 PUSH32 0xE81D190AE43A7EAAF3DB1D1AD7E4D9D84B8C08C3EF7C78D479E556EFB4802FC8 PUSH2 0x25A0 PUSH1 0x40 MLOAD SWAP4 PUSH1 0x60 DUP6 MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x4099 JUMP JUMPDEST SWAP3 PUSH1 0x64 CALLDATALOAD DUP7 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x2554 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE DUP9 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x2616 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x25FD JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x2569 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0x25F0 JUMP JUMPDEST SWAP3 SWAP4 DUP10 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x25DA JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x266B JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x265F JUMPI POP PUSH2 0x253A JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2652 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2649 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x2460 JUMP JUMPDEST SWAP3 POP PUSH1 0x5 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x26D7 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x26BE JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x5 DUP3 ADD SSTORE PUSH2 0x2478 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0x26AE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2693 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x5 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x273E JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x272F JUMPI POP POP PUSH2 0x2449 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x2719 JUMP JUMPDEST POP DUP1 PUSH2 0x2713 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x23D7 JUMP JUMPDEST SWAP3 POP PUSH1 0x2 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x27A7 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x278E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP3 ADD SSTORE PUSH2 0x23EF JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0x277E JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2763 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x2 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x280E JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x27FF JUMPI POP POP PUSH2 0x23C0 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x27E9 JUMP JUMPDEST POP DUP1 PUSH2 0x27E3 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x237A JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x2877 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x285E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP3 ADD SSTORE PUSH2 0x2392 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0x284E JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2833 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x28DE JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x28CF JUMPI POP POP PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x28B9 JUMP JUMPDEST POP DUP1 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567756C61746F727920617070726F76616C20726571756972656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4472756720636F64652063616E6E6F7420626520656D70747900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44727567206E616D652063616E6E6F7420626520656D70747900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578706972792064617465206D75737420626520696E20746865206675747572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x1417 PUSH2 0x2A1F PUSH2 0x40D9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2A48 SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST PUSH2 0x448B JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x2A66 PUSH2 0x40D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2EF JUMPI PUSH2 0x2A86 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x418F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DE1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x2AB6 SWAP1 PUSH1 0xFF AND PUSH2 0x48E3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4D81 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP5 DUP6 PUSH1 0x0 MSTORE DUP4 MSTORE PUSH2 0x2AF4 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x493B JUMP JUMPDEST PUSH2 0x2B00 DUP5 MLOAD ISZERO ISZERO PUSH2 0x46EF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH1 0x80 DUP4 ADD DUP4 DUP2 LT DUP3 DUP3 GT OR PUSH2 0xE3C JUMPI PUSH1 0x40 MSTORE DUP6 DUP4 MSTORE DUP4 DUP4 ADD DUP6 DUP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 TIMESTAMP DUP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP4 PUSH1 0x1 SWAP1 DUP2 DUP7 MSTORE DUP10 PUSH1 0x0 MSTORE PUSH1 0x9 DUP9 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP7 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP8 SLOAD AND OR DUP7 SSTORE DUP1 DUP7 ADD SWAP3 MLOAD DUP1 MLOAD SWAP3 DUP4 GT PUSH2 0xE3C JUMPI PUSH2 0x2B6B DUP5 SLOAD PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2CAA JUMPI JUMPDEST POP DUP8 SWAP1 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x2C16 JUMPI SWAP4 DUP4 DUP1 PUSH1 0x3 SWAP6 PUSH2 0x2C00 SWAP12 SWAP10 SWAP6 PUSH2 0x2BEC SWAP10 SWAP6 PUSH32 0x5C2B5D6645D201D29B6DA912156D4B230AD8C622967AA75BD74D5E86308236D8 SWAP15 SWAP13 SWAP10 PUSH1 0x0 SWAP5 PUSH2 0x2C0B JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 DUP8 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x4099 JUMP JUMPDEST SWAP1 TIMESTAMP SWAP1 DUP4 ADD MSTORE SUB SWAP1 LOG2 STOP JUMPDEST ADD MLOAD SWAP3 POP DUP16 DUP1 PUSH2 0x2BBF JUMP JUMPDEST SWAP1 PUSH1 0x1F SWAP4 SWAP3 SWAP4 NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2C95 JUMPI POP SWAP4 PUSH2 0x2BEC SWAP8 SWAP4 PUSH32 0x5C2B5D6645D201D29B6DA912156D4B230AD8C622967AA75BD74D5E86308236D8 SWAP13 SWAP11 SWAP8 SWAP4 PUSH1 0x3 SWAP8 SWAP4 DUP4 PUSH2 0x2C00 SWAP15 SWAP13 SWAP9 LT PUSH2 0x2C7D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x2BD0 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP10 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0x2C70 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE SWAP4 DUP7 ADD SWAP4 SWAP3 DUP12 ADD SWAP3 DUP12 ADD PUSH2 0x2C2C JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP11 DUP7 LT PUSH2 0x2CE9 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP4 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x2CDD JUMPI POP POP PUSH2 0x2B74 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP4 SWAP1 PUSH2 0x2CCF JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2CC4 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x2D39 JUMPI JUMPDEST PUSH2 0x2D19 SWAP1 PUSH2 0x4774 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0xC PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x2D10 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x60 PUSH2 0x120 PUSH1 0x40 MLOAD PUSH2 0x2D69 DUP2 PUSH2 0x3F9A JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE ADD MSTORE DUP1 ISZERO ISZERO DUP1 PUSH2 0x2F00 JUMPI JUMPDEST PUSH2 0x2DB8 SWAP1 PUSH2 0x4A65 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x2DD1 DUP2 PUSH2 0x3F9A JUMP JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP1 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xFF AND SWAP3 SWAP1 DUP4 LT ISZERO PUSH2 0x92E JUMPI PUSH1 0x9 PUSH2 0x2E56 SWAP2 PUSH2 0x5A5 SWAP5 PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x2E4A PUSH1 0x8 DUP3 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH2 0x100 DUP6 ADD MSTORE ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE DUP1 MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x2EB7 PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xC0 DUP6 ADD SWAP1 PUSH2 0x4252 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x120 PUSH2 0x2EEC PUSH2 0x140 SWAP3 DUP4 DUP4 DUP9 ADD MSTORE PUSH2 0x160 DUP8 ADD SWAP1 PUSH2 0x4099 JUMP JUMPDEST SWAP3 ADD MLOAD SWAP1 PUSH1 0x1F NOT DUP6 DUP5 SUB ADD SWAP1 DUP6 ADD MSTORE PUSH2 0x4099 JUMP JUMPDEST POP PUSH1 0x4 SLOAD DUP2 LT PUSH2 0x2DAF JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2F45 SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST PUSH2 0x2F4D PUSH2 0x4756 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x2FC7 JUMPI JUMPDEST PUSH2 0x2FAC SWAP1 PUSH2 0x4774 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xB PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x2FA3 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x1417 PUSH2 0x2FEE PUSH2 0x40D9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3017 SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST PUSH2 0x4402 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x1417 PUSH2 0x3038 PUSH2 0x40D9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3061 SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST PUSH2 0x438B JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x30C3 PUSH2 0x40D9 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP2 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x310E JUMPI PUSH2 0x5A5 DUP6 PUSH2 0x3102 DUP2 DUP10 SUB DUP3 PUSH2 0x3FD2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x4217 JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x30EB JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3147 PUSH2 0x40D9 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP2 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3186 JUMPI PUSH2 0x5A5 DUP6 PUSH2 0x3102 DUP2 DUP10 SUB DUP3 PUSH2 0x3FD2 JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x316F JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x1417 PUSH2 0x31DC PUSH2 0x40D9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3205 SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST PUSH2 0x42EB JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH2 0x3218 CALLDATASIZE PUSH2 0x41E5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3248 SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST DUP2 ISZERO ISZERO DUP1 PUSH2 0x3308 JUMPI JUMPDEST PUSH2 0x325A SWAP1 PUSH2 0x4774 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0xFF PUSH1 0xC PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x32CA JUMPI PUSH2 0x32C5 PUSH32 0xEB44898320C8A9CDEBA7CCE944505307316634CF2EC97635311D70DD46AAAAE6 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x6 DUP6 MSTORE PUSH1 0xC PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP7 DUP4 MSTORE CALLER SWAP7 DUP4 ADD SWAP1 PUSH2 0x4099 JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x10985D18DA08185B1C9958591E481C9958D85B1B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x3251 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x332F PUSH2 0x40EF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DE1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x3365 SWAP1 DUP4 AND PUSH2 0x48E3 JUMP JUMPDEST DUP3 ISZERO ISZERO DUP1 PUSH2 0x3605 JUMPI JUMPDEST PUSH2 0x3377 SWAP1 PUSH2 0x4774 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4D81 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x0 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP6 DUP7 PUSH1 0x0 MSTORE DUP6 MSTORE PUSH2 0x33B4 DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x493B JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x6 SWAP2 DUP3 DUP7 MSTORE PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD DUP3 CALLER SWAP2 PUSH1 0x8 SHR AND SUB PUSH2 0x35C2 JUMPI DUP5 PUSH1 0x0 MSTORE DUP3 DUP7 MSTORE DUP4 PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x92E JUMPI PUSH1 0x2 PUSH2 0x33FA SWAP2 EQ PUSH2 0x47FF JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE DUP3 DUP7 MSTORE DUP3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 GT PUSH2 0x3585 JUMPI DUP5 PUSH1 0x0 MSTORE DUP3 DUP7 MSTORE DUP3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x3428 DUP3 DUP3 SLOAD PUSH2 0x4987 JUMP JUMPDEST SWAP1 SSTORE DUP5 PUSH1 0x0 MSTORE DUP3 DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 DUP2 ADD SLOAD ISZERO PUSH2 0x3571 JUMPI JUMPDEST POP CALLER PUSH1 0x0 MSTORE PUSH1 0x7 DUP7 MSTORE PUSH2 0x345C PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP2 DUP3 SLOAD PUSH2 0x4987 JUMP JUMPDEST SWAP1 SSTORE DUP6 PUSH1 0x0 MSTORE PUSH1 0xD DUP6 MSTORE PUSH2 0x3474 DUP5 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x4994 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x7 DUP6 MSTORE PUSH2 0x100 PUSH1 0x7 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x3493 DUP6 PUSH2 0x3F7E JUMP JUMPDEST DUP2 SLOAD AND DUP5 MSTORE PUSH2 0x34A4 PUSH1 0x1 DUP3 ADD PUSH2 0x3FF3 JUMP JUMPDEST DUP9 DUP6 ADD MSTORE PUSH2 0x34B4 PUSH1 0x2 DUP3 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x34CC DUP7 PUSH1 0x3 DUP4 ADD SLOAD AND PUSH1 0x60 DUP7 ADD PUSH2 0x49CE JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD SWAP6 DUP7 PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD SWAP6 DUP7 PUSH1 0xA0 DUP8 ADD MSTORE DUP3 ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE DUP1 DUP3 GT ISZERO PUSH2 0x353A JUMPI JUMPDEST POP POP PUSH32 0x1183A7BEB644D5E5D07752E6223CF93B80B08A9201F60C52AAA3D23AA32252C1 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x3 DUP5 MSTORE CALLER SWAP4 LOG4 STOP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE DUP4 DUP3 ADD MSTORE PUSH32 0x41E9729CD843B40E15655CC985182426E5C96894AFC3283A7F5D012D43EC8C35 PUSH1 0x40 CALLER SWAP3 LOG2 DUP4 DUP1 PUSH2 0x350A JUMP JUMPDEST PUSH1 0xA ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 OR SWAP1 SSTORE DUP8 PUSH2 0x3440 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E73756666696369656E74207175616E74697479 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP7 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063757272656E7420686F6C6465722063616E2064697370656E7365 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP4 LT PUSH2 0x336E JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH2 0x361E CALLDATASIZE PUSH2 0x41E5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DE1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP3 SWAP2 SWAP1 PUSH2 0x364E SWAP1 PUSH1 0xFF AND PUSH2 0x48E3 JUMP JUMPDEST DUP2 ISZERO ISZERO DUP1 PUSH2 0x3925 JUMPI JUMPDEST PUSH2 0x3660 SWAP1 PUSH2 0x4774 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER DUP2 PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND SUB PUSH2 0x38E0 JUMPI DUP2 MLOAD ISZERO PUSH2 0x3890 JUMPI PUSH1 0x5 SLOAD SWAP2 PUSH2 0x3697 DUP4 PUSH2 0x473B JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH2 0x36A7 DUP4 PUSH2 0x3F63 JUMP JUMPDEST DUP4 DUP4 MSTORE DUP6 DUP4 ADD SWAP2 DUP6 DUP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP6 ADD SWAP3 TIMESTAMP DUP5 MSTORE PUSH1 0xA0 DUP7 ADD SWAP5 PUSH1 0x0 DUP7 MSTORE DUP8 PUSH1 0x0 MSTORE PUSH1 0xA DUP11 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP7 MLOAD DUP8 SSTORE MLOAD SWAP2 PUSH1 0x1 SWAP3 DUP4 DUP9 ADD SSTORE PUSH1 0x2 DUP8 ADD SWAP2 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x3 DUP6 ADD SWAP2 MLOAD SWAP1 DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0xE3C JUMPI PUSH2 0x3725 DUP5 SLOAD PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3847 JUMPI JUMPDEST POP DUP10 SWAP1 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x37D7 JUMPI SWAP3 DUP1 PUSH2 0x3781 SWAP9 SWAP8 SWAP6 SWAP4 DUP2 SWAP4 PUSH1 0x5 SWAP9 SWAP7 PUSH1 0x0 SWAP5 PUSH2 0x37CC JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST MLOAD PUSH1 0x4 DUP5 ADD SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x4 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 CALLER SWAP1 DUP3 PUSH32 0x19E8779A5DE1DEEA64844B3C74C7909A3E9D5774A736170CF5ADD7D652D3CFC2 PUSH1 0x0 DUP1 LOG4 DUP2 MSTORE RETURN JUMPDEST ADD MLOAD SWAP3 POP DUP14 DUP1 PUSH2 0x3753 JUMP JUMPDEST SWAP1 PUSH1 0x1F SWAP4 SWAP3 SWAP4 NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP12 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP14 DUP3 DUP3 LT PUSH2 0x3833 JUMPI POP POP SWAP2 PUSH1 0x5 SWAP8 SWAP6 SWAP4 SWAP2 DUP6 PUSH2 0x3781 SWAP12 SWAP11 SWAP9 SWAP7 SWAP5 LT PUSH2 0x381A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x3765 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0x380D JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE SWAP5 DUP8 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x37ED JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE DUP11 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP13 DUP7 LT PUSH2 0x3886 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP4 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x387A JUMPI POP POP PUSH2 0x372E JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP4 SWAP1 PUSH2 0x386C JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x3861 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45766964656E6365204950465320686173682063616E6E6F7420626520656D70 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7479 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063757272656E7420686F6C6465722063616E207265706F72740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x3657 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x396A SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x39A9 JUMPI PUSH1 0xFF NOT AND PUSH1 0x2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x5 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x6DB JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x39FF PUSH2 0x40EF JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x3A1B JUMPI PUSH2 0x1417 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x457B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 PUSH2 0x19A4 PUSH2 0x3A40 CALLDATASIZE PUSH2 0x4105 JUMP JUMPDEST SWAP2 PUSH2 0x49DA JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 PUSH2 0x3A74 PUSH2 0x3A59 CALLDATASIZE PUSH2 0x4105 JUMP JUMPDEST SWAP1 DUP3 SWAP4 SWAP3 ISZERO ISZERO DUP1 PUSH2 0x3AAB JUMPI JUMPDEST PUSH2 0x3A6E SWAP1 PUSH2 0x4774 JUMP JUMPDEST DUP4 PUSH2 0x49DA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO SWAP2 DUP3 DUP3 MSTORE PUSH32 0x6C064A68A91E386A0F86FBEEA16FD0052A00310BF1FD86927F30D29C9C881C6 DUP5 CALLER SWAP4 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x3 SLOAD DUP5 LT PUSH2 0x3A65 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH2 0x1417 PUSH1 0x4 CALLDATALOAD PUSH2 0x3AD5 PUSH2 0x40EF JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x3AF0 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x42A7 JUMP JUMPDEST PUSH2 0x4514 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DC1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP2 MSTORE PUSH2 0x3B3D PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x4842 JUMP JUMPDEST DUP2 ISZERO ISZERO DUP1 PUSH2 0x3C04 JUMPI JUMPDEST PUSH2 0x3B4F SWAP1 PUSH2 0x4A65 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x8 DUP2 MSTORE CALLER PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SUB PUSH2 0x3BB4 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP2 PUSH1 0x4 DUP4 LT ISZERO PUSH2 0x92E JUMPI PUSH2 0x3B98 PUSH1 0x8 SWAP4 ISZERO PUSH2 0x4AA6 JUMP JUMPDEST PUSH1 0x0 MSTORE MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x2 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061737369676E6564206469737472696275746F722063616E207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1A9958DD PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x4 SLOAD DUP3 LT PUSH2 0x3B46 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DA1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3C78 SWAP1 PUSH1 0xFF AND PUSH2 0x45F0 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x6DB JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x3CE3 PUSH2 0x40D9 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD AND PUSH2 0x3D01 PUSH1 0x1 DUP4 ADD PUSH2 0x3FF3 JUMP JUMPDEST SWAP2 PUSH1 0xFF PUSH1 0x3 PUSH1 0x2 DUP4 ADD SLOAD SWAP3 ADD SLOAD AND PUSH2 0x3D2B PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP6 MSTORE PUSH1 0x80 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD SWAP1 PUSH2 0x4099 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 PUSH1 0xA0 PUSH1 0x40 MLOAD PUSH2 0x3D61 DUP2 PUSH2 0x3F63 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 DUP6 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE DUP1 ISZERO ISZERO DUP1 PUSH2 0x3E44 JUMPI JUMPDEST PUSH2 0x3D8F SWAP1 PUSH2 0x4AF2 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3DA8 DUP3 PUSH2 0x3F63 JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD DUP4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x40 DUP6 ADD SWAP1 DUP2 MSTORE PUSH2 0x3E31 SWAP2 PUSH2 0x3DDE PUSH1 0x3 DUP7 ADD PUSH2 0x3FF3 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP8 ADD SWAP3 DUP4 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x4 DUP9 ADD SLOAD SWAP8 PUSH1 0x80 DUP11 ADD SWAP9 DUP10 MSTORE ADD SLOAD AND SWAP5 PUSH1 0xA0 DUP9 ADD SWAP6 ISZERO ISZERO DUP7 MSTORE PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 DUP2 DUP11 MSTORE MLOAD SWAP1 DUP10 ADD MSTORE MLOAD PUSH1 0x40 DUP9 ADD MSTORE MLOAD AND PUSH1 0x60 DUP7 ADD MSTORE MLOAD PUSH1 0xC0 PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD SWAP1 PUSH2 0x4099 JUMP JUMPDEST SWAP2 MLOAD PUSH1 0xA0 DUP5 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x5 SLOAD DUP2 LT PUSH2 0x3D86 JUMP JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 DUP3 ADD SLOAD AND PUSH2 0x3EC5 PUSH2 0x3E94 PUSH1 0x3 DUP5 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x5 PUSH1 0x4 DUP7 ADD SLOAD SWAP6 ADD SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0xC0 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD SWAP1 PUSH2 0x4099 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2EF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x2EF JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x3F18 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x3F11 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x3F59 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x3F43 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x3F38 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xE3C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x120 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xE3C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xE3C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x1E0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xE3C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xE3C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x4007 DUP5 PUSH2 0x3F29 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x4076 JUMPI POP PUSH1 0x1 EQ PUSH2 0x4033 JUMPI JUMPDEST POP POP PUSH2 0x4031 SWAP3 POP SUB DUP4 PUSH2 0x3FD2 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x405E JUMPI POP POP PUSH2 0x4031 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x4023 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x4046 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4031 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x4023 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x40C5 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x40A4 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2EF JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2EF JUMPI JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP4 GT PUSH2 0x2EF JUMPI DUP1 PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x2EF JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0xE3C JUMPI DUP2 PUSH1 0x5 SHL PUSH1 0x40 MLOAD SWAP4 PUSH1 0x20 SWAP4 PUSH2 0x415B DUP6 DUP5 ADD DUP8 PUSH2 0x3FD2 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x24 DUP5 DUP7 ADD SWAP3 DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x2EF JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x4180 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x4172 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2EF JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE3C JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x41C3 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x3FD2 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x2EF JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x2EF JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2EF JUMPI PUSH2 0x4214 SWAP2 PUSH1 0x4 ADD PUSH2 0x418F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x423E JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x4230 JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x92E JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x92E JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x92E JUMPI MSTORE JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x4291 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x42CD JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x6B476DB4B19B8E11AC475B323C35B9D0F52831CF1D8CF1455692D57FFBCCAAAC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xEEFB95E842A3287179D933B4460BE539A1D5AF11AA8B325BB45C5C8DC92DE4ED SWAP1 PUSH1 0xFF AND PUSH2 0x4386 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4D61 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DE1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4E01 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x4386 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4D61 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x1269C68C28A67305F4A2D47532888D6C961251CFCB06C9CDB6066D32B24B320 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4D81 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x4386 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4D61 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x37775ADB12013835CE20D78B1C52193DD1DA3DC792BC1EC9A2D7427221516C8A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4DC1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x4386 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4D61 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x4386 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4D61 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x4386 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x45F7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E2063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x464D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206D616E7566616374757265722063616E2063616C6C207468697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x333AB731BA34B7B7 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x46AA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175616E74697479206D7573742062652067726561746572207468616E203000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x46F6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4950465320686173682063616E6E6F7420626520656D70747900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x6DB JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x92E JUMPI MSTORE JUMP JUMPDEST PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH2 0x4762 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x477B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x125B9D985B1A590818985D18DA081251 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x47BA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206469737472696275746F7220616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4806 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420626174636820737461747573 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4849 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206469737472696275746F722063616E2063616C6C20746869732066 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x3AB731BA34B7B7 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x48A5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x486F73706974616C206973206E6F7420616374697665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x48EA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920686F73706974616C2063616E2063616C6C20746869732066756E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x3A34B7B7 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4942 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070617469656E742061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x6DB JUMPI JUMP JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0xE3C JUMPI PUSH2 0x49B6 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x4279 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x92E JUMPI MSTORE JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP3 DUP1 ISZERO ISZERO DUP1 PUSH2 0x4A5A JUMPI JUMPDEST PUSH2 0x49F0 SWAP1 PUSH2 0x4774 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x6 DUP4 MSTORE PUSH1 0x40 SWAP3 PUSH1 0x4 DUP5 DUP5 KECCAK256 ADD SLOAD SWAP5 SWAP2 DUP4 SWAP3 JUMPDEST DUP8 MLOAD DUP5 LT ISZERO PUSH2 0x4A4F JUMPI DUP3 DUP5 PUSH1 0x5 SHL DUP10 ADD ADD MLOAD SWAP1 DUP2 DUP2 LT PUSH1 0x0 EQ PUSH2 0x4A3F JUMPI DUP6 MSTORE DUP3 MSTORE PUSH2 0x4A39 DUP6 DUP6 KECCAK256 JUMPDEST SWAP4 PUSH2 0x473B JUMP JUMPDEST SWAP3 PUSH2 0x4A0B JUMP JUMPDEST SWAP1 DUP6 MSTORE DUP3 MSTORE PUSH2 0x4A39 DUP6 DUP6 KECCAK256 PUSH2 0x4A33 JUMP JUMPDEST SWAP5 POP SWAP6 POP POP POP POP EQ SWAP1 JUMP JUMPDEST POP PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x49E7 JUMP JUMPDEST ISZERO PUSH2 0x4A6C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C995C5D595CDD081251 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4AAD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265717565737420616C72656164792070726F63657373656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4AF9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081C995C1BDC9D081251 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH2 0x4C5A JUMPI JUMPDEST PUSH2 0x4C54 JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x4B58 DUP2 PUSH2 0x3FB6 JUMP JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH2 0x4B68 PUSH1 0x1 DUP4 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x4B79 PUSH1 0x2 DUP4 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP2 PUSH2 0x4BAA PUSH1 0x5 DUP3 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD SWAP2 PUSH1 0xC0 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP3 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP3 ADD SLOAD SWAP4 PUSH2 0x120 DUP3 ADD SWAP5 DUP6 MSTORE PUSH1 0xA DUP4 ADD SLOAD PUSH2 0x4BF5 PUSH1 0xFF DUP3 AND PUSH2 0x140 DUP6 ADD PUSH2 0x474A JUMP JUMPDEST PUSH1 0x8 SHR AND PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0xB DUP3 ADD SLOAD PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x1C0 PUSH2 0x4C2B PUSH1 0xD PUSH1 0xFF PUSH1 0xC DUP7 ADD SLOAD AND SWAP5 PUSH2 0x1A0 DUP6 ADD SWAP6 ISZERO ISZERO DUP7 MSTORE ADD PUSH2 0x3FF3 JUMP JUMPDEST SWAP2 ADD MSTORE MLOAD ISZERO SWAP2 DUP3 PUSH2 0x4C49 JUMPI JUMPDEST POP DUP2 PUSH2 0x4C41 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST MLOAD TIMESTAMP LT SWAP2 POP CODESIZE PUSH2 0x4C37 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x4B3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD SWAP1 SWAP3 PUSH2 0x4C8D DUP3 PUSH2 0x3F7E JUMP JUMPDEST DUP4 SLOAD AND DUP2 MSTORE PUSH2 0x4C9E PUSH1 0x1 DUP5 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x4CAF PUSH1 0x2 DUP5 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x3 DUP5 ADD SLOAD AND SWAP1 PUSH2 0x4CCB PUSH1 0x60 DUP3 ADD SWAP3 DUP4 PUSH2 0x49CE JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x100 PUSH1 0x7 PUSH1 0x5 DUP7 ADD SLOAD SWAP6 PUSH1 0xA0 DUP5 ADD SWAP7 DUP8 MSTORE PUSH1 0xFF PUSH1 0x6 DUP3 ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE MLOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x4D4C JUMPI PUSH1 0x1 EQ PUSH2 0x4D1E JUMPI POP MLOAD SWAP1 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 PUSH1 0x1 SHL SWAP2 DUP1 DUP4 DIV PUSH1 0x2 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x4D38 JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT INVALID 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D72606200 STATICCALL 0xC4 0x2B PUSH30 0xC86B75901D61ECFAB2A4A1A6EDED478B97A428094891ABED7D7FFB7A348E SHR PUSH11 0x2869081A26547B49160DD RETURNDATASIZE 0xF7 0x2D SAR PUSH22 0xA570EB9B698292ECFBD454F36A7E1A388BD6FC3AB10D NUMBER 0x4A LOG4 JUMPI DUP16 DUP2 BYTE 0xCB 0xBC RETURN GASPRICE 0xFB SHR PUSH10 0x7486313C90E68B589B8F LT SLOAD PUSH10 0x304896D2D9920902EC0B PUSH22 0x38B2F0839E2092C13ED272ECC8F5B4140CCA307CD927 0xE5 SWAP13 0xBE 0xEA DUP3 SWAP2 0xBF INVALID 0xEE 0x22 DUP16 0xC6 PUSH24 0xF0FA059AEF7B4DD8D5A2646970667358221220029685E3F6 0xB9 0xCA 0xA5 CODECOPY SWAP8 0xA6 DUP16 PUSH27 0x44093E554F6AF62AAE6FEF0AF658018B9AFBBC64736F6C63430008 EQ STOP CALLER ","sourceMap":"507:21397:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;15853:16;507:21397;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5688:12;;;:38;;;507:21397;5680:67;;;:::i;:::-;507:21397;;18774:11;507:21397;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;18774:11;507:21397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;5688:38;-1:-1:-1;507:21397:11;;5704:22;;5688:38;;507:21397;;;;;;-1:-1:-1;;507:21397:11;;;;;;;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;;;;-1:-1:-1;;507:21397:11;;;;-1:-1:-1;;;;;507:21397:11;;;:::i;:::-;;;;3296:45;507:21397;;;;;;;;;3296:45;507:21397;3296:45;;;:::i;:::-;;;;;;;:::i;:::-;507:21397;3296:45;507:21397;3296:45;;507:21397;;3296:45;507:21397;3296:45;;507:21397;3296:45;;;507:21397;3296:45;507:21397;;3296:45;;;;507:21397;3296:45;;507:21397;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;:::i;:::-;4975:10;507:21397;;;;;;;;;;;;;;4940:91;;507:21397;;4940:91;:::i;:::-;5688:12;;;:38;;;507:21397;5680:67;;;:::i;:::-;1315:72:3;;:::i;:::-;507:21397:11;;3218:1;507:21397;;2702:18:4;2698:86;;3218:1:11;507:21397;;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;8235:79;507:21397;;;;;;8235:79;:::i;:::-;507:21397;;;8332:11;507:21397;;4975:10;507:21397;;;;;8332:34;507:21397;;8332:48;507:21397;;;;;8332:11;507:21397;;;8439:28;507:21397;;;8439:28;507:21397;;;;;;;;8431:88;8439:55;;8431:88;:::i;:::-;507:21397;;;8332:11;507:21397;;;8538:32;507:21397;;;8538:32;507:21397;;;;;;;8332:11;507:21397;;8641:32;507:21397;;;8641:32;507:21397;8623:15;:50;507:21397;;;;;;;8332:11;507:21397;;;;;8439:28;8726;;507:21397;;-1:-1:-1;;;;;;507:21397:11;;-1:-1:-1;;;;;;507:21397:11;;;;;;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;8853:35;;:37;507:21397;;8853:37;:::i;:::-;507:21397;;8914:79;507:21397;;;;;;4975:10;8914:79;;507:21397;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;2698:86:4;507:21397:11;;-1:-1:-1;;;2743:30:4;;507:21397:11;;2743:30:4;5688:38:11;-1:-1:-1;507:21397:11;;5704:22;;5688:38;;507:21397;;;;;;-1:-1:-1;;507:21397:11;;;;;;:::i;:::-;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;:::i;:::-;5278:10;507:21397;;;;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;;;;5247:83;;507:21397;;5247:83;:::i;:::-;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;;;13164:79;;507:21397;;13164:79;:::i;:::-;5278:10;507:21397;;13261:9;507:21397;;13253:65;507:21397;13261:30;507:21397;;;13261:30;507:21397;;13253:65;:::i;:::-;13328:57;507:21397;;13336:13;;13328:57;:::i;:::-;507:21397;;13403:25;507:21397;;;;13473:31;507:21397;;;;13570:15;;;;:::i;:::-;507:21397;;5278:10;507:21397;;13261:9;507:21397;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;13261:9;507:21397;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;13261:30;507:21397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13742:43;507:21397;;;;;;;;;;;;;;;;;;;13738:211;;507:21397;;;;;;:::i;:::-;;;;5278:10;507:21397;13993:389;;507:21397;;;;;;;;;13993:389;;507:21397;;;;13993:389;;507:21397;;;;13993:389;;507:21397;;;13993:389;;507:21397;14244:15;507:21397;13993:389;;507:21397;;13993:389;;507:21397;;13993:389;;507:21397;;13993:389;;507:21397;;;;;;;;;;;;;;;;;;;;;;;13993:389;;507:21397;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;;;;;;;;;;13993:389;;507:21397;;;;;;;;;;13993:389;;507:21397;;;;;;13993:389;;507:21397;;;;;;;;;13993:389;;507:21397;;;;;;;;;;;;;;;;;;;13993:389;;507:21397;13261:30;507:21397;;;;13993:389;;507:21397;13261:9;507:21397;;;;13993:389;;507:21397;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;:::i;:::-;;;;;;13738:211;507:21397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13993:389;;507:21397;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5278:10;507:21397;;14401:16;507:21397;;14401:44;507:21397;;;;14401:44;:::i;:::-;507:21397;;;;;;;;;;;;;5278:10;;14469:61;5278:10;;14469:61;;507:21397;;;;;;;;;;-1:-1:-1;507:21397:11;;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21397:11;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21397:11;;;13738:211;507:21397;;13738:211;;;507:21397;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;:::i;:::-;-1:-1:-1;;;;;507:21397:11;;;;;3641:51;507:21397;;;;;;;;;;;3641:51;;;;;507:21397;3641:51;;;;:::i;:::-;507:21397;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;5559:10;507:21397;;;;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;;;;5531:77;;507:21397;;5531:77;:::i;:::-;16920:13;;;:41;;;507:21397;16912:71;;;:::i;:::-;507:21397;;;;16993:14;507:21397;;;;;16993:34;;507:21397;;-1:-1:-1;;507:21397:11;;;;;;16920:41;-1:-1:-1;16949:12:11;507:21397;16937:24;;16920:41;;507:21397;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;;;5130:10;507:21397;;;;5096:89;507:21397;;;;;;5096:89;:::i;:::-;14656:14;;;:44;;;507:21397;14648:75;;;:::i;:::-;507:21397;;;14741:12;507:21397;;5130:10;507:21397;;;;;14741:36;507:21397;;;14741:36;507:21397;;14741:50;507:21397;;;;;14741:12;507:21397;;;14851:31;507:21397;;;14851:31;507:21397;;;;;;;;;14843:94;14741:12;14851:56;;14843:94;:::i;:::-;507:21397;;;14851:31;507:21397;;;14956:31;507:21397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;14656:44;-1:-1:-1;507:21397:11;;14674:26;;14656:44;;507:21397;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;:::i;:::-;5130:10;507:21397;;;;;;;;;;;;;;;;;;5096:89;;507:21397;;5096:89;:::i;:::-;5688:12;;;:38;;;507:21397;5680:67;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9237:11;507:21397;;5130:10;507:21397;9237:35;507:21397;;;9237:35;507:21397;;;;9237:49;507:21397;;;;;9237:11;507:21397;;;9237:35;507:21397;;;9341:28;507:21397;;;;;;;;;9333:91;507:21397;9237:11;9341:58;;9333:91;:::i;:::-;507:21397;;;9442:9;507:21397;;9434:64;507:21397;;;;;9442:29;507:21397;;9434:64;:::i;:::-;507:21397;;;;;;;;;;9237:35;9517:28;;507:21397;;-1:-1:-1;;;;;;507:21397:11;;;;;;-1:-1:-1;;;;;507:21397:11;;;;;9548:23;507:21397;;;;9715:30;507:21397;;;;9442:9;507:21397;;;;;;9680:31;507:21397;;;;;;;;;;;9769:73;507:21397;;;9548:23;507:21397;;5130:10;9769:73;;507:21397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;5688:38;-1:-1:-1;507:21397:11;;5704:22;;5688:38;;507:21397;;;;;;-1:-1:-1;;507:21397:11;;;;4723:26:0;507:21397:11;;;;:::i;:::-;;;;;;;;2484:4:0;507:21397:11;;;;3877:22:0;507:21397:11;2484:4:0;:::i;:::-;4723:26;:::i;:::-;507:21397:11;;;;;;;-1:-1:-1;;507:21397:11;;;;;;:::i;:::-;-1:-1:-1;;;;;507:21397:11;;;;;3582:53;507:21397;;;;;;;;;;;3582:53;;;;;507:21397;3582:53;;;;:::i;507:21397::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18905:9;507:21397;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18905:9;507:21397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;3242:48;507:21397;;;;;;;;3242:48;;;;;:::i;:::-;;;;;;;:::i;:::-;507:21397;3242:48;;507:21397;;3242:48;;507:21397;;;-1:-1:-1;;;;;507:21397:11;;;;3242:48;;;;;:::i;:::-;;;;;507:21397;3242:48;;;;507:21397;3242:48;;;507:21397;3242:48;;;;507:21397;3242:48;;;;507:21397;3242:48;;;;507:21397;3242:48;;;;507:21397;;;3242:48;;;;;;:::i;:::-;507:21397;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3242:48;507:21397;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;3347:51;507:21397;;;;;;;;;;;;;3347:51;507:21397;3347:51;507:21397;3347:51;;507:21397;;3347:51;;;;507:21397;;3347:51;507:21397;3347:51;;507:21397;;3347:51;;507:21397;;;3347:51;;;507:21397;;3347:51;;;507:21397;3347:51;;;;507:21397;3347:51;;;;;;;;:::i;:::-;;;;:::i;:::-;507:21397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;507:21397:11;;:::i;:::-;;17752:10;;:22;:73;;;;507:21397;17752:121;;;;507:21397;;;;;;;17953:13;507:21397;;;;;;;17953:30;507:21397;;;;;;;17953:13;507:21397;;;;;;;18042:32;507:21397;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;17752:121;507:21397;941:23;507:21397;;;;;;;;17752:10;507:21397;;;;;;;;;;17752:121;;:73;507:21397;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;;;17752:10;507:21397;;;;;;;;;;17752:73;;507:21397;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;:::i;:::-;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;:::i;:::-;;;;;;;;5559:10;507:21397;;;;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;5531:77;;507:21397;;5531:77;:::i;:::-;-1:-1:-1;;;;;507:21397:11;;;;;;12093:9;507:21397;;;;;12093:29;;507:21397;;;;;;;12172:23;507:21397;;;;12247:37;507:21397;;;;12335:13;507:21397;;;;;;;;:::i;:::-;-1:-1:-1;;;;;507:21397:11;;;;;12429:342;;507:21397;;;;12429:342;;507:21397;12429:342;507:21397;;;12429:342;;;:::i;:::-;507:21397;;12429:342;;507:21397;;;;12429:342;;507:21397;;;12429:342;;507:21397;;;12429:342;;507:21397;;;12429:342;;;507:21397;;;;;;;;;;12093:9;507:21397;;;;;;;;;;;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;12429:342;;507:21397;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12429:342;;507:21397;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12429:342;;507:21397;;;;;;;;;;;12429:342;507:21397;;12093:9;507:21397;12841:51;507:21397;;;;;;;;;;;;;12429:342;;507:21397;;;;;;12429:342;;507:21397;;;;;12093:29;507:21397;;;;12429:342;;507:21397;;;;;;;;;;;;;;;;;;;;;12429:342;;507:21397;;;-1:-1:-1;;507:21397:11;;;;;;;;;;;12429:342;507:21397;;;;12790:36;;;:::i;:::-;;507:21397;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;507:21397:11;;12841:51;;;507:21397;;;;;-1:-1:-1;507:21397:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21397:11;;;;;-1:-1:-1;507:21397:11;;;;;;;-1:-1:-1;507:21397:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21397:11;;;;;-1:-1:-1;507:21397:11;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;:::i;:::-;5559:10;507:21397;;;;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;5531:77;;507:21397;;5531:77;:::i;:::-;-1:-1:-1;;;;;507:21397:11;;;;;18511:9;507:21397;;;;;18511:29;;507:21397;18503:64;;507:21397;;18503:64;:::i;:::-;507:21397;;18511:9;507:21397;;;;;;;;18577:31;507:21397;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;;3218:1;507:21397;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;5559:10;507:21397;;;;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;5531:77;;507:21397;;5531:77;:::i;:::-;507:21397;;;;;;15717:16;507:21397;;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;:::i;:::-;5559:10;507:21397;;;;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;5531:77;;507:21397;;5531:77;:::i;:::-;-1:-1:-1;;;;;507:21397:11;;;;;18252:9;507:21397;;;;;18252:29;;507:21397;18244:64;;507:21397;;18244:64;:::i;:::-;507:21397;;18252:9;507:21397;;;;18318:35;507:21397;;;18318:35;507:21397;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;;648:30;507:21397;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;:::i;:::-;4975:10;507:21397;;;;;;;;;;;;;;4940:91;;507:21397;;4940:91;:::i;:::-;1315:72:3;;:::i;:::-;6798:57:11;507:21397;;6806:13;;6798:57;:::i;:::-;6887:15;507:21397;;6873:29;507:21397;;;;;6958:27;507:21397;;;;7033:27;507:21397;;7100:65;507:21397;;7108:27;;7100:65;:::i;:::-;507:21397;;7183:37;507:21397;;;;7290:13;;;;:::i;:::-;507:21397;;;;;;;;:::i;:::-;;;;7345:580;507:21397;7345:580;;507:21397;;7345:580;;507:21397;4975:10;507:21397;7345:580;;507:21397;;;;7345:580;;507:21397;;7345:580;;507:21397;;;;7345:580;;507:21397;;;;7345:580;;507:21397;6887:15;7345:580;;;507:21397;;;7345:580;;;507:21397;;7345:580;;;507:21397;4975:10;7345:580;;;507:21397;;7345:580;;;507:21397;;7345:580;;;507:21397;7345:580;;;507:21397;;;;7322:11;507:21397;;;;;;;;;;7345:580;;507:21397;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7345:580;;507:21397;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7345:580;;507:21397;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;7345:580;;507:21397;;;;;;7345:580;;507:21397;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7345:580;;507:21397;7322:11;507:21397;;;;7345:580;;507:21397;;;;;7345:580;;;507:21397;;;;;7345:580;;;507:21397;;;;;;;;7345:580;;;507:21397;;;;;;;;;;7345:580;;;507:21397;-1:-1:-1;;;;;;507:21397:11;;;;;;;;;;;;;-1:-1:-1;;;;;507:21397:11;;;;;7345:580;;;507:21397;;;;;7345:580;;;507:21397;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;7345:580;;507:21397;;7345:580;;507:21397;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7949:72;507:21397;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;4975:10;;7949:72;;;;507:21397;;;;;;;;;;-1:-1:-1;507:21397:11;;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21397:11;;;;;;;;-1:-1:-1;507:21397:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21397:11;;;;;-1:-1:-1;507:21397:11;;;;;;;-1:-1:-1;507:21397:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21397:11;;;;;-1:-1:-1;507:21397:11;;;;;;;-1:-1:-1;507:21397:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21397:11;;;;;-1:-1:-1;507:21397:11;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;6135:37;507:21397;;:::i;:::-;5559:10;507:21397;;;;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;5531:77;;507:21397;;5531:77;:::i;:::-;6135:37;:::i;507:21397::-;;;;;;-1:-1:-1;;507:21397:11;;;;;;:::i;:::-;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;;;;:::i;:::-;5278:10;507:21397;;;;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;;;;;;;;5247:83;;507:21397;;5247:83;:::i;:::-;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;17203:67;507:21397;;;;;;17203:67;:::i;:::-;17280:65;507:21397;;17288:27;;17280:65;:::i;:::-;507:21397;;;;;;;;;;;;;;;;;;;;17390:156;;;507:21397;;;;17390:156;;17494:15;;507:21397;;17390:156;;;507:21397;;;;;;;;;17364:13;507:21397;;;;;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17570:57;507:21397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17494:15;;507:21397;;;;17570:57;;;507:21397;;;;;-1:-1:-1;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17570:57;507:21397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21397:11;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;5688:12;;;:38;;;507:21397;5680:67;;;:::i;:::-;507:21397;;21335:11;507:21397;;;;21335:32;507:21397;;;21335:32;507:21397;;;;;;;;;;5688:38;-1:-1:-1;507:21397:11;;5704:22;;5688:38;;507:21397;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19043:14;;;:44;;;507:21397;19035:75;;;:::i;:::-;507:21397;;19127:12;507:21397;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19127:12;507:21397;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;19043:44::-;-1:-1:-1;507:21397:11;;19061:26;;19043:44;;507:21397;;;;;;-1:-1:-1;;507:21397:11;;;;5559:10;507:21397;;;;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;5531:77;;507:21397;;5531:77;:::i;:::-;1315:72:3;;:::i;:::-;2408:4;507:21397:11;;2398:14:3;507:21397:11;;;2398:14:3;507:21397:11;2427:20:3;507:21397:11;;;5559:10;507:21397;;2427:20:3;507:21397:11;;;;;;;-1:-1:-1;;507:21397:11;;;;;;5688:12;;;:38;;;507:21397;5680:67;;;:::i;:::-;507:21397;;21129:11;507:21397;;;21129:35;507:21397;;;21129:35;507:21397;;;;;;;5688:38;-1:-1:-1;507:21397:11;;5704:22;;5688:38;;507:21397;;;;;;-1:-1:-1;;507:21397:11;;;;6385:33;507:21397;;:::i;:::-;5559:10;507:21397;;;;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;5531:77;;507:21397;;5531:77;:::i;:::-;6385:33;:::i;507:21397::-;;;;;;-1:-1:-1;;507:21397:11;;;;6262:34;507:21397;;:::i;:::-;5559:10;507:21397;;;;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;5531:77;;507:21397;;5531:77;:::i;:::-;6262:34;:::i;507:21397::-;;;;;;-1:-1:-1;;507:21397:11;;;;;;;941:23;507:21397;;;;;;;;;;;;;;;;-1:-1:-1;;;;;507:21397:11;;:::i;:::-;;;;19643:14;507:21397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;507:21397:11;;:::i;:::-;;;;19500:16;507:21397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;1796:7:3;507:21397:11;;;;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;6004:38;507:21397;;:::i;:::-;5559:10;507:21397;;;;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;5531:77;;507:21397;;5531:77;:::i;:::-;6004:38;:::i;507:21397::-;;;;;;;:::i;:::-;5559:10;507:21397;;;;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;;;;;;;;5531:77;;507:21397;;5531:77;:::i;:::-;5688:12;;;:38;;;507:21397;5680:67;;;:::i;:::-;507:21397;;;20387:11;507:21397;;;20387:32;507:21397;;;20387:32;507:21397;;;;;20519:43;507:21397;;;;20387:11;507:21397;;20387:32;507:21397;;;20465:32;20500:4;507:21397;;;;;;;;;;;;;;;;5559:10;507:21397;;;;;:::i;:::-;20519:43;;;507:21397;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;5688:38;-1:-1:-1;5715:11:11;507:21397;5704:22;;5688:38;;507:21397;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;:::i;:::-;5278:10;507:21397;;;;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;;;;;;;;;;;;;5247:83;;507:21397;;5247:83;:::i;:::-;5688:12;;;:38;;;507:21397;5680:67;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;10020:67;507:21397;;;;;;10020:67;:::i;:::-;507:21397;;;10105:11;507:21397;;;;10105:35;507:21397;;;10105:35;507:21397;5278:10;;507:21397;;;;10105:49;507:21397;;;;;;;;;10105:35;507:21397;;;10209:28;507:21397;;;;;;;;10241:23;10201:88;10209:55;;10201:88;:::i;:::-;507:21397;;;;;;;;;;10320:30;507:21397;10307:43;;507:21397;;;;;;;;;;;;10395:30;:43;507:21397;;;10395:43;:::i;:::-;507:21397;;;;;;;;;;;10461:30;;;507:21397;10461:35;10457:126;;507:21397;5278:10;;507:21397;;10634:9;507:21397;;10634:45;507:21397;;;;10634:32;507:21397;;;10634:45;:::i;:::-;507:21397;;;;;10740:14;507:21397;;10740:39;507:21397;;;;10740:39;:::i;:::-;5278:10;507:21397;;10634:9;507:21397;;;10634:9;507:21397;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;10241:23;507:21397;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10893:46;;;;10889:161;;507:21397;;;11073:78;507:21397;;;;;;5278:10;11073:78;;507:21397;10889:161;507:21397;;;;;;;;;10960:79;507:21397;5278:10;10960:79;;10889:161;;;;10457:126;10105:35;10512:28;507:21397;;-1:-1:-1;;507:21397:11;;;;;10457:126;;;507:21397;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5688:38;-1:-1:-1;507:21397:11;;5704:22;;5688:38;;507:21397;;;;;;;:::i;:::-;5278:10;507:21397;;;;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;;;;;;;;5247:83;;507:21397;;5247:83;:::i;:::-;5688:12;;;:38;;;507:21397;5680:67;;;:::i;:::-;507:21397;;;16112:11;507:21397;;;;;;;5278:10;507:21397;16112:35;507:21397;;;16112:35;507:21397;;;;16112:49;507:21397;;;;16214:35;507:21397;;16326:14;507:21397;16326:14;;;;:::i;:::-;;507:21397;;;;;;;:::i;:::-;;;;16386:236;;;507:21397;;;;;16386:236;;5278:10;;507:21397;;16386:236;;;507:21397;;;16386:236;;;16567:15;;507:21397;;;16386:236;;507:21397;;;;;;;16112:35;507:21397;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;16326:14;507:21397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16112:11;507:21397;;16112:35;507:21397;;;16673:28;507:21397;;;;;;;;;;;5278:10;;16746:51;;;507:21397;16746:51;;507:21397;;;;;;;-1:-1:-1;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16326:14;507:21397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16326:14;507:21397;;;;;;;;;;;;16326:14;507:21397;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21397:11;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;5688:38;-1:-1:-1;5715:11:11;507:21397;5704:22;;5688:38;;507:21397;;;;;;-1:-1:-1;;507:21397:11;;;;5559:10;507:21397;;;;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;5531:77;;507:21397;;5531:77;:::i;:::-;1796:7:3;507:21397:11;;;;2140:9:3;2136:62;;507:21397:11;;;1796:7:3;507:21397:11;2674:22:3;507:21397:11;;;5559:10;507:21397;;2674:22:3;507:21397:11;2136:62:3;507:21397:11;;-1:-1:-1;;;2172:15:3;;507:21397:11;;2172:15:3;507:21397:11;;;;;;-1:-1:-1;;507:21397:11;;;;19975:12;507:21397;-1:-1:-1;;507:21397:11;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;:::i;:::-;735:10:2;-1:-1:-1;;;;;507:21397:11;;5397:34:0;5393:102;;5505:37;507:21397:11;;;5505:37:0;:::i;5393:102::-;507:21397:11;;-1:-1:-1;;;5454:30:0;;507:21397:11;;5454:30:0;507:21397:11;;;;;11349:4;507:21397;;;:::i;:::-;11349:4;;:::i;507:21397::-;;;;;11349:4;507:21397;;;:::i;:::-;5688:12;;;;;;:38;;;507:21397;5680:67;;;:::i;:::-;11349:4;;:::i;:::-;507:21397;;;;;;;;;11711:43;11734:10;;11711:43;;507:21397;;;;;;5688:38;-1:-1:-1;5715:11:11;507:21397;5704:22;;5688:38;;507:21397;;;;;;-1:-1:-1;;507:21397:11;;;;4306:25:0;507:21397:11;;;;:::i;:::-;;;;;;;;2484:4:0;507:21397:11;;;;3877:22:0;507:21397:11;2484:4:0;:::i;:::-;4306:25;:::i;507:21397:11:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;;;5130:10;507:21397;;;;5096:89;507:21397;;;;;;5096:89;:::i;:::-;15111:14;;;:44;;;507:21397;15103:75;;;:::i;:::-;507:21397;;;15196:12;507:21397;;5130:10;507:21397;;;;;15196:36;507:21397;;;15196:36;507:21397;;15196:50;507:21397;;;;;15196:12;507:21397;;;15305:31;507:21397;;;15305:31;507:21397;;;;;;;;;15297:94;15196:12;15305:56;;15297:94;:::i;:::-;507:21397;;;15305:31;507:21397;;;15410:31;15196:36;507:21397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;15111:44;-1:-1:-1;507:21397:11;;15129:26;;15111:44;;507:21397;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;;;;;;;;;3877:22:0;507:21397:11;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;5559:10;507:21397;;;;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;5531:77;;507:21397;;5531:77;:::i;:::-;507:21397;;;;;;15591:16;507:21397;;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;-1:-1:-1;;;;;507:21397:11;;;:::i;:::-;;;;3404:53;507:21397;;;;;;;;;3404:53;507:21397;3404:53;;;:::i;:::-;;507:21397;;3404:53;;;507:21397;3404:53;;507:21397;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;19276:13;;;:41;;;507:21397;19268:71;;;:::i;:::-;507:21397;;19356:14;507:21397;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;19276:41;-1:-1:-1;19305:12:11;507:21397;19293:24;;19276:41;;507:21397;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;3463:59;507:21397;;;;;;;;3463:59;;507:21397;;;;;;;3463:59;;;507:21397;;;3463:59;507:21397;3463:59;;;:::i;:::-;507:21397;3463:59;507:21397;3463:59;;507:21397;3463:59;;507:21397;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2649:47:0;;;:87;;;;507:21397:11;;;;;;;2649:87:0;-1:-1:-1;;;829:40:7;;-1:-1:-1;2649:87:0;;;507:21397:11;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;:::o;:::-;;;;;;-1:-1:-1;507:21397:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;507:21397:11;;;;-1:-1:-1;507:21397:11;;-1:-1:-1;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;507:21397:11;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;507:21397:11;;;;;;:::o;:::-;;-1:-1:-1;;507:21397:11;;;;;;;;;;;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;507:21397:11;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;507:21397:11;;;;;;;;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;507:21397:11;;-1:-1:-1;507:21397:11;;;-1:-1:-1;507:21397:11;:::o;:::-;;;;;;;;;;;;3175:103:0;507:21397:11;2930:6:0;507:21397:11;2930:6:0;507:21397:11;;;2930:6:0;507:21397:11;735:10:2;2930:6:0;507:21397:11;;;;;2930:6:0;507:21397:11;;;3495:23:0;3491:108;;3175:103;:::o;3491:108::-;507:21397:11;;;;3541:47:0;;;;;;735:10:2;3541:47:0;;;507:21397:11;;;;;3541:47:0;6155:316;-1:-1:-1;;;;;507:21397:11;2930:6:0;507:21397:11;;;;;;;;;;2930:6:0;;507:21397:11;648:30;;507:21397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:2;6346:40:0;;;507:21397:11;6400:11:0;:::o;6248:217::-;6442:12;;;:::o;6155:316::-;-1:-1:-1;;;;;507:21397:11;2930:6:0;507:21397:11;;;-1:-1:-1;;;;;;;;;;;507:21397:11;;;;;;2930:6:0;;507:21397:11;-1:-1:-1;;;;;;;;;;;802:26:11;507:21397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:2;6346:40:0;;;507:21397:11;6400:11:0;:::o;6155:316::-;-1:-1:-1;;;;;507:21397:11;2930:6:0;507:21397:11;;;;;;;;;;2930:6:0;;507:21397:11;-1:-1:-1;;;;;;;;;;;873:25:11;507:21397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:2;6346:40:0;;;507:21397:11;6400:11:0;:::o;6155:316::-;-1:-1:-1;;;;;507:21397:11;2930:6:0;507:21397:11;;;;;;;;;;2930:6:0;;507:21397:11;-1:-1:-1;;;;;;;;;;;727:29:11;507:21397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:2;6346:40:0;;;507:21397:11;6400:11:0;:::o;6155:316::-;;2930:6;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6252:23:0;6248:217;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:2;6346:40:0;;;507:21397:11;6400:11:0;:::o;6708:317::-;;2930:6;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6802:217:0;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;6900:40:0;735:10:2;6900:40:0;;;507:21397:11;6954:11:0;:::o;507:21397:11:-;;;;:::o;:::-;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21397:11;;;;;;;:::o;:::-;;;;;;;;:::o;1878:128:3:-;507:21397:11;1796:7:3;507:21397:11;;1939:61:3;;1878:128::o;1939:61::-;507:21397:11;;-1:-1:-1;;;1974:15:3;;;;;507:21397:11;;;;:::o;:::-;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;5632:133::-;;;;;5688:12;;;:38;;;5632:133;5680:67;;;:::i;:::-;507:21397;;;;;;11380:11;507:21397;;;;11380:32;507:21397;;;11380:32;507:21397;2559:27:6;2601:13;;2596:134;2634:3;507:21397:11;;2616:16:6;;;;;507:21397:11;;;;;;;;605:59:5;:5;;;:59;:5;;;889:135;;;;2634:3:6;889:135:5;;;605:59;2634:3:6;;:::i;:::-;2601:13;;;605:59:5;889:135;;;;;2634:3:6;889:135:5;;;605:59;;2616:16:6;;;;;;;;2016:33;5632:133:11;:::o;5688:38::-;-1:-1:-1;5715:11:11;507:21397;5704:22;;5688:38;;507:21397;;;;:::o;:::-;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;507:21397:11;;;;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;20616:334;20699:13;;:40;;;;20616:334;20695:58;;20711:1;507:21397;20797:11;507:21397;;;20711:1;507:21397;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;507:21397:11;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;20797:11;507:21397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;20835:71;;;;20616:334;20835:108;;;;20828:115;20616:334;:::o;20835:108::-;507:21397;;;20925:18;;20616:334;:::o;20835:71::-;507:21397;20872:15;:34;;-1:-1:-1;20835:71:11;;;20695:58;20741:12;20711:1;20741:12;:::o;20699:40::-;507:21397;20728:11;507:21397;20716:23;;;20699:40;;21431:323;-1:-1:-1;;;;;507:21397:11;;;-1:-1:-1;507:21397:11;;;21546:9;507:21397;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;21546:9;507:21397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21580:43;21576:132;;507:21397;;21431:323;:::o;21576:132::-;507:21397;;;;;;;;;;;;;;;;;;21639:58;;:::o;507:21397::-;-1:-1:-1;;;507:21397:11;;;;;;;;;-1:-1:-1;;;507:21397:11;;;;;;;"},"methodIdentifiers":{"ADMIN_ROLE()":"75b238fc","DEFAULT_ADMIN_ROLE()":"a217fddf","DISTRIBUTOR_ROLE()":"f0bd87cc","HOSPITAL_ROLE()":"f6ba6678","MANUFACTURER_ROLE()":"965288b0","PATIENT_ROLE()":"ac5cb97d","RURAL_PRIORITY_MULTIPLIER()":"a69d634f","addWHOApprovedDrug(bytes32)":"20749068","approveRequest(uint256)":"d7d1bbdb","calculatePriority(address)":"d890e049","createDrugBatch(string,string,string,bytes32,string,uint256,uint256)":"8d55863b","dispenseToPatient(uint256,address,uint256)":"463e1f15","drugBatches(uint256)":"c177d077","drugRequests(uint256)":"c098cc32","emergencyStockOverride(address,uint256)":"af988145","expiredReports(uint256)":"09c3bdb3","getBatchTransferCount(uint256)":"8102dbcf","getCurrentBatchId()":"e720ac8e","getCurrentReportId()":"39595ee4","getCurrentRequestId()":"15cd1841","getDrugBatch(uint256)":"f276c323","getDrugRequest(uint256)":"85115ab1","getExpiredReport(uint256)":"0c38b75f","getHealthRecord(address)":"bd8f1752","getHospital(address)":"c49b09b5","getHospitalRequests(address)":"5d45e084","getPatientBatches(address)":"69a6dda5","getRoleAdmin(bytes32)":"248a9ca3","grantDistributorRole(address)":"8bba2a0a","grantHospitalRole(address)":"7ee756f2","grantManufacturerRole(address)":"55c4281e","grantPatientRole(address)":"7f2df8b0","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","healthRecords(address)":"11cf8d85","hospitalRequests(address,uint256)":"d50f7e7b","hospitals(address)":"f093cf80","isBatchRecalled(uint256)":"8987e936","isValidBatch(uint256)":"bc7999ad","isWHOApproved(bytes32)":"fdbf6ee5","patientBatches(address,uint256)":"e181143c","pause()":"8456cb59","paused()":"5c975abb","recallDrugBatch(uint256,string)":"4d22436f","registerHospital(address,string,string,uint8,uint256,uint256)":"b6e202d7","rejectRequest(uint256)":"2d7788db","removeWHOApprovedDrug(bytes32)":"99be8c82","renounceRole(bytes32,address)":"36568abe","reportExpiredDrug(uint256,string)":"463b3da0","requestDrugs(address,uint256,uint256,string,string)":"e19d6fd0","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","transferToDistributor(uint256,address)":"e229f2cb","transferToHospital(uint256,address)":"d5e42f79","unpause()":"3f4ba83a","updateHealthRecord(address,string)":"8a817e7b","updateStockThreshold(address,uint256)":"98e9220a","verifyAndLog(uint256,bytes32,bytes32[])":"2ff2ff0b","verifyDrug(uint256,bytes32,bytes32[])":"3316777e","verifyExpiredReport(uint256)":"e17769bf","whoApprovedDrugs(bytes32)":"dfe6bbe6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"drugName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manufacturer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"DrugBatchCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recaller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"DrugRecalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hospital\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"distributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"DrugRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum MedChain.DrugStatus\",\"name\":\"newStatus\",\"type\":\"uint8\"}],\"name\":\"DrugTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"name\":\"DrugVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"reportId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reporter\",\"type\":\"address\"}],\"name\":\"ExpiredDrugReported\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"HealthRecordUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hospital\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"enum MedChain.HospitalType\",\"name\":\"hospitalType\",\"type\":\"uint8\"}],\"name\":\"HospitalRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hospital\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentStock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"StockThresholdReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DISTRIBUTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HOSPITAL_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MANUFACTURER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PATIENT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RURAL_PRIORITY_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_drugHash\",\"type\":\"bytes32\"}],\"name\":\"addWHOApprovedDrug\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"approveRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hospital\",\"type\":\"address\"}],\"name\":\"calculatePriority\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_drugName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_drugCode\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_regulatoryApproval\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expiryDate\",\"type\":\"uint256\"}],\"name\":\"createDrugBatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_patient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"dispenseToPatient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"drugBatches\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"drugName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"drugCode\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"manufacturer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalQuantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"manufactureDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"enum MedChain.DrugStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"currentHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"transferCount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isRecalled\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"regulatoryApproval\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"drugRequests\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hospital\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"distributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"enum MedChain.RequestStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priorityScore\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"urgencyLevel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hospital\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_newStock\",\"type\":\"uint256\"}],\"name\":\"emergencyStockOverride\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"expiredReports\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reportId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"reporter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"}],\"name\":\"getBatchTransferCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBatchId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentReportId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentRequestId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"}],\"name\":\"getDrugBatch\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"drugName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"drugCode\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"manufacturer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalQuantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"manufactureDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"enum MedChain.DrugStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"currentHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"transferCount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isRecalled\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"regulatoryApproval\",\"type\":\"string\"}],\"internalType\":\"struct MedChain.DrugBatch\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getDrugRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hospital\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"distributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"enum MedChain.RequestStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priorityScore\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"urgencyLevel\",\"type\":\"string\"}],\"internalType\":\"struct MedChain.DrugRequest\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reportId\",\"type\":\"uint256\"}],\"name\":\"getExpiredReport\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reportId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"reporter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"internalType\":\"struct MedChain.ExpiredDrugReport\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_patient\",\"type\":\"address\"}],\"name\":\"getHealthRecord\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hospital\",\"type\":\"address\"}],\"name\":\"getHospital\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"hospitalAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"registrationNumber\",\"type\":\"string\"},{\"internalType\":\"enum MedChain.HospitalType\",\"name\":\"hospitalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"stockCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stockThreshold\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"}],\"internalType\":\"struct MedChain.Hospital\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hospital\",\"type\":\"address\"}],\"name\":\"getHospitalRequests\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_patient\",\"type\":\"address\"}],\"name\":\"getPatientBatches\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantDistributorRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantHospitalRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantManufacturerRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantPatientRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"healthRecords\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hospitalRequests\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hospitals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"hospitalAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"registrationNumber\",\"type\":\"string\"},{\"internalType\":\"enum MedChain.HospitalType\",\"name\":\"hospitalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"stockCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stockThreshold\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"}],\"name\":\"isBatchRecalled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"}],\"name\":\"isValidBatch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_drugHash\",\"type\":\"bytes32\"}],\"name\":\"isWHOApproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"patientBatches\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_reason\",\"type\":\"string\"}],\"name\":\"recallDrugBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hospital\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_registrationNumber\",\"type\":\"string\"},{\"internalType\":\"enum MedChain.HospitalType\",\"name\":\"_hospitalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_stockThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_capacity\",\"type\":\"uint256\"}],\"name\":\"registerHospital\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"rejectRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_drugHash\",\"type\":\"bytes32\"}],\"name\":\"removeWHOApprovedDrug\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_evidenceIpfsHash\",\"type\":\"string\"}],\"name\":\"reportExpiredDrug\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_distributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_reason\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_urgencyLevel\",\"type\":\"string\"}],\"name\":\"requestDrugs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_distributor\",\"type\":\"address\"}],\"name\":\"transferToDistributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_hospital\",\"type\":\"address\"}],\"name\":\"transferToHospital\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_patient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"}],\"name\":\"updateHealthRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hospital\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_newThreshold\",\"type\":\"uint256\"}],\"name\":\"updateStockThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_leaf\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"_proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyAndLog\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_batchId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_leaf\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"_proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyDrug\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reportId\",\"type\":\"uint256\"}],\"name\":\"verifyExpiredReport\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"whoApprovedDrugs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Enhanced Decentralized Drug Supply Chain & Health Record Management System\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"MedChain\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract manages the complete pharmaceutical supply chain with enhanced security\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MedChain.sol\":\"MedChain\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/MedChain.sol\":{\"keccak256\":\"0xd94d9233094b5b14cc185cefc25394eb2dc391afd4c176dddc0f4cfa43c41a6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69473ebd7a266b610630141c8894742b298b11019ac07c0e96adeab56b1db842\",\"dweb:/ipfs/QmPrc3WCm9ZtpzhRsN4tk4kWbZNhPehsPiwTU5vqaompfS\"]}},\"version\":1}"}}}}}